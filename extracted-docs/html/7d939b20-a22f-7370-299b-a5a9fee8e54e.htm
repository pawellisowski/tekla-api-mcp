<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Solid Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Solid class" /><meta name="System.Keywords" content="Tekla.Structures.Model.Solid class" /><meta name="System.Keywords" content="Solid class, about Solid class" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Model.Solid" /><meta name="Microsoft.Help.Id" content="T:Tekla.Structures.Model.Solid" /><meta name="Description" content="The Solid class represents the physical object in the model created by a part instance. A solid instance can be used to query the actual geometry of the part and intersect that geometry with, for example, lines and planes." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Model" /><meta name="file" content="7d939b20-a22f-7370-299b-a5a9fee8e54e" /><meta name="guid" content="7d939b20-a22f-7370-299b-a5a9fee8e54e" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>Solid Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            The Solid class represents the physical object in the model created by a part instance.
            A solid instance can be used to query the actual geometry of the part and intersect that
            geometry with, for example, lines and planes.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTD4A57C9C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD4A57C9C_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Tekla.Structures.Model<span id="LSTD4A57C9C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD4A57C9C_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Solid</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">Solid</span> : <span class="identifier">ISolid</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">Solid</span>
	<span class="keyword">Implements</span> <span class="identifier">ISolid</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">Solid</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f7363432-900d-2768-4164-bfa41c5c1474.htm">MaximumPoint</a></td><td><div class="summary">
            Gets the maximum axis-aligned point of the solid in the current plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f3041913-1282-75d7-1a56-7287b7a0e8a8.htm">MinimumPoint</a></td><td><div class="summary">
            Gets the minimum axis-aligned point of the solid in the current plane.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="75e5f4f1-9b46-fce4-7cab-b7033817cc3e.htm">GetAllIntersectionPoints</a></td><td><div class="summary">
            Used to get all the intersection points between the solid and a plane.
            Does not arrange the points into polygons, thus a lot faster.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="6df0f96a-ce73-cec1-6320-f3b7ddeae3cf.htm">GetCutPart</a></td><td><div class="summary">
             Returns a shell enumerator for the solid th at results cutting this solid with the given solid.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="222fbb93-f13f-f7af-0d51-a8b0018fe12d.htm">GetEdgeEnumerator</a></td><td><div class="summary">
            Returns a new edge enumerator in the current plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a760c670-0718-ebd9-2535-86c4df113e2c.htm">GetFaceEnumerator</a></td><td><div class="summary">
            Returns a new face enumerator in the current plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b60a7604-e5c4-cf74-77e0-34139eec5d9a.htm">Intersect(LineSegment)</a></td><td><div class="summary">
            Returns a list of line - solid intersection points.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="829d834d-424a-034e-c903-9cccf1759304.htm">Intersect(Point, Point)</a></td><td><div class="summary">
            Returns a list of line - solid intersection points.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="89e188c7-dedb-4439-db95-78e3a442bebf.htm">Intersect(Point, Point, Point)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Returns a list of plane - solid intersection points. The first item of the list contains
            a list of the outmost intersection polygon and the rest of the items (if there are any)
            inner polygons.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="223e9ea0-6f38-e3b0-f323-574838c399aa.htm">IntersectAllFaces</a></td><td><div class="summary">
             Returns an enumerator for an array list of lists of plane - solid intersection points from all intersecting faces. 
             The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any).
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4b7bd339-892a-5872-8156-d761323779cf.htm">IsValid</a></td><td><div class="summary">
            Returns if the solid is valid.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Model;
<span class="highlight-keyword">using</span> Tekla.Structures.Solid;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
<span class="highlight-keyword">using</span> System.Collections;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Example1()
    {
        Beam MyPart = <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">1000</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>));
        MyPart.Profile.ProfileString = <span class="highlight-literal">"HEA300"</span>;
        MyPart.Insert();
        <span class="highlight-keyword">new</span> Model().CommitChanges();   
        ArrayList MyList = <span class="highlight-keyword">new</span> ArrayList();
        ArrayList MyFaceNormalList = <span class="highlight-keyword">new</span> ArrayList();

        Solid Solid = MyPart.GetSolid();
        FaceEnumerator MyFaceEnum = Solid.GetFaceEnumerator();
        <span class="highlight-keyword">while</span> (MyFaceEnum.MoveNext())
        {
            Face MyFace = MyFaceEnum.Current <span class="highlight-keyword">as</span> Face;
            <span class="highlight-keyword">if</span> (MyFace != <span class="highlight-keyword">null</span>)
            {
                MyFaceNormalList.Add(MyFace.Normal);

                LoopEnumerator MyLoopEnum = MyFace.GetLoopEnumerator();
                <span class="highlight-keyword">while</span> (MyLoopEnum.MoveNext())
                {
                    Loop MyLoop = MyLoopEnum.Current <span class="highlight-keyword">as</span> Loop;
                    <span class="highlight-keyword">if</span> (MyLoop != <span class="highlight-keyword">null</span>)
                    {
                        VertexEnumerator MyVertexEnum = MyLoop.GetVertexEnumerator() <span class="highlight-keyword">as</span> VertexEnumerator;
                        <span class="highlight-keyword">while</span> (MyVertexEnum.MoveNext())
                        {
                            Point MyVertex = MyVertexEnum.Current <span class="highlight-keyword">as</span> Point;
                            <span class="highlight-keyword">if</span> (MyVertex != <span class="highlight-keyword">null</span>)
                            {
                                MyList.Add(MyVertex);
                            }
                        }
                    }
                }
            }
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>