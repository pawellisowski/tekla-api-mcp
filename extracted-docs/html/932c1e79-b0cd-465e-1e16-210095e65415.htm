<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>FacetedBrepFace Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="FacetedBrepFace class" /><meta name="System.Keywords" content="Tekla.Structures.Geometry3d.FacetedBrepFace class" /><meta name="System.Keywords" content="FacetedBrepFace class, about FacetedBrepFace class" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Geometry3d.FacetedBrepFace" /><meta name="Microsoft.Help.Id" content="T:Tekla.Structures.Geometry3d.FacetedBrepFace" /><meta name="Description" content="The FacetedBrepFace class defines a face of a faceted BREP. A FacetedBrepFace cannot be instantiated directly. They are managed internally by a FacetedBrep." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Geometry3d" /><meta name="file" content="932c1e79-b0cd-465e-1e16-210095e65415" /><meta name="guid" content="932c1e79-b0cd-465e-1e16-210095e65415" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>FacetedBrepFace Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             The FacetedBrepFace class defines a face of a faceted BREP.
             A FacetedBrepFace cannot be instantiated directly. They are managed internally by a FacetedBrep.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST3169B61C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3169B61C_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Tekla.Structures.Geometry3d<span id="LST3169B61C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3169B61C_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>FacetedBrepFace</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="e84e8a9d-9721-ca44-1764-fb8035c9778a.htm">Tekla.Structures.Geometry3d</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures (in Tekla.Structures.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">FacetedBrepFace</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">FacetedBrepFace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">FacetedBrepFace</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8cd7effa-c88d-47c4-c160-b1ff0abff7d6.htm">HasHoles</a></td><td><div class="summary">
            Gets a value indicating whether this instance has holes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ebcfaa0e-31e7-cc79-b9d9-4d32fb38080b.htm">Holes</a></td><td><div class="summary">
            Gets the holes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b3aa3e47-a76f-9ccb-8ad2-90bacccd24b3.htm">IsReadOnly</a></td><td><div class="summary">
            Gets a value indicating whether this instance is read only.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d177ac82-3f2b-44ce-21e8-47f756511bbd.htm">VerticeIndexes</a></td><td><div class="summary">
            Gets the vertex indexes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6cfb73bf-53c3-a7c8-80d7-92099feac035.htm">Vertices</a></td><td><div class="summary">
            Gets the vertices.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Linq;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{

<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> PrintHoleVerticesFromCubeFace()
{

    <span class="highlight-keyword">var</span> cubeWithHoleVertices = <span class="highlight-keyword">new</span>[]
    {
        <span class="highlight-keyword">new</span> Vector(   <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>),   <span class="highlight-comment">// 0</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">500.0</span>,    <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>),   <span class="highlight-comment">// 1</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">500.0</span>,  <span class="highlight-number">500.0</span>,    <span class="highlight-number">0.0</span>),   <span class="highlight-comment">// 2</span>
        <span class="highlight-keyword">new</span> Vector(   <span class="highlight-number">0.0</span>,  <span class="highlight-number">500.0</span>,    <span class="highlight-number">0.0</span>),   <span class="highlight-comment">// 3</span>
        <span class="highlight-keyword">new</span> Vector(   <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>,  <span class="highlight-number">500.0</span>),   <span class="highlight-comment">// 4</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">500.0</span>,    <span class="highlight-number">0.0</span>,  <span class="highlight-number">500.0</span>),   <span class="highlight-comment">// 5</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">500.0</span>,  <span class="highlight-number">500.0</span>,  <span class="highlight-number">500.0</span>),   <span class="highlight-comment">// 6</span>
        <span class="highlight-keyword">new</span> Vector(   <span class="highlight-number">0.0</span>,  <span class="highlight-number">500.0</span>,  <span class="highlight-number">500.0</span>),   <span class="highlight-comment">// 7</span>

        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">100.0</span>,  <span class="highlight-number">100.0</span>,  <span class="highlight-number">0.0</span>),     <span class="highlight-comment">// 8</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">300.0</span>,  <span class="highlight-number">100.0</span>,  <span class="highlight-number">0.0</span>),     <span class="highlight-comment">// 9</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">300.0</span>,  <span class="highlight-number">300.0</span>,  <span class="highlight-number">0.0</span>),     <span class="highlight-comment">// 10</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">100.0</span>,  <span class="highlight-number">300.0</span>,  <span class="highlight-number">0.0</span>),     <span class="highlight-comment">// 11</span>

        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">100.0</span>,  <span class="highlight-number">100.0</span>, <span class="highlight-number">500.0</span>),    <span class="highlight-comment">// 12</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">300.0</span>,  <span class="highlight-number">100.0</span>, <span class="highlight-number">500.0</span>),    <span class="highlight-comment">// 13</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">300.0</span>,  <span class="highlight-number">300.0</span>, <span class="highlight-number">500.0</span>),    <span class="highlight-comment">// 14</span>
        <span class="highlight-keyword">new</span> Vector( <span class="highlight-number">100.0</span>,  <span class="highlight-number">300.0</span>, <span class="highlight-number">500.0</span>),    <span class="highlight-comment">// 15</span>
    };

    <span class="highlight-keyword">var</span> outloops = <span class="highlight-keyword">new</span>[]
    {
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">0</span>,  <span class="highlight-number">3</span>,  <span class="highlight-number">2</span>,  <span class="highlight-number">1</span> },
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">0</span>,  <span class="highlight-number">1</span>,  <span class="highlight-number">5</span>,  <span class="highlight-number">4</span> },
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">1</span>,  <span class="highlight-number">2</span>,  <span class="highlight-number">6</span>,  <span class="highlight-number">5</span> },
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">2</span>,  <span class="highlight-number">3</span>,  <span class="highlight-number">7</span>,  <span class="highlight-number">6</span> },
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">3</span>,  <span class="highlight-number">0</span>,  <span class="highlight-number">4</span>,  <span class="highlight-number">7</span> },
        <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">4</span>,  <span class="highlight-number">5</span>,  <span class="highlight-number">6</span>,  <span class="highlight-number">7</span> },

        <span class="highlight-keyword">new</span>[] { <span class="highlight-number">15</span>, <span class="highlight-number">12</span>,   <span class="highlight-number">8</span>, <span class="highlight-number">11</span> },
        <span class="highlight-keyword">new</span>[] { <span class="highlight-number">14</span>, <span class="highlight-number">15</span>,  <span class="highlight-number">11</span>, <span class="highlight-number">10</span> },
        <span class="highlight-keyword">new</span>[] { <span class="highlight-number">13</span>, <span class="highlight-number">14</span>,  <span class="highlight-number">10</span>,  <span class="highlight-number">9</span> },
        <span class="highlight-keyword">new</span>[] { <span class="highlight-number">12</span>, <span class="highlight-number">13</span>,   <span class="highlight-number">9</span>,  <span class="highlight-number">8</span> }
    };

    <span class="highlight-keyword">var</span> innerLoops = <span class="highlight-keyword">new</span> Dictionary{<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>[][]}
    {
        { <span class="highlight-number">0</span>, <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">new</span>[] {  <span class="highlight-number">8</span>,  <span class="highlight-number">9</span>, <span class="highlight-number">10</span>, <span class="highlight-number">11</span> } } }, <span class="highlight-comment">// this innerloop is on face 0</span>
        { <span class="highlight-number">5</span>, <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">new</span>[] { <span class="highlight-number">12</span>, <span class="highlight-number">15</span>, <span class="highlight-number">14</span>, <span class="highlight-number">13</span> } } }, <span class="highlight-comment">// this innerloop is on face 5</span>
    };

    <span class="highlight-keyword">var</span> brep = <span class="highlight-keyword">new</span> FacetedBrep(cubeWithHoleVertices, outloops, innerLoops);

    <span class="highlight-keyword">foreach</span> (FacetedBrepFace face <span class="highlight-keyword">in</span> brep.Faces.Where(x =&gt; x.HasHoles))
    {
        <span class="highlight-keyword">foreach</span> (FacetedBrepFaceHole hole <span class="highlight-keyword">in</span> face.Holes)
        {
            <span class="highlight-keyword">foreach</span> (Vector vertex <span class="highlight-keyword">in</span> hole.Vertices)
            {
                Console.WriteLine(<span class="highlight-literal">"Hole point x:{0} y:{1} z:{2}"</span>, vertex.X, vertex.Y, vertex.Z);
            }
        }
    }
} <span class="highlight-comment">// QueryHoleFromCubeFace</span>
} <span class="highlight-comment">// Example</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="e84e8a9d-9721-ca44-1764-fb8035c9778a.htm">Tekla.Structures.Geometry3d Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>