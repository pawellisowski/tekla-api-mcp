<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ModelObject.GetAllUserProperties Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetAllUserProperties method" /><meta name="System.Keywords" content="ModelObject.GetAllUserProperties method" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Model.ModelObject.GetAllUserProperties" /><meta name="Microsoft.Help.Id" content="M:Tekla.Structures.Model.ModelObject.GetAllUserProperties(System.Collections.Hashtable@)" /><meta name="Description" content="Retrieves all properties for the model object in one hashtable. Type for the returned value must be checked using type casting." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Model" /><meta name="file" content="63b853a0-0af5-af9c-3ce7-05299664d7f8" /><meta name="guid" content="63b853a0-0af5-af9c-3ce7-05299664d7f8" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>ModelObject<span id="LST64698537_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST64698537_0?cpp=::|nu=.");</script>GetAllUserProperties Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Retrieves all properties for the model object in one hashtable.
             Type for the returned value must be checked using type casting.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">GetAllUserProperties</span>(
	<span class="keyword">ref</span> <span class="identifier">Hashtable</span> <span class="parameter">values</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetAllUserProperties</span> ( 
	<span class="keyword">ByRef</span> <span class="parameter">values</span> <span class="keyword">As</span> <span class="identifier">Hashtable</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">values</span></dt><dd>Type: <span class="nolink">System.Collections<span id="LST64698537_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST64698537_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Hashtable</span><span id="LST64698537_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST64698537_2?cpp=%");</script><br />The return value, a hash table that contains all the values that were retrieved successfully.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Boolean</span><br />True if at least one single property was retrieved successfully.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Model;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Collections;

<span class="highlight-keyword">namespace</span> ExampleUserProperties
{
    <span class="highlight-keyword">internal</span> <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            Beam Beam1 = <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">1000</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));
            Beam1.Profile.ProfileString = <span class="highlight-literal">"HEA300"</span>;
            Beam1.Insert();
            Beam1.SetUserProperty(<span class="highlight-literal">"PROJECT_COMMENT"</span>, <span class="highlight-literal">"MyProjectComment"</span>);
            Beam1.SetUserProperty(<span class="highlight-literal">"COMMENT"</span>, <span class="highlight-literal">"MyComment"</span>);
            Beam1.SetUserProperty(<span class="highlight-literal">"PROJECT_INT"</span>, <span class="highlight-number">1</span>);
            Beam1.SetUserProperty(<span class="highlight-literal">"PROJECT_DOUBLE"</span>, <span class="highlight-number">3.25</span>);

            Hashtable values = <span class="highlight-keyword">new</span> Hashtable();
            Beam1.GetAllUserProperties(<span class="highlight-keyword">ref</span> values);
            <span class="highlight-keyword">bool</span> resultstring1 = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">string</span>) == values[<span class="highlight-literal">"PROJECT_COMMENT"</span>].GetType();
            <span class="highlight-keyword">bool</span> resultstring2 = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">string</span>) == values[<span class="highlight-literal">"COMMENT"</span>].GetType();
            <span class="highlight-keyword">bool</span> resultint = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">int</span>) == values[<span class="highlight-literal">"PROJECT_INT"</span>].GetType();
            <span class="highlight-keyword">bool</span> resultdouble = <span class="highlight-keyword">typeof</span>(<span class="highlight-keyword">double</span>) == values[<span class="highlight-literal">"PROJECT_DOUBLE"</span>].GetType();
            <span class="highlight-keyword">bool</span> result1 = <span class="highlight-literal">"MyProjectComment"</span>.Equals(values[<span class="highlight-literal">"PROJECT_COMMENT"</span>]);
            <span class="highlight-keyword">bool</span> result2 = <span class="highlight-literal">"MyComment"</span>.Equals(values[<span class="highlight-literal">"COMMENT"</span>]);
            <span class="highlight-keyword">bool</span> result3 = <span class="highlight-number">1</span> == (<span class="highlight-keyword">int</span>)values[<span class="highlight-literal">"PROJECT_INT"</span>];
            <span class="highlight-keyword">bool</span> result4 = <span class="highlight-number">3.25</span> == (<span class="highlight-keyword">double</span>)values[<span class="highlight-literal">"PROJECT_DOUBLE"</span>];
            <span class="highlight-keyword">bool</span> result5 = <span class="highlight-number">4</span> == values.Count;

            <span class="highlight-keyword">foreach</span> (DictionaryEntry de <span class="highlight-keyword">in</span> values)
            {
                Console.WriteLine(de.Key + <span class="highlight-literal">": "</span> + de.Value.ToString());
            }

            Console.ReadKey();        
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="a90863bf-5ccc-e808-566a-a2ef79a9224d.htm">ModelObject Class</a></div><div class="seeAlsoStyle"><a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>