<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GeometricPlane Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GeometricPlane class" /><meta name="System.Keywords" content="Tekla.Structures.Geometry3d.GeometricPlane class" /><meta name="System.Keywords" content="GeometricPlane class, about GeometricPlane class" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Geometry3d.GeometricPlane" /><meta name="Microsoft.Help.Id" content="T:Tekla.Structures.Geometry3d.GeometricPlane" /><meta name="Description" content="The GeometricPlane class represents a 3d geometric plane." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Geometry3d" /><meta name="file" content="cfcb353e-74cf-bffb-3b89-9b22f9d5e2e4" /><meta name="guid" content="cfcb353e-74cf-bffb-3b89-9b22f9d5e2e4" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>GeometricPlane Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            The GeometricPlane class represents a 3d geometric plane.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST2F6F07F4_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F6F07F4_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Tekla.Structures.Geometry3d<span id="LST2F6F07F4_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F6F07F4_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GeometricPlane</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="e84e8a9d-9721-ca44-1764-fb8035c9778a.htm">Tekla.Structures.Geometry3d</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures (in Tekla.Structures.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">GeometricPlane</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">GeometricPlane</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">GeometricPlane</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="68219778-db02-bba3-d8b4-c639a0e84528.htm">GeometricPlane<span id="LST2F6F07F4_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2F6F07F4_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Instantiates an XY-plane with the origin at (0,0,0).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8fc2061f-88af-4f7a-700e-82b208d463aa.htm">GeometricPlane(CoordinateSystem)</a></td><td><div class="summary">
            Instantiates a plane defined by the given coordinate system.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eb8134d9-731a-4efb-ec8e-2c1400d0b5a8.htm">GeometricPlane(Point, Vector)</a></td><td><div class="summary">
            Instantiates a plane defined by the given origin point and normal vector.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3050d844-f011-429c-7570-9b07cf9d8af4.htm">GeometricPlane(Point, Vector, Vector)</a></td><td><div class="summary">
            Instantiates a plane defined by the given origin, X-axis vector and Y-axis vector.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="78b3578b-212a-a807-c3c2-a125d450e050.htm">Normal</a></td><td><div class="summary">
            The normal vector of the plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="21075e78-07ec-da42-7113-06fc19e3c38d.htm">Origin</a></td><td><div class="summary">
            The origin point of the plane.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0d4be4d7-ed58-feb0-756c-76428dd49e0d.htm">GetNormal</a></td><td><div class="summary">
            Returns a normalized normal vector of the plane.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Collections;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
<span class="highlight-keyword">using</span> Tekla.Structures.Model;
<span class="highlight-keyword">using</span> Tekla.Structures.Model.UI;

<span class="highlight-keyword">namespace</span> CreatePlateWithGeometricPlane
{
    <span class="highlight-keyword">internal</span> <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main()
        {
            ArrayList facePoints = <span class="highlight-keyword">new</span> ArrayList();
            ModelObject modelObject = <span class="highlight-keyword">null</span>;
            Picker picker = <span class="highlight-keyword">new</span> Picker();
            PickInput pickedInput = picker.PickFace(<span class="highlight-literal">"Pick a face to create a plate with geometric plane"</span>);
            IEnumerator myEnum = pickedInput.GetEnumerator();

            <span class="highlight-keyword">while</span> (myEnum.MoveNext())
            {
                InputItem item = myEnum.Current <span class="highlight-keyword">as</span> InputItem;
                <span class="highlight-keyword">if</span> (item.GetInputType() == InputItem.InputTypeEnum.INPUT_1_OBJECT)
                {
                    modelObject = item.GetData() <span class="highlight-keyword">as</span> ModelObject;
                }
                <span class="highlight-keyword">if</span> (item.GetInputType() == InputItem.InputTypeEnum.INPUT_POLYGON)
                {
                    facePoints = item.GetData() <span class="highlight-keyword">as</span> ArrayList;
                }
            }

            <span class="highlight-keyword">if</span>(facePoints.Count &lt; <span class="highlight-number">3</span>) <span class="highlight-keyword">return</span>;

            GeometricPlane plane = <span class="highlight-keyword">new</span> GeometricPlane((Point)facePoints[<span class="highlight-number">1</span>],
                <span class="highlight-keyword">new</span> Vector((Point)facePoints[<span class="highlight-number">0</span>] - (Point)facePoints[<span class="highlight-number">1</span>]), 
                <span class="highlight-keyword">new</span> Vector((Point)facePoints[<span class="highlight-number">2</span>] - (Point)facePoints[<span class="highlight-number">1</span>]));

            CreateContourPlate(facePoints, plane.GetNormal());
            <span class="highlight-keyword">new</span> Model().CommitChanges();

            <span class="highlight-keyword">bool</span> parallel = Parallel.PlaneToPlane(plane, <span class="highlight-keyword">new</span> GeometricPlane(modelObject.GetCoordinateSystem()));
        }

        <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> CreateContourPlate(ArrayList contourPoints, Vector normal)
        {
            <span class="highlight-keyword">double</span> distance = <span class="highlight-number">100.0</span>;
            Vector translate = normal * distance;
            ContourPlate plate = <span class="highlight-keyword">new</span> ContourPlate();
            plate.Profile.ProfileString = <span class="highlight-literal">"PL10"</span>;

            <span class="highlight-keyword">foreach</span> (Point contourPoint <span class="highlight-keyword">in</span> contourPoints)
            {
                plate.Contour.AddContourPoint(<span class="highlight-keyword">new</span> ContourPoint(contourPoint + translate, <span class="highlight-keyword">null</span>));
            }

            plate.Insert();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="e84e8a9d-9721-ca44-1764-fb8035c9778a.htm">Tekla.Structures.Geometry3d Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>