<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ModelHistory Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ModelHistory class" /><meta name="System.Keywords" content="Tekla.Structures.Model.History.ModelHistory class" /><meta name="System.Keywords" content="ModelHistory class, about ModelHistory class" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Model.History.ModelHistory" /><meta name="Microsoft.Help.Id" content="T:Tekla.Structures.Model.History.ModelHistory" /><meta name="Description" content="The ModelHistory class provides history information about the objects of the model that is currently open in Tekla Structures." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Model.History" /><meta name="file" content="5a668281-0f9c-ade2-1c56-79c088d75a34" /><meta name="guid" content="5a668281-0f9c-ade2-1c56-79c088d75a34" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>ModelHistory Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             The ModelHistory class provides history information about the objects of the model
             that is currently open in Tekla Structures.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST2A0CEBB5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Tekla.Structures.Model.History<span id="LST2A0CEBB5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ModelHistory</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="2e1ef719-9c79-b085-4861-5ee23f53fec5.htm">Tekla.Structures.Model.History</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">ModelHistory</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">ModelHistory</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">ModelHistory</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="28d800d0-50b6-521e-b252-add1b7a3baef.htm">GetCurrentModificationStamp</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets the current modification stamp from the model.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8e9cf21c-7ac8-3fa2-40a0-25a3bee15316.htm">GetDeletedObjects</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets a list of the objects that have been deleted after the modification stamp.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e1c9f788-42fe-130d-13aa-265d640884b7.htm">GetDeletedObjectsWithType</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets based on type a list of the objects that have been deleted after the modification stamp.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f8ecb33f-ac31-cc71-f7fc-016d53149a5c.htm">GetLocalChanges</a></td><td><div class="summary">Get changes which are not written out.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f11c9055-8f2d-0b10-c2ba-4c8ee603e71f.htm">GetModifications(String, ModificationStamp)</a></td><td><div class="summary">Lookup modifications since previous call of TakeModifications() without resetting the modstamp</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8c2480d8-c493-0d4b-fee8-9671f447392d.htm">GetModifications(String, IEnumerable<span id="LST2A0CEBB5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>ModelObject<span id="LST2A0CEBB5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ModelObjectEnum<span id="LST2A0CEBB5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, ModificationStamp)</a></td><td><div class="summary">Lookup modifications since previous call of TakeModifications() without resetting the modstamp, with object type filtering</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a8255b6d-95d4-e938-e3a2-c88e86018c8f.htm">GetModifiedObjects</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets a list of the objects that have been added or modified after the modification stamp.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="03657be1-bce3-21b4-6563-ad3c91ffdf5f.htm">GetModifiedObjectsWithType</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Gets based on type a list of the objects that have been added or modified after the modification stamp.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="416c88f3-4e62-2ec5-ec11-9a2b10921f3e.htm">GetNotSharedObjects</a></td><td><div class="summary">Get object which are was created or modified since last ModelSharing WriteOut.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="bef670da-b23b-8b62-bcc6-259c2bc5c819.htm">TakeModifications(String, ModificationStamp)</a></td><td><div class="summary">Take modifications since previous call.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="780d29e6-388d-2137-c685-b603abcbeb7f.htm">TakeModifications(String, IEnumerable<span id="LST2A0CEBB5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>ModelObject<span id="LST2A0CEBB5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ModelObjectEnum<span id="LST2A0CEBB5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2A0CEBB5_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, ModificationStamp)</a></td><td><div class="summary">Take modifications since previous call, with object type filtering.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="27c4394a-6ec7-41e4-ddc0-48de631b64a6.htm">UpdateModificationStampToLatest</a></td><td><div class="summary">
            Updates the modification stamp to latest.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Model;
<span class="highlight-keyword">using</span> Tekla.Structures.Model.History;
<span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Diagnostics;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example1
{
    <span class="highlight-comment">/// to be called before modifications</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Init()
    {
        ModelHistory.TakeModifications(<span class="highlight-literal">"Example1_ModStamp"</span>);
    }

    <span class="highlight-comment">/// to be called when need to handle modifications</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Run_TakeModifications()
    {
        <span class="highlight-keyword">var</span> Modifications = ModelHistory.TakeModifications(<span class="highlight-literal">"Example1_ModStamp"</span>);
        <span class="highlight-keyword">while</span> (Modifications.Modified.MoveNext())
        {
            ModelObject mo = Modifications.Modified.Current;
            Console.WriteLine(<span class="highlight-literal">"Run_TakeModifications: Modified id: {0}"</span>, mo.Identifier.GUID);
        }
    }

    <span class="highlight-comment">/// to be called when need to preview modifications without advancing modstamp</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Run_GetModifications()
    {
        <span class="highlight-keyword">var</span> Modifications = ModelHistory.GetModifications(<span class="highlight-literal">"Example1_ModStamp"</span>);
        <span class="highlight-keyword">while</span> (Modifications.Modified.MoveNext())
        {
            ModelObject mo = Modifications.Modified.Current;
            Console.WriteLine(<span class="highlight-literal">"Run_GetModifications: Modified id: {0}"</span>, mo.Identifier.GUID);
        }
    }

    <span class="highlight-comment">/// this takes each modification only once</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ModificationProcessed()
    {
        <span class="highlight-keyword">this</span>.Init();
        <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1000</span>))
        {
            Name = <span class="highlight-literal">"BEAM1"</span>,
            Profile = <span class="highlight-keyword">new</span> Profile() { ProfileString = <span class="highlight-literal">"HEA400"</span> },
            Material = <span class="highlight-keyword">new</span> Material() { MaterialString = <span class="highlight-literal">"Steel_Undefined"</span> }
        }.Insert();
        <span class="highlight-keyword">new</span> Model().CommitChanges();
        <span class="highlight-keyword">this</span>.Run_TakeModifications(); <span class="highlight-comment">// prints BEAM1</span>
        <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1000</span>)) 
        {
            Name = <span class="highlight-literal">"BEAM2"</span>,
            Profile = <span class="highlight-keyword">new</span> Profile() { ProfileString = <span class="highlight-literal">"HEA400"</span> },
            Material = <span class="highlight-keyword">new</span> Material() { MaterialString = <span class="highlight-literal">"Steel_Undefined"</span> }
        }.Insert();
        <span class="highlight-keyword">new</span> Model().CommitChanges();
        <span class="highlight-keyword">this</span>.Run_TakeModifications(); <span class="highlight-comment">// prints BEAM2, but not BEAM1</span>
    }

    <span class="highlight-comment">/// this always returns all modifications since last TakeModifications()</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ModificationPreviewed()
    {
        <span class="highlight-keyword">this</span>.Init();
        <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1000</span>)) 
        {
            Name = <span class="highlight-literal">"BEAM1"</span>,
            Profile = <span class="highlight-keyword">new</span> Profile() { ProfileString = <span class="highlight-literal">"HEA400"</span> },
            Material = <span class="highlight-keyword">new</span> Material() { MaterialString = <span class="highlight-literal">"Steel_Undefined"</span> }
        }.Insert();
        <span class="highlight-keyword">new</span> Model().CommitChanges();
        <span class="highlight-keyword">this</span>.Run_GetModifications(); <span class="highlight-comment">// prints BEAM1</span>
        <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1000</span>)) 
        {
            Name = <span class="highlight-literal">"BEAM2"</span>,
            Profile = <span class="highlight-keyword">new</span> Profile() { ProfileString = <span class="highlight-literal">"HEA400"</span> },
            Material = <span class="highlight-keyword">new</span> Material() { MaterialString = <span class="highlight-literal">"Steel_Undefined"</span> }
        }.Insert();
        <span class="highlight-keyword">new</span> Model().CommitChanges();
        <span class="highlight-keyword">this</span>.Run_GetModifications(); <span class="highlight-comment">// prints both BEAM1 and BEAM2</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="2e1ef719-9c79-b085-4861-5ee23f53fec5.htm">Tekla.Structures.Model.History Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>