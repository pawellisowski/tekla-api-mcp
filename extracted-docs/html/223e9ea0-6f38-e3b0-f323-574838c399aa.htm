<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Solid.IntersectAllFaces Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IntersectAllFaces method" /><meta name="System.Keywords" content="Solid.IntersectAllFaces method" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Model.Solid.IntersectAllFaces" /><meta name="Microsoft.Help.Id" content="M:Tekla.Structures.Model.Solid.IntersectAllFaces(Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point)" /><meta name="Description" content="Returns an enumerator for an array list of lists of plane - solid intersection points from all intersecting faces. The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Model" /><meta name="file" content="223e9ea0-6f38-e3b0-f323-574838c399aa" /><meta name="guid" content="223e9ea0-6f38-e3b0-f323-574838c399aa" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>Solid<span id="LSTA0707598_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA0707598_0?cpp=::|nu=.");</script>IntersectAllFaces Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Returns an enumerator for an array list of lists of plane - solid intersection points from all intersecting faces. 
             The first item of one list contains points of the outmost intersection polygon and then the inner polygons (if there are any).
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Model (in Tekla.Structures.Model.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">IEnumerator</span> <span class="identifier">IntersectAllFaces</span>(
	<span class="identifier">Point</span> <span class="parameter">point1</span>,
	<span class="identifier">Point</span> <span class="parameter">point2</span>,
	<span class="identifier">Point</span> <span class="parameter">point3</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">IntersectAllFaces</span> ( 
	<span class="parameter">point1</span> <span class="keyword">As</span> <span class="identifier">Point</span>,
	<span class="parameter">point2</span> <span class="keyword">As</span> <span class="identifier">Point</span>,
	<span class="parameter">point3</span> <span class="keyword">As</span> <span class="identifier">Point</span>
) <span class="keyword">As</span> <span class="identifier">IEnumerator</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">point1</span></dt><dd>Type: <a href="c111c59a-fcae-cf59-bb15-632fb811ce4a.htm">Tekla.Structures.Geometry3d<span id="LSTA0707598_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA0707598_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point</a><br />The first plane point.</dd><dt><span class="parameter">point2</span></dt><dd>Type: <a href="c111c59a-fcae-cf59-bb15-632fb811ce4a.htm">Tekla.Structures.Geometry3d<span id="LSTA0707598_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA0707598_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point</a><br />The second plane point.</dd><dt><span class="parameter">point3</span></dt><dd>Type: <a href="c111c59a-fcae-cf59-bb15-632fb811ce4a.htm">Tekla.Structures.Geometry3d<span id="LSTA0707598_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA0707598_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point</a><br />The third plane point.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">IEnumerator</span><br />An enumerator for an array list of intersection point lists.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Model;
<span class="highlight-keyword">using</span> Tekla.Structures.Solid;
<span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
<span class="highlight-keyword">using</span> System.Collections;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Example1()
    {
        Beam Beam = <span class="highlight-keyword">new</span> Beam(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">500</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));
        Beam.Profile.ProfileString = <span class="highlight-literal">"HEA400"</span>;
        Beam.Name = <span class="highlight-literal">"SolidPlane"</span>;
        Beam.Finish = <span class="highlight-literal">"Normal"</span>;
        Beam.Class = <span class="highlight-literal">"6"</span>;
        Beam.Insert();

        Solid Solid = Beam.GetSolid();

        IEnumerator FaceEnum = Solid.IntersectAllFaces(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">1000</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">-50</span>, <span class="highlight-number">1000</span>));
        <span class="highlight-keyword">int</span> FaceIndex = <span class="highlight-number">0</span>;
        <span class="highlight-keyword">while</span> (FaceEnum.MoveNext())
        {
            ArrayList Points = FaceEnum.Current <span class="highlight-keyword">as</span> ArrayList;
            IEnumerator LoopsEnum = Points.GetEnumerator();

            <span class="highlight-keyword">int</span> LoopIndex = <span class="highlight-number">0</span>;
            <span class="highlight-keyword">while</span> (LoopsEnum.MoveNext())
            {
                ArrayList LoopPoints = LoopsEnum.Current <span class="highlight-keyword">as</span> ArrayList;
                <span class="highlight-keyword">if</span> (LoopPoints != <span class="highlight-keyword">null</span>)
                {
                    IEnumerator LoopPointsEnum = LoopPoints.GetEnumerator();
                    <span class="highlight-keyword">while</span> (LoopPointsEnum.MoveNext())
                    {
                        Point SolidPoint = LoopPointsEnum.Current <span class="highlight-keyword">as</span> Point;
                        <span class="highlight-keyword">if</span>(SolidPoint != <span class="highlight-keyword">null</span>)
                        {
                            System.Diagnostics.Debug.WriteLine(<span class="highlight-literal">"Face "</span> + FaceIndex.ToString() + <span class="highlight-literal">" Loop "</span> + LoopIndex.ToString() + <span class="highlight-literal">" Point "</span> + SolidPoint.ToString());
                        }
                    }
                }
                LoopIndex++;
            }
            FaceIndex++;
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="7d939b20-a22f-7370-299b-a5a9fee8e54e.htm">Solid Class</a></div><div class="seeAlsoStyle"><a href="ead2dd1b-97f2-a283-bd41-e985db80929d.htm">Tekla.Structures.Model Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>