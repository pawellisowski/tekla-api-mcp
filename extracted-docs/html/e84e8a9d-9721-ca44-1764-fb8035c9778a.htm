<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Tekla.Structures.Geometry3d Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Tekla.Structures.Geometry3d namespace" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Geometry3d" /><meta name="Microsoft.Help.Id" content="N:Tekla.Structures.Geometry3d" /><meta name="Description" content="The Tekla.Structures.Geometry3d namespace contains the required basic 3D geometric classes that are used by Tekla Structures. Additionally, some helper functionality to ease the usage of these classes is provided." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Geometry3d" /><meta name="file" content="e84e8a9d-9721-ca44-1764-fb8035c9778a" /><meta name="guid" content="e84e8a9d-9721-ca44-1764-fb8035c9778a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>Tekla.Structures.Geometry3d Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary">The Tekla.Structures.Geometry3d namespace contains the required basic 3D geometric classes that are used by Tekla Structures. Additionally, some helper functionality to ease the usage of these classes is provided.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="1f5576c5-859c-2d9b-55f4-5b4d66bbf320.htm">AABB</a></td><td><div class="summary">
            The AABB class represents an axis-aligned 3d bounding box.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="90601fc6-a64e-ea9f-c0e5-46edcf1909e9.htm">Arc</a></td><td><div class="summary">
            Represents an arc geometry
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="62ca8a5c-4cfe-1fe0-5009-75b994b06a07.htm">CoordinateSystem</a></td><td><div class="summary">
            The CoordinateSystem class defines a coordinate system in space. The system is
            defined by an origin, an X-axis and a Y-axis. The Z-axis is the cross product of the X-axis and the Y-axis.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="521b8d2d-b375-34c3-3af2-2baa10d02611.htm">Distance</a></td><td><div class="summary">
            The Distance class contains methods for calculating the distance between geometric objects.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="de56c80a-cf25-a6c3-42ee-195ee7615a12.htm">FacetedBrep</a></td><td><div class="summary">
             The FacetedBrep class defines a faceted BREP.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="932c1e79-b0cd-465e-1e16-210095e65415.htm">FacetedBrepFace</a></td><td><div class="summary">
             The FacetedBrepFace class defines a face of a faceted BREP.
             A FacetedBrepFace cannot be instantiated directly. They are managed internally by a FacetedBrep.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="5e278d3b-6ae3-35bd-fd33-6bb3fac88cfd.htm">FacetedBrepFaceHole</a></td><td><div class="summary">
            The FacetedBrepFaceHole class defines a hole on a faceted BREP face.
            A FacetedBrepFaceHole cannot be instantiated directly. They are managed internally by a FacetedBrepFace.
            You can look also at the code example for the class FacetedBrepFace to see more examples.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="9ce06f7c-25e8-3267-435d-f3943a722c9e.htm">FacetedBrepWithNormals</a></td><td><div class="summary">
            The FacetedBRepWithNormals class defines a faceted BREP that has also vertex normal vectors.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="cfcb353e-74cf-bffb-3b89-9b22f9d5e2e4.htm">GeometricPlane</a></td><td><div class="summary">
            The GeometricPlane class represents a 3d geometric plane.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b5a32e82-3d8b-f5cc-5abd-24b7c92d8db4.htm">GeometryConstants</a></td><td><div class="summary">
            The Constants class of Geometry3d holds certain constant values that are used
            internally by the other geometry classes.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="bfb0abb5-fc13-1e3b-c2e3-3709696304f8.htm">IndirectPolymeshEdge</a></td><td><div class="summary">
             The IndirectEdge class represents a single global edge in a solid
             using integer indexes to reference to vertices instead of directly using
             geometric (coordinate) values.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="35693308-f07a-d279-aaf9-a56b86cd7d5f.htm">Intersection</a></td><td><div class="summary">
            The Intersection class contains methods for calculating intersections between geometric objects.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="abc6b564-46d8-8c73-982a-a898f4337cc2.htm">Line</a></td><td><div class="summary">
            The Line class represents a single infinite line in 3D space. See LineSegment for
            the implementation of a segment of a line.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="e075bf75-c88c-4d32-eb59-077962e93594.htm">LineSegment</a></td><td><div class="summary">
            The LineSegment class represents a single finite segment of a line in 3D space. See Line
            for the implementation of a straight line.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="ec2ec811-7205-62fe-315b-c5935a5e20b8.htm">Matrix</a></td><td><div class="summary">
            The Matrix class represents a 4x3 matrix.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="ef97ef94-ca37-e418-1974-02453a5183fe.htm">MatrixFactory</a></td><td><div class="summary">
            The MatrixFactory class provides a convenient way to generate different
            kinds of transformation matrices.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="5c37ba3e-c3a3-b597-5998-714e46e499c8.htm">OBB</a></td><td><div class="summary">
             The OBB class represents an oriented 3d bounding box.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="500ff3fe-9fc3-17dd-9776-c01150876d46.htm">Parallel</a></td><td><div class="summary">
            The Parallel class contains methods for testing the parallelism of geometric objects.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="c111c59a-fcae-cf59-bb15-632fb811ce4a.htm">Point</a></td><td><div class="summary">
            The Point class represents a single position in 3D space.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="30425d6a-467a-1cf9-a182-0d5859a9b75d.htm">Polycurve</a></td><td><div class="summary">
             Represents 3D polycurve geometry, which itself is composed of one or more connected curves. The class offers
             facilities for iteration through the polycurve, and implements the <a href="101740ff-cebe-b199-47f4-7dbaa88045d6.htm">ICurve</a> interface.
            
             Once this class is constructed, it represents an immutable polycurve. The curves that can be obtained during
             iteration are mere copies of the curves in the polycurve, and mutating them won't affect the polycurve. Please
             use the <a href="8704f981-6637-a70e-e44f-13a39aebd86c.htm">PolycurveGeometryBuilder</a> class to build and manipulate this objects of this class.
            
             Since it implements <span class="nolink">IEnumerable</span>, the curves can be iterated using foreach loops, and it supports
             all of the LINQ operations, and it is possible to build arbitrarily complex queries over the curves of this
             class.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="8704f981-6637-a70e-e44f-13a39aebd86c.htm">PolycurveGeometryBuilder</a></td><td><div class="summary">
             The polycurve geometry builder class is in charge of building the geometry list of a polycurve. All the
             geometries that the builder connects must be connected on the correct end points. The builder has a fluent
             interface, and can be used as follows:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADBDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADBDA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADBDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
<span class="highlight-keyword">using</span> Tekla.Structures.Model;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{
    <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args)
    {
        <span class="highlight-keyword">var</span> segment = <span class="highlight-keyword">new</span> LineSegment(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">1000</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>));
        <span class="highlight-keyword">var</span> arc = <span class="highlight-keyword">new</span> Arc(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">1000</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">2000</span>, <span class="highlight-number">1000</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> Point(<span class="highlight-number">1707.1</span>, <span class="highlight-number">292.89</span>, <span class="highlight-number">0</span>));

        <span class="highlight-keyword">var</span> geometryList = <span class="highlight-keyword">new</span> PolycurveGeometrySolver().Append(arc).Append(segment).GetPolycurve();

        <span class="highlight-keyword">var</span> polycurve = <span class="highlight-keyword">new</span> ControlPolycurve();
        polycurve.Geometry = geometryList;
        polycurve.Insert();
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADBDA");</script></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5f792268-8861-1d47-978b-1380f7d4e1c0.htm">PolyLine</a></td><td><div class="summary">
            The PolyLine class represents a line that consists of one or more line segments.
            To create a polyline, you have to give a list of the points that will form the polyline.
            The first point in the list will be connected with the second point in the list,
            the second point in the list will be connected with the third point in the list, etc.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="47b33428-8930-f48d-da1c-415d61d50d9e.htm">Projection</a></td><td><div class="summary">
            The Projection class contains methods for calculating the projection of geometric objects on
            other geometric objects.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b0d6ce02-e6ee-a703-e1ab-ae8dede8728b.htm">Vector</a></td><td><div class="summary">
            The Vector class defines a direction and magnitude from the current origin.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="1114b1ad-5f17-f45d-5879-ccce0b9366ef.htm">IBoundingVolume</a></td><td><div class="summary">
            The BoundingVolume interface represents any generic 3D bounding volume.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="101740ff-cebe-b199-47f4-7dbaa88045d6.htm">ICurve</a></td><td><div class="summary">
            Interface that represents an abstract curved geometry defined by a set of points. This interface is intended
            to be the base class of 3D curves.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="51c45a07-942f-59e1-2f66-5f88f94356ee.htm">PolymeshEdgeTypeEnum</a></td><td><div class="summary">
            The type of the polymesh edge. This should always correspond 1:1 with
            geometry::IndirectEdge_s::EdgeType_e on the Tekla Structures Core side
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>