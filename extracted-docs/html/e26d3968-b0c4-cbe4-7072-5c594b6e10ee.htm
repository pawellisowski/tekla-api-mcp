<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ShapeItem.Modify Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Modify method" /><meta name="System.Keywords" content="ShapeItem.Modify method" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Catalogs.ShapeItem.Modify" /><meta name="Microsoft.Help.Id" content="M:Tekla.Structures.Catalogs.ShapeItem.Modify" /><meta name="Description" content="Modifies a shape in the shape catalog based on the shape name or if not found, based on shape guid." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Catalogs" /><meta name="file" content="e26d3968-b0c4-cbe4-7072-5c594b6e10ee" /><meta name="guid" content="e26d3968-b0c4-cbe4-7072-5c594b6e10ee" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>ShapeItem<span id="LST7B036343_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7B036343_0?cpp=::|nu=.");</script>Modify Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Modifies a shape in the shape catalog based on the shape name or if not found, based on shape guid.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="cb701b36-e4be-454f-359a-34adaedd239d.htm">Tekla.Structures.Catalogs</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Catalogs (in Tekla.Structures.Catalogs.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Modify</span>()</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Modify</span> <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Boolean</span><br />
             Return true on success.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Tekla.Structures.Catalogs;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{
       <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ModifyCube()
       {
            <span class="highlight-keyword">var</span> insertVertices = <span class="highlight-keyword">new</span>[]
            {
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 0</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">200.5</span>,   <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 1</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">200.5</span>, <span class="highlight-number">200.5</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 2</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>, <span class="highlight-number">200.5</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 3</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>, <span class="highlight-number">200.5</span>), <span class="highlight-comment">// 4</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">200.5</span>,   <span class="highlight-number">0.0</span>, <span class="highlight-number">200.5</span>), <span class="highlight-comment">// 5</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">200.5</span>, <span class="highlight-number">200.5</span>, <span class="highlight-number">200.5</span>), <span class="highlight-comment">// 6</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>, <span class="highlight-number">200.5</span>, <span class="highlight-number">200.5</span>), <span class="highlight-comment">// 7</span>
            };
            <span class="highlight-keyword">var</span> outloop = <span class="highlight-keyword">new</span>[] {
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">3</span>, <span class="highlight-number">2</span>, <span class="highlight-number">1</span> },
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">5</span>, <span class="highlight-number">4</span> },
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">6</span>, <span class="highlight-number">5</span> },
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">3</span>, <span class="highlight-number">7</span>, <span class="highlight-number">6</span> },
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">3</span>, <span class="highlight-number">0</span>, <span class="highlight-number">4</span>, <span class="highlight-number">7</span> },
                      <span class="highlight-keyword">new</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">6</span>, <span class="highlight-number">7</span> }};

            <span class="highlight-keyword">var</span> innerLoop = <span class="highlight-keyword">new</span> Dictionary{<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>[][]}
            {
            };
            <span class="highlight-keyword">var</span> insertFBrep = <span class="highlight-keyword">new</span> FacetedBrep(insertVertices, outloop, innerLoop);

            <span class="highlight-keyword">var</span> insertShapeItem = <span class="highlight-keyword">new</span> ShapeItem
            {
                Name = <span class="highlight-literal">"MyOtherNiceCube"</span>,
                ShapeFacetedBrep = insertFBrep,
                UpAxis = ShapeUpAxis.Z_Axis
            };

            <span class="highlight-keyword">var</span> resultOfInsert = insertShapeItem.Insert();
            insertShapeItem.Select();

            <span class="highlight-keyword">var</span> modifyVertices = <span class="highlight-keyword">new</span>[]
            {
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 0</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">400.0</span>,   <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 1</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">400.0</span>, <span class="highlight-number">400.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 2</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>, <span class="highlight-number">400.0</span>,   <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 3</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>,   <span class="highlight-number">0.0</span>, <span class="highlight-number">400.0</span>), <span class="highlight-comment">// 4</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">400.0</span>,   <span class="highlight-number">0.0</span>, <span class="highlight-number">400.0</span>), <span class="highlight-comment">// 5</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">400.0</span>, <span class="highlight-number">400.0</span>, <span class="highlight-number">400.0</span>), <span class="highlight-comment">// 6</span>
                <span class="highlight-keyword">new</span> Vector(  <span class="highlight-number">0.0</span>, <span class="highlight-number">400.0</span>, <span class="highlight-number">400.0</span>), <span class="highlight-comment">// 7</span>
            };
            <span class="highlight-keyword">var</span> modifyFBrep = <span class="highlight-keyword">new</span> FacetedBrep(modifyVertices, outloop, innerLoop);

            <span class="highlight-keyword">var</span> modifyShapeItem = <span class="highlight-keyword">new</span> ShapeItem
            {
                Name = <span class="highlight-literal">"MyOtherNiceCube"</span>,
                ShapeFacetedBrep = modifyFBrep,
                UpAxis = ShapeUpAxis.Z_Axis
            };

            <span class="highlight-keyword">var</span> resultOfModify = modifyShapeItem.Modify();
            modifyShapeItem.Select();
     }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="3b2b9bdd-99b2-1ed9-3e1f-6a79989bfbd8.htm">ShapeItem Class</a></div><div class="seeAlsoStyle"><a href="cb701b36-e4be-454f-359a-34adaedd239d.htm">Tekla.Structures.Catalogs Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>