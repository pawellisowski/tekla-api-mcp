<html><head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ShapeItem Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ShapeItem class" /><meta name="System.Keywords" content="Tekla.Structures.Catalogs.ShapeItem class" /><meta name="System.Keywords" content="ShapeItem class, about ShapeItem class" /><meta name="Microsoft.Help.F1" content="Tekla.Structures.Catalogs.ShapeItem" /><meta name="Microsoft.Help.Id" content="T:Tekla.Structures.Catalogs.ShapeItem" /><meta name="Description" content="The Shape class contains information about the shapes in the Tekla Structures shape catalog." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Tekla.Structures.Catalogs" /><meta name="file" content="3b2b9bdd-99b2-1ed9-3e1f-6a79989bfbd8" /><meta name="guid" content="3b2b9bdd-99b2-1ed9-3e1f-6a79989bfbd8" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Tekla Open API Reference for Tekla Structures 2025</div><div class="pageBody"><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logo.png" /></td><td class="titleColumn"><h1>ShapeItem Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             The Shape class contains information about the shapes in the Tekla Structures shape catalog.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST65CB063C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65CB063C_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Tekla.Structures.Catalogs<span id="LST65CB063C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65CB063C_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ShapeItem</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="cb701b36-e4be-454f-359a-34adaedd239d.htm">Tekla.Structures.Catalogs</a><br />
    <strong>Assembly:</strong>
   Tekla.Structures.Catalogs (in Tekla.Structures.Catalogs.dll) Version: 2025.0.0-alpha00048669+a99462f17964bc42624ada6e8d316db2d795d226<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ShapeItem</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ShapeItem</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">ShapeItem</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f7ccc361-1d5d-442f-75a4-78cfce2559fb.htm">ShapeItem</a></td><td><div class="summary">
            Creates a new shape instance.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f2c91019-582a-0825-b472-6f21110838d2.htm">BrepType</a></td><td><div class="summary">
            Defines BrepType of shapes.
            @see enum BrepType
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1703944d-6426-4bcb-556e-5b8a96b27971.htm">Extrema</a></td><td><div class="summary">
            The extrema of the shape as an axis-aligned bounding box, as opposed to object-aligned
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="280bdf04-0f26-74f2-a480-c1c7c08b1b3d.htm">Fingerprint</a></td><td><div class="summary">
            A fingerprint value calculated by Tekla Structures to provide quick comparison of geometries to avoid inserting
            same shape multiple times to the catalog. More rigorous comparison is done only for geometries that result in
            identical fingerprints.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d21a7e86-3e88-1d33-d79b-84d760b8fb69.htm">GeometryGuid</a></td><td><div class="summary">
            A unique identifier of the shape geometry, given initially by BrepStorage. This GUID is used as the body of
            the filename for the shape geometry information found in the ShapeGeometries directory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b796ddcb-d1ce-9ff9-9459-fd64f98b6d54.htm">GeometryHash</a></td><td><div class="summary">
            This obsolete property can still be used to store and externally provided unique hash value identifying
            the shape. However, Tekla Structures does not use this value internally for anything. It is strongly
            recommended to use the newer Fingerprint property for future implementations. That value is automatically
            calculated by Tekla Structures for all inserted shapes and is used internally for shape identification.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3bba663b-044b-05ca-d524-54edeef2c9a8.htm">Guid</a></td><td><div class="summary">
            A unique identifier of the actual shape, given initially by the ShapeCatalog. This GUID is used as the body of
            the filename for the shape information found in the Shape directory
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3bee6dbb-c1b6-f8f8-281a-b31e6fc597be.htm">HandlePoints</a></td><td><div class="summary">
             Defines handle points of the shape.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0cc1c18a-7bbb-0877-92f6-96a62556deec.htm">IsSolid</a></td><td><div class="summary">
            Set to true if the shape is detected by TS Core to be a valid solid
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="220ad418-f3ce-95ef-b7fb-f1a23c5b04da.htm">Name</a></td><td><div class="summary">
            The shape Name
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="19128014-736c-8d4d-af15-1bc6d205edd3.htm">ShapeFacetedBrep</a></td><td><div class="summary">
            The data structure containing the geometric information of the shape as a FacetedBRep
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7ee8a9af-5756-9569-3f05-13fc729084ad.htm">UpAxis</a></td><td><div class="summary">
            The direction defining what is understood as "up" in the shape that the API user is providing.
            Typically this is the z-axis, if the data is in global coordinates, coming from a system where Z-axis
            points to global up direction.
            Possible values are: Undefined = 0, X_Axis = 1, Y_Axis = 2, Z_Axis = 3.
            It is highly recommendable to orient shapes in the Tekla Structures native way, that is x-axis on the extrusion line
            and Y-axis pointing up.
            NOTE: Specifying UpAxis to be ShapeUpAxis.Undefined may throw a ‘System.ArgumentOutOfRangeException’ exception
            in certain operations, because the system can not proceed without that information.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4edee409-2a8c-032a-7970-1ffafd7de5d2.htm">CleanAndModify</a></td><td><div class="summary">
            Cleans and stores the brep into the shape catalog
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8c1f5ced-f600-2cea-a417-a76c1d7dded0.htm">Delete</a></td><td><div class="summary">
            Deletes a shape from shape catalog based on the shape name.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="76dde3bd-f5f5-1871-781d-9ed67bc3627f.htm">DeleteMetadata</a></td><td><div class="summary">
             Delete the Shape item's metadata. 
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="c627bccd-30f5-48b6-0ed0-158be2852701.htm">Export</a></td><td><div class="summary">
             Exports the shape item in *.tsc-format to the to given file name.
             If path is not given shape is exported to model folder.
             If filename is empty shape name is used as filename.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="ff0a336a-d372-dee9-0668-a42a5a154dd6.htm">GetAllMetadataKeys</a></td><td><div class="summary">
             Get the Shape item's metadata keys.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="42331a86-fac0-a1be-b369-7e3274919ce5.htm">GetInstanceCount</a></td><td><div class="summary">
             Get the number of instances used in the model of a shape
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="1b91542e-8190-0ef5-0b9f-b31aa67cf9eb.htm">GetMetadata</a></td><td><div class="summary">
             Get the Shape item's metadata.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="16c8423e-6b2e-db2c-d8d7-7f6e267eac0c.htm">Insert</a></td><td><div class="summary">
             Inserts a shape to the shape catalog based on the shape geometry (does not allow duplicate geometry).
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="c2fb6b7e-357a-84f5-2d75-5df5689de671.htm">InsertOrGetGuidsOfShapesWithMatchingGeometry</a></td><td><div class="summary">
             Inserts a shape to the shape catalog based on the shape geometry (does not allow duplicate geometry).
             If, based on fingerprint, the geometry already exists it populates a list of Guids of shapes using that same geometry.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="11c11135-9e1b-f831-fcd5-5c5c894ed8a2.htm">InsertUsingNormals</a></td><td><div class="summary">
             Inserts a shape to the shape catalog using the shape geometry. Uses vertex normals
             to determine edge visibility. If the normal vectors of the vertices belonging to one
             geometrical location are close enough, the edge will be considered smooth and will be
             marked as hidden.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="7aa8d76b-bf72-dc00-4c25-9db20221065e.htm">InsertUsingNormalsAllowDuplicates</a></td><td><div class="summary">
             Inserts a shape to the shape catalog using the shape geometry allowing duplicates. Uses 
             vertex normals to determine edge visibility. If the normal vectors of the vertices belonging
              to one geometrical location are close enough, the edge will be considered smooth and will be
             marked as hidden.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e26d3968-b0c4-cbe4-7072-5c594b6e10ee.htm">Modify</a></td><td><div class="summary">
             Modifies a shape in the shape catalog based on the shape name or if not found, based on shape guid.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="e5d7d104-0f1a-2437-122c-c95d57bc1ecd.htm">Rename</a></td><td><div class="summary">
             Renames a shape in the shape catalog with the given shape name.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="44b27784-3b82-a5a3-48bd-8b6d31e62693.htm">Select<span id="LST65CB063C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65CB063C_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Selects the shape from the database based on the name given in this instance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="78fd7218-d17a-1dd0-fd3c-bda69433da65.htm">Select(String)</a></td><td><div class="summary">
            Selects the shape based on the given name from the database.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="32d1759c-965f-dda0-00c4-29c8348115f3.htm">SetHandlePoints</a></td><td><div class="summary">
             Set the Shape item's Handle Points
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="8053f599-8299-bd82-4c5b-85741968a43c.htm">SetMetadata</a></td><td><div class="summary">
             Set the Shape item's metadata. Inserts the metadata if key is not found, otherwise modifies existing data.
             </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Example
{
    <span class="highlight-keyword">using</span> System;
    <span class="highlight-keyword">using</span> Tekla.Structures.Catalogs;
    <span class="highlight-keyword">using</span> Tekla.Structures.Geometry3d;
    <span class="highlight-keyword">using</span> Tekla.Structures.Model;

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CheckAllShapes()
    {
        ModelObjectEnumerator moe = <span class="highlight-keyword">new</span> Model().GetModelObjectSelector().GetAllObjectsWithType(ModelObject.ModelObjectEnum.BREP);

        <span class="highlight-keyword">while</span> (moe.MoveNext())
        {
            Brep myBrep = moe.Current <span class="highlight-keyword">as</span> Brep;
            <span class="highlight-keyword">if</span> (myBrep == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">continue</span>;
            ShapeItem myShape = <span class="highlight-keyword">new</span> ShapeItem();
            myShape.Name = myBrep.Profile.ProfileString;
            <span class="highlight-keyword">bool</span> result = myShape.Select();

            <span class="highlight-keyword">if</span> (!result)
            {
                myShape.ShapeFacetedBrep = CreateBrepCube(<span class="highlight-number">1000</span>);
                myShape.Insert();
            }
        }
    }

    <span class="highlight-keyword">public</span> FacetedBrep CreateBrepCube(<span class="highlight-keyword">double</span> length)
    {
        <span class="highlight-keyword">var</span> vertices = <span class="highlight-keyword">new</span>[]
        {
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">0.0</span>,     <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 0</span>
                <span class="highlight-keyword">new</span> Vector(length,  <span class="highlight-number">0.0</span>,    <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 1</span>
                <span class="highlight-keyword">new</span> Vector(length,  length, <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 2</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">0.0</span>,     length, <span class="highlight-number">0.0</span>), <span class="highlight-comment">// 3</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">0.0</span>,     <span class="highlight-number">0.0</span>,    length), <span class="highlight-comment">// 4</span>
                <span class="highlight-keyword">new</span> Vector(length,  <span class="highlight-number">0.0</span>,    length), <span class="highlight-comment">// 5</span>
                <span class="highlight-keyword">new</span> Vector(length,  length, length), <span class="highlight-comment">// 6</span>
                <span class="highlight-keyword">new</span> Vector(<span class="highlight-number">0.0</span>,     length, length), <span class="highlight-comment">// 7</span>
            };
        <span class="highlight-keyword">var</span> outloop = <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">3</span>, <span class="highlight-number">2</span>, <span class="highlight-number">1</span> },
                                  <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">5</span>, <span class="highlight-number">4</span> },
                                  <span class="highlight-keyword">new</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">6</span>, <span class="highlight-number">5</span> },
                                  <span class="highlight-keyword">new</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">3</span>, <span class="highlight-number">7</span>, <span class="highlight-number">6</span> },
                                  <span class="highlight-keyword">new</span>[] { <span class="highlight-number">3</span>, <span class="highlight-number">0</span>, <span class="highlight-number">4</span>, <span class="highlight-number">7</span> },
                                  <span class="highlight-keyword">new</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">6</span>, <span class="highlight-number">7</span> }};

        <span class="highlight-keyword">var</span> innerLoop = <span class="highlight-keyword">new</span> Dictionary{<span class="highlight-keyword">int</span>, <span class="highlight-keyword">int</span>[][]}
        {
        };

        <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> FacetedBrep(vertices, outloop, innerLoop);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="cb701b36-e4be-454f-359a-34adaedd239d.htm">Tekla.Structures.Catalogs Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright © 1992-2025 Trimble Solutions Corporation and its licensors. All rights reserved.</p> </div></body></html>