[
  {
    "id": "AnalysisCompositeBeam Class",
    "name": "AnalysisCompositeBeam Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam",
    "summary": "The AnalysisCompositeBeam class contains information related to analysis composite beams."
  },
  {
    "id": "AnalysisModel Class",
    "name": "AnalysisModel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel",
    "summary": "The AnalysisModel class contains information related to analysis models."
  },
  {
    "id": "AnalysisPart Class",
    "name": "AnalysisPart Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart",
    "summary": "The AnalysisPart class contains information related to analysis parts."
  },
  {
    "id": "CrossSectionPoint Class",
    "name": "CrossSectionPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.CrossSectionPoint",
    "summary": "The CrossSectionPoint class defines a point with possible chamfering information"
  },
  {
    "id": "Arc Class",
    "name": "Arc Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Arc",
    "summary": "The Arc class defines an arc that is a two-point line with an optional curve radius.\r\n             It can be created using either two points and a radius or three points."
  },
  {
    "id": "AssemblyDrawing Class",
    "name": "AssemblyDrawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing",
    "summary": "The AssemblyDrawing class is for handling assembly drawings."
  },
  {
    "id": "Bolt Class",
    "name": "Bolt Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Bolt",
    "summary": "The Bolt class contains methods related to bolts.\r\n            A bolt is a drawing object derived from a model object.\r\n            It represents a drawing bolt that has a reference to the\r\n            actual bolt in the model database."
  },
  {
    "id": "CastUnitDrawing Class",
    "name": "CastUnitDrawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CastUnitDrawing",
    "summary": "The CastUnitDrawing class is for handling cast unit drawings."
  },
  {
    "id": "Connection Class",
    "name": "Connection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Connection",
    "summary": "The Connection class contains methods related to connections.\r\n            A connection is a drawing object derived from a model object.\r\n            It represents a drawing connection that has a reference to the\r\n            actual connection in the model database."
  },
  {
    "id": "Drawing Class",
    "name": "Drawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Drawing",
    "summary": "The Drawing class represents a drawing in Tekla Structures."
  },
  {
    "id": "GADrawing Class",
    "name": "GADrawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GADrawing",
    "summary": "The GADrawing class is for handling general arrangement drawings in Tekla Structures."
  },
  {
    "id": "GridLine Class",
    "name": "GridLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GridLine",
    "summary": "The GridLine class contains methods related to grid lines.\r\n             A drawing grid line is always a child of a grid object."
  },
  {
    "id": "LeaderLine Class",
    "name": "LeaderLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LeaderLine",
    "summary": "The LeaderLine class defines a leader line attached to a parent object, for example a Text or a Mark.\r\n            The LeaderLine can be modified to add/remove elbow points or to change where it is pointing."
  },
  {
    "id": "Line Class",
    "name": "Line Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Line",
    "summary": "The Line class defines a line that is a two-point line with an optional bulge (curve)."
  },
  {
    "id": "MultiDrawing Class",
    "name": "MultiDrawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.MultiDrawing",
    "summary": "The MultiDrawing class is for handling multidrawings."
  },
  {
    "id": "Part Class",
    "name": "Part Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Part",
    "summary": "The Part class contains methods related to parts.\r\n            A part is a drawing object derived from a model object.\r\n            It represents a drawing part that has a reference to the\r\n            actual part in the model database."
  },
  {
    "id": "PickerInputObjectAndAPoint Class",
    "name": "PickerInputObjectAndAPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputObjectAndAPoint",
    "summary": "The PickerInputObjectAndAPoint class represents a pick of an object in a view.\r\n            It provides both the picked object and the point used to pick the object.\r\n            Used for values asked by UI.Picker.PickObject(string Prompt, out DrawingObject PickedObject, out ViewBase PickedView, out Point PickedPoint)."
  },
  {
    "id": "PickerInputPoint Class",
    "name": "PickerInputPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputPoint",
    "summary": "The PickerInputPoint class represents a pick of one point in a view.\r\n            Used for values asked by UI.Picker.PickPoint(string Prompt, out Point PickedPoint, out ViewBase PickedView)."
  },
  {
    "id": "ReferenceModel Class",
    "name": "ReferenceModel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReferenceModel",
    "summary": "The ReferenceModel class represents a reference model object in a drawing."
  },
  {
    "id": "SinglePartDrawing Class",
    "name": "SinglePartDrawing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SinglePartDrawing",
    "summary": "The SinglePartDrawing class is for handling single part drawings."
  },
  {
    "id": "Weld Class",
    "name": "Weld Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Weld",
    "summary": "The Weld class represents weldings in drawing views that refer to actual welds in the model database.\r\n            It has properties and methods to control the graphical representation of welding lines.\r\n            Instances of Weld class cannot be inserted with code. These appear in drawings when views are created/updated.\r\n            To modify its graphical representation, attributes of Weld class can use .welo setting files."
  },
  {
    "id": "PartFilterExpressions.PrimaryPart Class",
    "name": "PartFilterExpressions.PrimaryPart Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.PrimaryPart",
    "summary": "The PrimaryPart class represents the primary part filter expression."
  },
  {
    "id": "WeldFilterExpressions.SizeAboveLine Class",
    "name": "WeldFilterExpressions.SizeAboveLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.SizeAboveLine",
    "summary": "The SizeAboveLine class represents the size above line filter expression."
  },
  {
    "id": "WeldFilterExpressions.SizeBelowLine Class",
    "name": "WeldFilterExpressions.SizeBelowLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.SizeBelowLine",
    "summary": "The SizeBelowLine class represents the size below line filter expression."
  },
  {
    "id": "WeldFilterExpressions.TypeAboveLine Class",
    "name": "WeldFilterExpressions.TypeAboveLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.TypeAboveLine",
    "summary": "The TypeAboveLine class represents the type above line filter expression."
  },
  {
    "id": "WeldFilterExpressions.TypeBelowLine Class",
    "name": "WeldFilterExpressions.TypeBelowLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.TypeBelowLine",
    "summary": "The TypeBelowLine class represents the type below line filter expression."
  },
  {
    "id": "Arc Class",
    "name": "Arc Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Arc",
    "summary": "Represents an arc geometry"
  },
  {
    "id": "Line Class",
    "name": "Line Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Line",
    "summary": "The Line class represents a single infinite line in 3D space. See LineSegment for\r\n            the implementation of a segment of a line."
  },
  {
    "id": "Point Class",
    "name": "Point Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Point",
    "summary": "The Point class represents a single position in 3D space."
  },
  {
    "id": "PolyLine Class",
    "name": "PolyLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.PolyLine",
    "summary": "The PolyLine class represents a line that consists of one or more line segments.\r\n            To create a polyline, you have to give a list of the points that will form the polyline.\r\n            The first point in the list will be connected with the second point in the list,\r\n            the second point in the list will be connected with the third point in the list, etc."
  },
  {
    "id": "Assembly Class",
    "name": "Assembly Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Assembly",
    "summary": "The Assembly class defines a single manufacturing unit: objects that are bolted or welded together in the workshop.\r\n            An assembly has a main part and secondary assemblables attached to it. The number of secondaries is limited to 2048.\r\n            Hierarchical assemblies can also have subassemblies attached to them and they can have a parent assembly instance."
  },
  {
    "id": "BasePoint Class",
    "name": "BasePoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BasePoint",
    "summary": "The BasePoint class provides base point related functionalities. Base points can be retrieved using\r\n            ProjectInfo class."
  },
  {
    "id": "BaseRebarGroup Class",
    "name": "BaseRebarGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BaseRebarGroup",
    "summary": "The BaseRebarGroup class is an abstract base class that represents reinforcing bar group classes. \r\n            The reinforcing bar groups derived from the base group are the rebar group, the circled rebar group \r\n            and the curved rebar group."
  },
  {
    "id": "BaseWeld Class",
    "name": "BaseWeld Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BaseWeld",
    "summary": "The BaseWeld abstract class defines a weld between two model objects."
  },
  {
    "id": "Beam Class",
    "name": "Beam Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Beam",
    "summary": "The Beam class represents a single beam in the model.\r\n            A beam has a single start and end point."
  },
  {
    "id": "BooleanPart Class",
    "name": "BooleanPart Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BooleanPart",
    "summary": "The BooleanPart class represents a part cut or an add. This means that a model object is, for example,\r\n            cut with a part instance to create a void to the father part. Typically the operative part is deleted after\r\n            the boolean cut operation. In case of boolean add, operative part is deleted automatically."
  },
  {
    "id": "CircleRebarGroup Class",
    "name": "CircleRebarGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CircleRebarGroup",
    "summary": "The CircleRebarGroup class represents a group of reinforcing bars which have a circular shape."
  },
  {
    "id": "Connection Class",
    "name": "Connection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Connection",
    "summary": "The Connection class represents a connection. A connection is something that connects two or more parts together."
  },
  {
    "id": "ContourPlate Class",
    "name": "ContourPlate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ContourPlate",
    "summary": "The ContourPlate class represents a part made with a contour, such as, a concrete slab."
  },
  {
    "id": "ContourPoint Class",
    "name": "ContourPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ContourPoint",
    "summary": "The ContourPoint class defines a point with possible chamfering information,\r\n            used, for example, to define a contour plate."
  },
  {
    "id": "ControlArc Class",
    "name": "ControlArc Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlArc",
    "summary": "The ControlArc class defines a user defined arc helping in modeling work."
  },
  {
    "id": "ControlLine Class",
    "name": "ControlLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlLine",
    "summary": "The ControlLine class defines a user defined (possibly magnetic) line helping in modeling work."
  },
  {
    "id": "ControlPoint Class",
    "name": "ControlPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlPoint",
    "summary": "The ControlPoint class defines a user defined point helping in modeling work."
  },
  {
    "id": "CurvedRebarGroup Class",
    "name": "CurvedRebarGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CurvedRebarGroup",
    "summary": "The CurvedRebarGroup class represents a group of reinforcing bars which have a curved shape."
  },
  {
    "id": "CustomPart Class",
    "name": "CustomPart Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CustomPart",
    "summary": "The CustomPart class represents a custom part object in the Tekla Structures model.\r\n            A custom part is a modeling tool that typically assembles multiple parts to build some\r\n            type of a beam-like structure, for example a tapered beam or a sandwich panel."
  },
  {
    "id": "LoadLine Class",
    "name": "LoadLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadLine",
    "summary": "The LoadLine class defines a linearly-distributed force or torsion."
  },
  {
    "id": "LoadPoint Class",
    "name": "LoadPoint Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadPoint",
    "summary": "The LoadPoint class defines a concentrated force or a bending moment."
  },
  {
    "id": "LogicalWeld Class",
    "name": "LogicalWeld Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LogicalWeld",
    "summary": "The LogicalWeld class represents a group of welds in the model.\r\n            A logical weld contains a list of children welds. \r\n            The primary properties need to be the same in all the children welds."
  },
  {
    "id": "Model Class",
    "name": "Model Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Model",
    "summary": "The Model class represents a single model open in Tekla Structures.\r\n            Before interaction with the model, the user will have to create one\r\n            instance of this class."
  },
  {
    "id": "Part Class",
    "name": "Part Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Part",
    "summary": "The Part class represents a part in the model.\r\n            A part can be either a beam, a polybeam or a contour plate."
  },
  {
    "id": "PolyBeam Class",
    "name": "PolyBeam Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PolyBeam",
    "summary": "The PolyBeam class represents a continuous beam with a contour as input."
  },
  {
    "id": "PolygonWeld Class",
    "name": "PolygonWeld Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PolygonWeld",
    "summary": "The PolygonWeld class represents a polygon weld in the model.\r\n            A polygon weld has a main part and a secondary part."
  },
  {
    "id": "RebarGroup Class",
    "name": "RebarGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarGroup",
    "summary": "The RebarGroup class represents a group of reinforcing bars."
  },
  {
    "id": "ReferenceModel Class",
    "name": "ReferenceModel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ReferenceModel",
    "summary": "The ReferenceModel class contains methods related to reference models.\r\n            A reference model is a reference of an external model."
  },
  {
    "id": "Reinforcement Class",
    "name": "Reinforcement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Reinforcement",
    "summary": "The Reinforcement class represents a reinforcement in the model. A reinforcement can either be a mesh,\r\n            a single rebar, a rebar group or a strand."
  },
  {
    "id": "Solid Class",
    "name": "Solid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Solid",
    "summary": "The Solid class represents the physical object in the model created by a part instance.\r\n            A solid instance can be used to query the actual geometry of the part and intersect that\r\n            geometry with, for example, lines and planes."
  },
  {
    "id": "SpiralBeam Class",
    "name": "SpiralBeam Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SpiralBeam",
    "summary": "A class for the spiral beam part."
  },
  {
    "id": "Weld Class",
    "name": "Weld Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Weld",
    "summary": "The Weld class represents a normal weld in the model.\r\n            A normal weld has a main part and a secondary part."
  },
  {
    "id": "GraphicPolyLine Class",
    "name": "GraphicPolyLine Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.GraphicPolyLine",
    "summary": "Create a black line with width 1 and solid line type."
  },
  {
    "id": "Assertion Class",
    "name": "Assertion Class",
    "type": "class",
    "namespace": "Tekla.Structures.Assertion",
    "summary": "Defines an assertion by the method it failed in and the messages it\r\n            provided."
  },
  {
    "id": "ClashCheckOptions Class",
    "name": "ClashCheckOptions Class",
    "type": "class",
    "namespace": "Tekla.Structures.ClashCheckOptions",
    "summary": "The ClashCheckOptions class represents the clash check options."
  },
  {
    "id": "ComponentOptions Class",
    "name": "ComponentOptions Class",
    "type": "class",
    "namespace": "Tekla.Structures.ComponentOptions",
    "summary": "The ComponentOptions class represents the component options."
  },
  {
    "id": "Identifier Class",
    "name": "Identifier Class",
    "type": "class",
    "namespace": "Tekla.Structures.Identifier",
    "summary": "The Identifier class represents an identifier that holds information\r\n            about the identifier number of an object."
  },
  {
    "id": "ModuleManager Class",
    "name": "ModuleManager Class",
    "type": "class",
    "namespace": "Tekla.Structures.ModuleManager",
    "summary": "The ModuleManager class handles the product model module configuration information: the\r\n            information that defines what configuration the customer is currently running."
  },
  {
    "id": "TeklaStructuresFiles Class",
    "name": "TeklaStructuresFiles Class",
    "type": "class",
    "namespace": "Tekla.Structures.TeklaStructuresFiles",
    "summary": "The TeklaStructuresFiles class is for the paths where the attributes file will be searched for."
  },
  {
    "id": "TeklaStructuresInfo Class",
    "name": "TeklaStructuresInfo Class",
    "type": "class",
    "namespace": "Tekla.Structures.TeklaStructuresInfo",
    "summary": "The TeklaStructuresInfo class provides information about Tekla Structures."
  },
  {
    "id": "TeklaStructuresSettings Class",
    "name": "TeklaStructuresSettings Class",
    "type": "class",
    "namespace": "Tekla.Structures.TeklaStructuresSettings",
    "summary": "The TeklaStructuresSettings class provides methods to inquire application settings."
  },
  {
    "id": "TeklaStructuresSettings.ToolOptionNames Class",
    "name": "TeklaStructuresSettings.ToolOptionNames Class",
    "type": "class",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.ToolOptionNames",
    "summary": "Tool option names."
  },
  {
    "id": "TeklaStructuresVariables Class",
    "name": "TeklaStructuresVariables Class",
    "type": "class",
    "namespace": "Tekla.Structures.TeklaStructuresVariables",
    "summary": "The EnvironmentVariables class contains a sorted list specializing in getting active\r\n            environment variables and advanced option settings. It also checks options.ini files\r\n            in the active model folder as well as options_user.ini files."
  },
  {
    "id": "Analysis Class",
    "name": "Analysis Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.Analysis",
    "summary": "The Analysis class is a class from which the user can query analysis instances."
  },
  {
    "id": "AnalysisArea Class",
    "name": "AnalysisArea Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea",
    "summary": "The AnalysisArea class contains information related to analysis areas."
  },
  {
    "id": "AnalysisAreaPolygon Class",
    "name": "AnalysisAreaPolygon Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon",
    "summary": "The AnalysisAreaPolygon class contains information related to analysis area polygons."
  },
  {
    "id": "AnalysisBar Class",
    "name": "AnalysisBar Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar",
    "summary": "The AnalysisBar class contains information related to analysis bars."
  },
  {
    "id": "AnalysisBeamEnd Class",
    "name": "AnalysisBeamEnd Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisBeamEnd",
    "summary": "The AnalysisBeamEnd class contains information related to analysis beam ends."
  },
  {
    "id": "AnalysisConnectivity Class",
    "name": "AnalysisConnectivity Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity",
    "summary": "The AnalysisConnectivity class contains information related to analysis connectivities."
  },
  {
    "id": "AnalysisCrossSection Class",
    "name": "AnalysisCrossSection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection",
    "summary": "The AnalysisCrossSection class contains information related to analysis cross sections."
  },
  {
    "id": "AnalysisCurvature Class",
    "name": "AnalysisCurvature Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisCurvature",
    "summary": "The AnalysisCurvature class contains information related to analysis curvatures."
  },
  {
    "id": "AnalysisDecomposedAreaLoad Class",
    "name": "AnalysisDecomposedAreaLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad",
    "summary": "The AnalysisDecomposedAreaLoad class contains decomposed area load information."
  },
  {
    "id": "AnalysisDecomposedBarLoad Class",
    "name": "AnalysisDecomposedBarLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad",
    "summary": "The AnalysisDecomposedBarLoad class contains information related to decomposed bar loads."
  },
  {
    "id": "AnalysisDecomposedLoad Class",
    "name": "AnalysisDecomposedLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad",
    "summary": "The AnalysisDecomposedLoad class contains information related to decomposed loads."
  },
  {
    "id": "AnalysisDecomposedMemberLoad Class",
    "name": "AnalysisDecomposedMemberLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad",
    "summary": "The AnalysisDecomposedMemberLoad class contains information related to decomposed member loads."
  },
  {
    "id": "AnalysisDecomposedNodeLoad Class",
    "name": "AnalysisDecomposedNodeLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedNodeLoad",
    "summary": "The AnalysisDecomposedNodeLoad class contains information related to decomposed node loads."
  },
  {
    "id": "AnalysisDecomposedSelfweightLoad Class",
    "name": "AnalysisDecomposedSelfweightLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedSelfweightLoad",
    "summary": "The AnalysisDecomposedSelfweightLoad class contains information of decomposed selfweight loads."
  },
  {
    "id": "AnalysisDecomposedTemperatureLoad Class",
    "name": "AnalysisDecomposedTemperatureLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad",
    "summary": "The AnalysisDecomposedTemperatureLoad class contains information related to decomposed temperature loads."
  },
  {
    "id": "AnalysisDeltaZ Class",
    "name": "AnalysisDeltaZ Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDeltaZ",
    "summary": "The AnalysisDeltaZ class contains delta Z information for an analysis model."
  },
  {
    "id": "AnalysisDesignCode Class",
    "name": "AnalysisDesignCode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode",
    "summary": "The AnalysisDesignCode class contains information related to analysis design codes."
  },
  {
    "id": "AnalysisDesignParameter Class",
    "name": "AnalysisDesignParameter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameter",
    "summary": "The AnalysisDesignParameter class contains information related to analysis design parameters."
  },
  {
    "id": "AnalysisDesignParameterBase Class",
    "name": "AnalysisDesignParameterBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterBase",
    "summary": "The AnalysisDesignParameterBase class contains base information related to analysis design parameters."
  },
  {
    "id": "AnalysisDesignParameterMulti Class",
    "name": "AnalysisDesignParameterMulti Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti",
    "summary": "The AnalysisDesignParameterMulti class contains information related to analysis design parameters with multi values."
  },
  {
    "id": "AnalysisDesignSettings Class",
    "name": "AnalysisDesignSettings Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings",
    "summary": "The AnalysisDesignSettings class contains information about analysis design settings."
  },
  {
    "id": "AnalysisEccentricity Class",
    "name": "AnalysisEccentricity Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisEccentricity",
    "summary": "The AnalysisEccentricity class contains eccentricity information for an analysis model."
  },
  {
    "id": "AnalysisEdge Class",
    "name": "AnalysisEdge Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge",
    "summary": "The AnalysisEdge class contains information related to analysis edges."
  },
  {
    "id": "AnalysisFace Class",
    "name": "AnalysisFace Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisFace",
    "summary": "The AnalysisFace class contains information related to analysis faces."
  },
  {
    "id": "AnalysisLabel Class",
    "name": "AnalysisLabel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisLabel",
    "summary": "The AnalysisLabel class contains information related to analysis labels."
  },
  {
    "id": "AnalysisLoadCombination Class",
    "name": "AnalysisLoadCombination Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination",
    "summary": "The AnalysisLoadCombination class contains information related to analysis load combinations."
  },
  {
    "id": "AnalysisLoadGroup Class",
    "name": "AnalysisLoadGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup",
    "summary": "The AnalysisLoadGroup class contains information related to analysis load groups."
  },
  {
    "id": "AnalysisLocalCoordinateSystem Class",
    "name": "AnalysisLocalCoordinateSystem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisLocalCoordinateSystem",
    "summary": "The AnalysisLocalCoordinateSystem class contains local coordinate system\r\n            information for an analysis model."
  },
  {
    "id": "AnalysisMaterial Class",
    "name": "AnalysisMaterial Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial",
    "summary": "The AnalysisMaterial class contains the material information."
  },
  {
    "id": "AnalysisMember Class",
    "name": "AnalysisMember Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember",
    "summary": "The AnalysisMember class contains information related to analysis members."
  },
  {
    "id": "AnalysisModelAnalysisProperties Class",
    "name": "AnalysisModelAnalysisProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties",
    "summary": "The AnalysisModelAnalysisProperties class contains the analysis property information for an analysis model."
  },
  {
    "id": "AnalysisModelConnectivityRule Class",
    "name": "AnalysisModelConnectivityRule Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule",
    "summary": "The AnalysisModelConnectivityRule class contains information related to analysis model connectivity rules."
  },
  {
    "id": "AnalysisModelDesignProperties Class",
    "name": "AnalysisModelDesignProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties",
    "summary": "The AnalysisModelDesignProperties class contains information related to analysis model design properties."
  },
  {
    "id": "AnalysisModelGeneralProperties Class",
    "name": "AnalysisModelGeneralProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties",
    "summary": "The AnalysisModelGeneralProperties class contains the general property information for an analysis model."
  },
  {
    "id": "AnalysisModelHandler Class",
    "name": "AnalysisModelHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler",
    "summary": "The AnalysisModelHandler class contains information related to analysis models."
  },
  {
    "id": "AnalysisModelIssue Class",
    "name": "AnalysisModelIssue Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue",
    "summary": "Analysis model issue (error, warning, information)"
  },
  {
    "id": "AnalysisModelJobProperties Class",
    "name": "AnalysisModelJobProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties",
    "summary": "The AnalysisModelJobProperties class contains information related to analysis model job properties."
  },
  {
    "id": "AnalysisModelLoad Class",
    "name": "AnalysisModelLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelLoad",
    "summary": "The AnalysisModelLoad class contains information related to the model loads that are included in the analysis model.\r\n            The identifier is the identifier of the Tekla.Structures.Model object."
  },
  {
    "id": "AnalysisModelModalAnalysisProperties Class",
    "name": "AnalysisModelModalAnalysisProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties",
    "summary": "The AnalysisModelModalAnalysisProperties class contains information related to analysis model modal analysis properties."
  },
  {
    "id": "AnalysisModelOutputProperties Class",
    "name": "AnalysisModelOutputProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties",
    "summary": "The AnalysisModelOutputProperties class contains information related to analysis model output properties."
  },
  {
    "id": "AnalysisModelSeismicProperties Class",
    "name": "AnalysisModelSeismicProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties",
    "summary": "The AnalysisModelSeismicProperties class contains information related to analysis model seismic properties."
  },
  {
    "id": "AnalysisModelSpectrumProperties Class",
    "name": "AnalysisModelSpectrumProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties",
    "summary": "The AnalysisModelSpectrumProperties class contains information related to analysis model spectrum properties."
  },
  {
    "id": "AnalysisNode Class",
    "name": "AnalysisNode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode",
    "summary": "The AnalysisNode class contains information related to analysis nodes."
  },
  {
    "id": "AnalysisNodeLink Class",
    "name": "AnalysisNodeLink Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink",
    "summary": "The AnalysisNodeLink class contains information related to analysis node links."
  },
  {
    "id": "AnalysisObject Class",
    "name": "AnalysisObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject",
    "summary": "The AnalysisObject class is an abstract base class for all analysis objects."
  },
  {
    "id": "AnalysisObjectEnumerator Class",
    "name": "AnalysisObjectEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator",
    "summary": "The AnalysisObjectEnumerator class provides the means to iterate through analysis object instances."
  },
  {
    "id": "AnalysisObjectSelector Class",
    "name": "AnalysisObjectSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectSelector",
    "summary": "The AnalysisObjectSelector class contains methods for getting objects."
  },
  {
    "id": "AnalysisPartAnalysisProperties Class",
    "name": "AnalysisPartAnalysisProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties",
    "summary": "The AnalysisPartAnalysisProperties class contains information related to analysis part analysis properties."
  },
  {
    "id": "AnalysisPartAreaAttributes Class",
    "name": "AnalysisPartAreaAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes",
    "summary": "The AnalysisPartAreaAttributes class contains information related to analysis part area attributes."
  },
  {
    "id": "AnalysisPartBarAttributes Class",
    "name": "AnalysisPartBarAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes",
    "summary": "The AnalysisPartBarAttributes class contains information related to analysis part bar attributes."
  },
  {
    "id": "AnalysisPartCompositeProperties Class",
    "name": "AnalysisPartCompositeProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties",
    "summary": "The AnalysisPartCompositeProperties class contains information related to analysis part composite properties."
  },
  {
    "id": "AnalysisPartEnd Class",
    "name": "AnalysisPartEnd Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd",
    "summary": "The AnalysisPartEnd class contains information related to analysis part ends."
  },
  {
    "id": "AnalysisPartLoadingProperties Class",
    "name": "AnalysisPartLoadingProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties",
    "summary": "The AnalysisPartLoadingProperties class contains information related to analysis part loading properties."
  },
  {
    "id": "AnalysisPartPositionProperties Class",
    "name": "AnalysisPartPositionProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties",
    "summary": "The AnalysisPartPositionProperties class contains information related to analysis part position properties."
  },
  {
    "id": "AnalysisPartSpanningProperties Class",
    "name": "AnalysisPartSpanningProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartSpanningProperties",
    "summary": "The AnalysisPartSpanningProperties class contains information related to analysis part spanning properties."
  },
  {
    "id": "AnalysisPosition Class",
    "name": "AnalysisPosition Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition",
    "summary": "The AnalysisPosition class contains information related to analysis positions."
  },
  {
    "id": "AnalysisRestraintData Class",
    "name": "AnalysisRestraintData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData",
    "summary": "The AnalysisRestraintData class contains the restraint data for an\r\n            analysis part."
  },
  {
    "id": "AnalysisRestraints Class",
    "name": "AnalysisRestraints Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraints",
    "summary": "The AnalysisRestraints class contains analysis restraints information\r\n            for an analysis part."
  },
  {
    "id": "AnalysisResult Class",
    "name": "AnalysisResult Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult",
    "summary": "The AnalysisResult class contains analysis result information."
  },
  {
    "id": "AnalysisResultPositions Class",
    "name": "AnalysisResultPositions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions",
    "summary": "The AnalysisResultPositions class contains information about analysis result positions."
  },
  {
    "id": "AnalysisRigidDiaphragm Class",
    "name": "AnalysisRigidDiaphragm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm",
    "summary": "The AnalysisRigidDiaphragm class contains information related to analysis rigid diaphragms."
  },
  {
    "id": "AnalysisSubSection Class",
    "name": "AnalysisSubSection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection",
    "summary": "The AnalysisSubSection class contains information related to analysis subsections."
  },
  {
    "id": "AnalysisSupport Class",
    "name": "AnalysisSupport Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisSupport",
    "summary": "The AnalysisSupport class contains information related to analysis supports."
  },
  {
    "id": "AnalysisVolume Class",
    "name": "AnalysisVolume Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume",
    "summary": "The AnalysisVolume class contains information related to analysis volumes."
  },
  {
    "id": "AnalysisVolumeItem Class",
    "name": "AnalysisVolumeItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolumeItem",
    "summary": "The AnalysisVolumeItem class contains information related to analysis volume items."
  },
  {
    "id": "Operation Class",
    "name": "Operation Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation",
    "summary": "Operations of analysis objects."
  },
  {
    "id": "AnalysisObjectPicker Class",
    "name": "AnalysisObjectPicker Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectPicker",
    "summary": "The AnalysisObjectPicker class can be used to prompt the user to do manual picks of analysis objects.\r\n            The methods throw an exception if the user interrupts (cancels) the pick command."
  },
  {
    "id": "AnalysisObjectSelector Class",
    "name": "AnalysisObjectSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectSelector",
    "summary": "Get or set selected analysis objects in model views."
  },
  {
    "id": "BoltItem Class",
    "name": "BoltItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.BoltItem",
    "summary": "The BoltItem class contains information about the bolts in the Tekla Structures bolt catalog."
  },
  {
    "id": "BoltItemEnumerator Class",
    "name": "BoltItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.BoltItemEnumerator",
    "summary": "The BoltItemEnumerator class allows to loop through the bolt catalog items."
  },
  {
    "id": "BoltName Class",
    "name": "BoltName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.BoltName",
    "summary": "The BoltName class contains the name of the bolt item."
  },
  {
    "id": "CatalogHandler Class",
    "name": "CatalogHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler",
    "summary": "The CatalogHandler class is a class from which the user can query catalog instances."
  },
  {
    "id": "CatalogItemEnumeratorInitializationException Class",
    "name": "CatalogItemEnumeratorInitializationException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.CatalogItemEnumeratorInitializationException",
    "summary": "The CatalogItemEnumeratorInitializationException class represents an error that occurred during the catalog item enumerator initialization.\r\n            This class cannot be inherited."
  },
  {
    "id": "ComponentItem Class",
    "name": "ComponentItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem",
    "summary": "The ComponentItem class contains information about the components in the Tekla Structures catalog."
  },
  {
    "id": "ComponentItemEnumerator Class",
    "name": "ComponentItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ComponentItemEnumerator",
    "summary": "The ComponentItemEnumerator class allows to loop through the component catalog items."
  },
  {
    "id": "CrossSection Class",
    "name": "CrossSection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.CrossSection",
    "summary": "The CrossSection class defines a with cross section points"
  },
  {
    "id": "DrawingItem Class",
    "name": "DrawingItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem",
    "summary": "The DrawingItem class contains information from the drawings in the master drawing catalog."
  },
  {
    "id": "DrawingItemEnumerator Class",
    "name": "DrawingItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.DrawingItemEnumerator",
    "summary": "The DrawingItemEnumerator class allows to loop through the catalog drawing items."
  },
  {
    "id": "FabricatorProfilesAndMaterials Class",
    "name": "FabricatorProfilesAndMaterials Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.FabricatorProfilesAndMaterials",
    "summary": "The FabricatorProfilesAndMaterials class contains methods for converting \r\n            fabricator profiles and materials to Tekla Structures."
  },
  {
    "id": "LibraryProfileItem Class",
    "name": "LibraryProfileItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem",
    "summary": "The LibraryProfileItem class contains information from library profiles in\r\n            the catalog. Library profile items can be enumerated using a profile item enumerator."
  },
  {
    "id": "MaterialItem Class",
    "name": "MaterialItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem",
    "summary": "The MaterialItem class contains information about the materials in the Tekla Structures catalog."
  },
  {
    "id": "MaterialItemEnumerator Class",
    "name": "MaterialItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MaterialItemEnumerator",
    "summary": "The MaterialItemEnumerator class allows to loop through the catalog material items."
  },
  {
    "id": "MaterialMarketSizesItem Class",
    "name": "MaterialMarketSizesItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItem",
    "summary": "The MaterialMarketSizesItem class contains information about the available market sizes for particular material."
  },
  {
    "id": "MaterialMarketSizesItemEnumerator Class",
    "name": "MaterialMarketSizesItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItemEnumerator",
    "summary": "The MaterialMarketSizesItemEnumerator class allows to loop through the items defined in XS_PROFDB\\marketsizes.dat file."
  },
  {
    "id": "MaterialName Class",
    "name": "MaterialName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MaterialName",
    "summary": "The MaterialName class contains the name of the material item."
  },
  {
    "id": "MeshItem Class",
    "name": "MeshItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MeshItem",
    "summary": "The MeshItem class contains information from the meshes in the catalog \r\n            (mesh_database.inp)."
  },
  {
    "id": "MeshItemEnumerator Class",
    "name": "MeshItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator",
    "summary": "The MeshItemEnumerator class allows to loop through the catalog mesh items."
  },
  {
    "id": "ParametricProfileItem Class",
    "name": "ParametricProfileItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem",
    "summary": "The ParametricProfileItem class contains information from parametric profiles in\r\n            the catalog. Parametric profile items can be enumerated using a profile item enumerator."
  },
  {
    "id": "PrinterItem Class",
    "name": "PrinterItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem",
    "summary": "The PrinterItem class contains information about the printers in the Tekla Structures catalog."
  },
  {
    "id": "PrinterItemEnumerator Class",
    "name": "PrinterItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.PrinterItemEnumerator",
    "summary": "The PrinterItemEnumerator class allows to loop through the catalog printer items."
  },
  {
    "id": "ProfileItem Class",
    "name": "ProfileItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem",
    "summary": "The ProfileItem abstract class contains the common information of catalog\r\n            profiles (parametric and library)."
  },
  {
    "id": "ProfileItemCrossSection Class",
    "name": "ProfileItemCrossSection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection",
    "summary": "The ProfileItemCrossSection contains the information of the cross section\r\n            information for multi-cross section profiles."
  },
  {
    "id": "ProfileItemEnumerator Class",
    "name": "ProfileItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator",
    "summary": "The ProfileItemEnumerator class allows to loop through the catalog profile items."
  },
  {
    "id": "ProfileItemParameter Class",
    "name": "ProfileItemParameter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter",
    "summary": "The ProfileItemParameter class contains the information of one profile parameter\r\n            (property name, symbol, unit and unit type). A profile item can contain a maximum\r\n            of 50 profile parameters."
  },
  {
    "id": "ProfileItemSubType Class",
    "name": "ProfileItemSubType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType",
    "summary": "The ProfileItemSubType class contains the information of one profile item sub type\r\n            (id, label, parameter string and bitmap name). A profile item can contain a maximum\r\n            of 10 profile item sub types."
  },
  {
    "id": "ProfileName Class",
    "name": "ProfileName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ProfileName",
    "summary": "The ProfileName class contains the name of the profile item."
  },
  {
    "id": "RebarHeaderItem Class",
    "name": "RebarHeaderItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem",
    "summary": "The RebarHeaderItem class represents an item in the header of the rebar catalog\r\n            (rebar_database.inp)."
  },
  {
    "id": "RebarItem Class",
    "name": "RebarItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.RebarItem",
    "summary": "The RebarItem class contains information from the rebars in the catalog \r\n            (rebar_database.inp)."
  },
  {
    "id": "RebarItemEnumerator Class",
    "name": "RebarItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator",
    "summary": "The RebarItemEnumerator class allows to loop through the catalog rebar items."
  },
  {
    "id": "ShapeItem Class",
    "name": "ShapeItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem",
    "summary": "The Shape class contains information about the shapes in the Tekla Structures shape catalog."
  },
  {
    "id": "ShapeItemEnumerator Class",
    "name": "ShapeItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.ShapeItemEnumerator",
    "summary": "The ShapeItemEnumerator class allows to loop through the shape catalog items."
  },
  {
    "id": "UserPropertyItem Class",
    "name": "UserPropertyItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem",
    "summary": "The UserPropertyItem class contains information about the user properties in the Tekla Structures catalog."
  },
  {
    "id": "UserPropertyItemEnumerator Class",
    "name": "UserPropertyItemEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItemEnumerator",
    "summary": "The UserPropertyItemEnumerator class allows to loop through the user property items."
  },
  {
    "id": "UserPropertyName Class",
    "name": "UserPropertyName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyName",
    "summary": "The UserPropertyName class contains the name of the user property item."
  },
  {
    "id": "UserPropertyOption Class",
    "name": "UserPropertyOption Class",
    "type": "class",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption",
    "summary": "The UserPropertyOption class contains the properties of a user property value option."
  },
  {
    "id": "Angle Class",
    "name": "Angle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.Angle",
    "summary": "Provides support for angles using either the current Tekla Structures units, or user defined units"
  },
  {
    "id": "AngleList Class",
    "name": "AngleList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.AngleList",
    "summary": "This class provides methods to handle lists of angles"
  },
  {
    "id": "BooleanConverter Class",
    "name": "BooleanConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter",
    "summary": "The BooleanConverter class converts types to and from the boolean type."
  },
  {
    "id": "Constants Class",
    "name": "Constants Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.Constants",
    "summary": "The Constants class is a repository for constants used by the Tekla.Structures.Datatype.* types."
  },
  {
    "id": "DistanceConverter Class",
    "name": "DistanceConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter",
    "summary": "The DistanceConverter class converts types to and from the distance type."
  },
  {
    "id": "DistanceListConverter Class",
    "name": "DistanceListConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter",
    "summary": "The DistanceListConverter class converts types to and from the distance list type."
  },
  {
    "id": "DoubleConverter Class",
    "name": "DoubleConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter",
    "summary": "The DoubleConverter class converts types to and from the double datatype."
  },
  {
    "id": "EnumConverter Class",
    "name": "EnumConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.EnumConverter",
    "summary": "Type converter for Enum"
  },
  {
    "id": "IntegerConverter Class",
    "name": "IntegerConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter",
    "summary": "The IntegerConverter class converts types to and from the integer datatype."
  },
  {
    "id": "Settings Class",
    "name": "Settings Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.Settings",
    "summary": "The Settings class contains the currently active unit settings."
  },
  {
    "id": "SettingsProxy Class",
    "name": "SettingsProxy Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.SettingsProxy",
    "summary": "The SettingsProxy class is a proxy for the settings."
  },
  {
    "id": "StringConverter Class",
    "name": "StringConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Datatype.StringConverter",
    "summary": "The StringConverter class converts types to and from the string datatype."
  },
  {
    "id": "ApplicationFormBase Class",
    "name": "ApplicationFormBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.ApplicationFormBase",
    "summary": "The ApplicationFormBase class is the base class for all Tekla Structures dialogs.\r\n            The class provides localization, unit conversion and data storage\r\n            (temporary and file-based) among other things."
  },
  {
    "id": "ApplicationWindowBase Class",
    "name": "ApplicationWindowBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.ApplicationWindowBase",
    "summary": "The ApplicationWindowBase class is the base class for all Tekla Structures WPF dialogs.\r\n            The class provides localization, unit conversion and data storage\r\n            (temporary and file-based) among other things."
  },
  {
    "id": "AttributeTypeNameEditor Class",
    "name": "AttributeTypeNameEditor Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.AttributeTypeNameEditor",
    "summary": "The AttributeTypeNameEditor class provides a user interface for selecting a type for the bound attribute."
  },
  {
    "id": "BindPropertyNameEditor Class",
    "name": "BindPropertyNameEditor Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.BindPropertyNameEditor",
    "summary": "The BindPropertyNameEditor class provides a user interface for selecting a property for the attribute binding."
  },
  {
    "id": "Dialogs Class",
    "name": "Dialogs Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.Dialogs",
    "summary": "The Dialogs class contains interface methods for Tekla Structures to handle FormBase and WindowBase dialogs."
  },
  {
    "id": "ErrorDialog Class",
    "name": "ErrorDialog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.ErrorDialog",
    "summary": "The ErrorDialog class represents the common error dialog for the Open API."
  },
  {
    "id": "FormBase Class",
    "name": "FormBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.FormBase",
    "summary": "The FormBase class is the base class for all Tekla Structures dialogs.\r\n            The class provides localization, unit conversion and data storage\r\n            (temporary and file-based) among other things."
  },
  {
    "id": "FormBorders Class",
    "name": "FormBorders Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.FormBorders",
    "summary": "The FormBorders class handles the storing and restoring of the form size and location."
  },
  {
    "id": "HelpViewer Class",
    "name": "HelpViewer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.HelpViewer",
    "summary": "Class for viewing help files with Tekla Structures HelpViewer.exe."
  },
  {
    "id": "Localization Class",
    "name": "Localization Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.Localization",
    "summary": "The Localization class is for translating strings in .NET dialogs."
  },
  {
    "id": "Localization.Util Class",
    "name": "Localization.Util Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.Localization.Util",
    "summary": "The Util class contains general localizers for different kinds of controls."
  },
  {
    "id": "Localization.Util.PropertyLocalizer Class",
    "name": "Localization.Util.PropertyLocalizer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.PropertyLocalizer",
    "summary": "The PropertyLocalizer class localizes properties."
  },
  {
    "id": "LocExtension Class",
    "name": "LocExtension Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.LocExtension",
    "summary": "Localization binding for strings referred in xaml"
  },
  {
    "id": "MainWindow Class",
    "name": "MainWindow Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.MainWindow",
    "summary": "The MainWindow class is a class for binding the .NET dialogs under the Tekla Structures main window."
  },
  {
    "id": "PluginFormBase Class",
    "name": "PluginFormBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.PluginFormBase",
    "summary": "The PluginFormBase class is the base class for plug-in dialogs. The class extends\r\n             the FormBase class by adding communications with Tekla Structures."
  },
  {
    "id": "PluginWindowBase Class",
    "name": "PluginWindowBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase",
    "summary": "The PluginWindowBase class is the base class for plug-in WPF dialogs. The class extends\r\n            the WindowBase class by adding communications with Tekla Structures."
  },
  {
    "id": "ProfileConversion Class",
    "name": "ProfileConversion Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.ProfileConversion",
    "summary": "The ProfileConversion class provides functionalities to convert profile strings from/to current units (set in\r\n            \"Units and decimals, Catalog, Profiles, Section Dimension\" options)."
  },
  {
    "id": "StructuresDialogArrayAttribute Class",
    "name": "StructuresDialogArrayAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogArrayAttribute",
    "summary": "The StructuresDialogArrayAttribute class specifies the attribute name for which the attributed\r\n            interface will be used as a list item definition. The attributed interface is used to define the\r\n            structure of the DataGridView items. In other words it defines all the possible DataGridView\r\n            columns. The interface is bound to the DataGridView by referencing the interface's attribute name\r\n            from the DataGridView's Tag property."
  },
  {
    "id": "StructuresDialogAttribute Class",
    "name": "StructuresDialogAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute",
    "summary": "The StructuresDialogAttribute class specifies the attribute name to which the value of the\r\n            property will be bound in Tekla Structures."
  },
  {
    "id": "StructuresDialogFilterAttribute Class",
    "name": "StructuresDialogFilterAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogFilterAttribute",
    "summary": "The StructuresDialogFilterAttribute class specifies the attribute name for which the\r\n            value of the attributed property will be used as a filter in Tekla Structures. The return\r\n            type of the attributed property must be boolean. The apply and modify operations will only\r\n            commit/update those attributes which either do not have a filter property defined or the\r\n            value of the filter property is true."
  },
  {
    "id": "StructuresExtender Class",
    "name": "StructuresExtender Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender",
    "summary": "The StructuresExtender class is for binding controls to datatypes. The bindings are \r\n            needed to transfer the dialog values to Tekla Structures and onwards to plug-ins."
  },
  {
    "id": "StructuresInstallation Class",
    "name": "StructuresInstallation Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation",
    "summary": "Utility functions."
  },
  {
    "id": "TeklaProgressBar Class",
    "name": "TeklaProgressBar Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.TeklaProgressBar",
    "summary": "The TeklaProgressBar class represents the common progress bar control for the Open API."
  },
  {
    "id": "WindowBase Class",
    "name": "WindowBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.WindowBase",
    "summary": "The WindowBase class is the base class for all Tekla Structures WPF dialogs.\r\n            The class provides localization, unit conversion and data storage\r\n            (temporary and file-based) among other things."
  },
  {
    "id": "BindableRadioButton Class",
    "name": "BindableRadioButton Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.BindableRadioButton",
    "summary": "The BindableRadioButton class represents a RadioButton control that can be bound to the dialog attributes file.\r\n            Use \"Checked\" as the BindPropertyName and \"Integer\" as the AttributeTypeName."
  },
  {
    "id": "BoltCatalogSize Class",
    "name": "BoltCatalogSize Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.BoltCatalogSize",
    "summary": "The BoltCatalogSize class represents a control to select the bolt size\r\n            using the bolt catalog.\r\n            \r\n            Bolt catalog controls always need to be in pairs, meaning in every dialog\r\n            there has to be a BoltCatalogStandard and a BoltCatalogSize control.\r\n            \r\n            The property BoltCatalogStandard.LinkedBoltCatalogSize sets to which\r\n            BoltCatalogSize the control is linked."
  },
  {
    "id": "BoltCatalogStandard Class",
    "name": "BoltCatalogStandard Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.BoltCatalogStandard",
    "summary": "The BoltCatalogStandard class represents a control to select the bolt standard\r\n            using the bolt catalog.\r\n            \r\n            Bolt catalog controls always need to be in pairs, meaning in every dialog\r\n            there has to be a BoltCatalogStandard and a BoltCatalogSize control.\r\n            \r\n            The property BoltCatalogStandard.LinkedBoltCatalogSize sets to which BoltCatalogSize the\r\n            control is linked."
  },
  {
    "id": "CommitAction Class",
    "name": "CommitAction Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.CommitAction",
    "summary": "The CommitAction class represents a \"template\" dialog for commit actions."
  },
  {
    "id": "ComponentCatalog Class",
    "name": "ComponentCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ComponentCatalog",
    "summary": "The ComponentCatalog class represents a group of controls to select components\r\n            using the component catalog."
  },
  {
    "id": "CreateApplyCancel Class",
    "name": "CreateApplyCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.CreateApplyCancel",
    "summary": "The CreateApplyCancel class represents a control including the Create-Apply-Cancel button group."
  },
  {
    "id": "CreateDialog Class",
    "name": "CreateDialog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.CreateDialog",
    "summary": "The CreateDialog class represents a \"template\" dialog for creating something from parts."
  },
  {
    "id": "CustomObservableCollection(T) Class",
    "name": "CustomObservableCollection(T) Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.CustomObservableCollection`1",
    "summary": "CustomObservableCollection for synchronizing UI controls."
  },
  {
    "id": "DataGrid Class",
    "name": "DataGrid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.DataGrid",
    "summary": "The DataGrid class represents a data grid control that can contain images."
  },
  {
    "id": "EnvironmentFiles Class",
    "name": "EnvironmentFiles Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles",
    "summary": "The EnvironmentFiles class is for the paths where the attributes file will be searched for."
  },
  {
    "id": "EnvironmentVariables Class",
    "name": "EnvironmentVariables Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentVariables",
    "summary": "The EnvironmentVariables class contains a sorted list specializing in getting active\r\n            environment variables and advanced option settings. It also checks options.ini files\r\n            in the active model folder as well as options_user.ini files."
  },
  {
    "id": "ImageComboBox Class",
    "name": "ImageComboBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox",
    "summary": "The ImageComboBox class represents a combo box control that can contain images."
  },
  {
    "id": "ImageItem Class",
    "name": "ImageItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageItem",
    "summary": "The ImageItem class defines the images that will be contained in the image combo box."
  },
  {
    "id": "ImageList Class",
    "name": "ImageList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageList",
    "summary": "The ImageList class contains a list of ImageItems."
  },
  {
    "id": "ImageListComboBox Class",
    "name": "ImageListComboBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox",
    "summary": "The ImageListComboBox class represents a combo box control that can contain images from an ImageList control."
  },
  {
    "id": "LoadingForm Class",
    "name": "LoadingForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.LoadingForm",
    "summary": "The LoadingForm class creates a dialog that is shown while something is \r\n            being loaded by the main window and that needs the process to finish."
  },
  {
    "id": "LocalizeForm Class",
    "name": "LocalizeForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.LocalizeForm",
    "summary": "The LocalizeForm class is for localizing the forms."
  },
  {
    "id": "MaterialCatalog Class",
    "name": "MaterialCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialCatalog",
    "summary": "The MaterialCatalog class represents a group of controls to select materials\r\n            using the material catalog."
  },
  {
    "id": "MaterialSelectionForm Class",
    "name": "MaterialSelectionForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialSelectionForm",
    "summary": "The MaterialSelectionForm class represents a dialog to select materials\r\n            using the material catalogs."
  },
  {
    "id": "MeshCatalog Class",
    "name": "MeshCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshCatalog",
    "summary": "The MeshCatalog class represents a group of controls to select meshes\r\n            using the mesh catalogs."
  },
  {
    "id": "MeshSelectionForm Class",
    "name": "MeshSelectionForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshSelectionForm",
    "summary": "The MeshSelectionForm class represents a dialog to select meshes\r\n            using the mesh catalog."
  },
  {
    "id": "ModelAccess Class",
    "name": "ModelAccess Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ModelAccess",
    "summary": "The ModelAccess class contains helper methods for connecting to and accessing the model and objects in the model.\r\n            The class attempts to provide efficient but robust methods for connecting to and verifying the connection to the model."
  },
  {
    "id": "OkApplyCancel Class",
    "name": "OkApplyCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkApplyCancel",
    "summary": "The OkApplyCancel class represents a control including the Ok-Apply-Cancel button group."
  },
  {
    "id": "OkApplyModifyGetOnOffCancel Class",
    "name": "OkApplyModifyGetOnOffCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel",
    "summary": "The OkApplyModifyGetOnOffCancel class represents a control including the Ok-Apply-Modify-Get-On/Off-Cancel button group."
  },
  {
    "id": "OkCancel Class",
    "name": "OkCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkCancel",
    "summary": "The OkCancel class represents a control including the Ok-Cancel button group."
  },
  {
    "id": "OrganizerDialog Class",
    "name": "OrganizerDialog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.OrganizerDialog",
    "summary": "The OrganizerDialog class represents a \"template\" of an organizer dialog."
  },
  {
    "id": "ProfileCatalog Class",
    "name": "ProfileCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileCatalog",
    "summary": "The ProfileCatalog class represents a group of controls to select profiles\r\n            using the profile catalogs."
  },
  {
    "id": "ProfileSelectionForm Class",
    "name": "ProfileSelectionForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileSelectionForm",
    "summary": "The ProfileSelectionForm class represents a dialog to select profiles\r\n            using the profile catalogs."
  },
  {
    "id": "PropertiesDialog Class",
    "name": "PropertiesDialog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.PropertiesDialog",
    "summary": "The PropertiesDialog class represents a \"template\" of a properties dialog."
  },
  {
    "id": "ReinforcementCatalog Class",
    "name": "ReinforcementCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog",
    "summary": "The ReinforcementCatalog class represents a group of controls to select rebars\r\n            using the rebar catalogs."
  },
  {
    "id": "ReinforcementSelectionForm Class",
    "name": "ReinforcementSelectionForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm",
    "summary": "The ReinforcementSelectionForm class represents a dialog to select rebars\r\n            using the rebar catalogs."
  },
  {
    "id": "SaveLoad Class",
    "name": "SaveLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad",
    "summary": "The SaveLoad class represents a save-load-save as group of controls including the functionality."
  },
  {
    "id": "ShapeCatalog Class",
    "name": "ShapeCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeCatalog",
    "summary": "The ShapeCatalog class represents a group of controls to select Shapes\r\n            using the Shape catalog."
  },
  {
    "id": "ShapeSelectionForm Class",
    "name": "ShapeSelectionForm Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeSelectionForm",
    "summary": "The ShapeSelectionForm class represents a dialog to select Shapes\r\n            using the Shape catalogs."
  },
  {
    "id": "Tree Class",
    "name": "Tree Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.Tree",
    "summary": "The Tree class represents a tree view control that can contain images."
  },
  {
    "id": "TreeViewDialog Class",
    "name": "TreeViewDialog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.TreeViewDialog",
    "summary": "The TreeViewDialog class represents a \"template\" of a tree view dialog."
  },
  {
    "id": "WpfBoltCatalogSize Class",
    "name": "WpfBoltCatalogSize Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfBoltCatalogSize",
    "summary": "The WPFBoltCatalogSize class represents a control to select the bolt size\r\n            using the bolt catalog.\r\n            \r\n            Bolt catalog controls always need to be in pairs, meaning in every dialog\r\n            there has to be a WpfBoltCatalogStandard and a WpfBoltCatalogSize control."
  },
  {
    "id": "WpfBoltCatalogStandard Class",
    "name": "WpfBoltCatalogStandard Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfBoltCatalogStandard",
    "summary": "The WpfBoltCatalogStandard class represents a control to select the bolt standard\r\n            using the bolt catalog.\r\n            \r\n            Bolt catalog controls always need to be in pairs, meaning in every dialog\r\n            there has to be a WpfBoltCatalogStandard and a WpfBoltCatalogSize control."
  },
  {
    "id": "WpfComponentCatalog Class",
    "name": "WpfComponentCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog",
    "summary": "The WpfComponentCatalog class represents a group of controls to select components\r\n            using the component catalog."
  },
  {
    "id": "WpfCreateApplyCancel Class",
    "name": "WpfCreateApplyCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfCreateApplyCancel",
    "summary": "Interaction logic for WPFCreateAppyCancel.xaml.\r\n            Control is meant to be used with non-dependent plug-ins"
  },
  {
    "id": "WpfFilterCheckBox Class",
    "name": "WpfFilterCheckBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfFilterCheckBox",
    "summary": "The WpfFilterAttribute class represents a checkbox control for enabling/disabling \r\n            dialog attributes defined with StructuresFieldAttribute."
  },
  {
    "id": "WpfMaterialCatalog Class",
    "name": "WpfMaterialCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog",
    "summary": "The WpfMaterialCatalog class represents a group of controls to select materials\r\n            using the material catalog."
  },
  {
    "id": "WpfMeshCatalog Class",
    "name": "WpfMeshCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog",
    "summary": "The WpfMeshCatalog class represents a group of controls to select meshes\r\n            using the mesh catalog."
  },
  {
    "id": "WpfOkApplyModifyGetOnOffCancel Class",
    "name": "WpfOkApplyModifyGetOnOffCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkApplyModifyGetOnOffCancel",
    "summary": "Interaction logic for WpfOkApplyModifyGetOnOffCancel.xaml"
  },
  {
    "id": "WpfOkCreateCancel Class",
    "name": "WpfOkCreateCancel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkCreateCancel",
    "summary": "Interaction logic for WPFOkCreateCancel.xaml"
  },
  {
    "id": "WpfProfileCatalog Class",
    "name": "WpfProfileCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog",
    "summary": "The WpfProfileCatalog class represents a group of controls to select profiles\r\n            using the profile catalog."
  },
  {
    "id": "WpfReinforcementCatalog Class",
    "name": "WpfReinforcementCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog",
    "summary": "The WpfReinforcementCatalog class represents a group of controls to select rebars\r\n            using the reinforcement catalog."
  },
  {
    "id": "WpfSaveLoad Class",
    "name": "WpfSaveLoad Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad",
    "summary": "Interaction logic for WpfSaveload.xaml"
  },
  {
    "id": "WpfShapeCatalog Class",
    "name": "WpfShapeCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog",
    "summary": "The WpfShapeCatalog class represents a group of controls to select shapes\r\n            using the shape catalog."
  },
  {
    "id": "WpfSteelFinishComboBox Class",
    "name": "WpfSteelFinishComboBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSteelFinishComboBox",
    "summary": "The WpfSteelFinishComboBox class represents a control to select the steel finish from the list."
  },
  {
    "id": "AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType Class",
    "name": "AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType",
    "summary": "The AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType class defines\r\n            a placing type that places the object using the along line placing as the first option.\r\n            If there is no room for the first option the fallback option will be used.\r\n            The fallback option is placing the object with a leader line and rotated to be at the\r\n            same angle as the connected part."
  },
  {
    "id": "AlongLineOrWithLeaderLinePlacingType Class",
    "name": "AlongLineOrWithLeaderLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AlongLineOrWithLeaderLinePlacingType",
    "summary": "The AlongLineOrWithLeaderLinePlacingType class defines a placing type that\r\n            places the object using the along line placing as the first option.\r\n            If there is no room for the first option the fallback option will be used.\r\n            The fallback option is placing the object with a leader line."
  },
  {
    "id": "AlongLinePlacing Class",
    "name": "AlongLinePlacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacing",
    "summary": "The AlongLinePlacing class defines a placing where the object is\r\n            located and moved along a line defined by two points."
  },
  {
    "id": "AlongLinePlacingType Class",
    "name": "AlongLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacingType",
    "summary": "The AlongLinePlacingType class defines a placing type that\r\n            places the object using the along line placing."
  },
  {
    "id": "AlongPartCenteredPlacingType Class",
    "name": "AlongPartCenteredPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AlongPartCenteredPlacingType",
    "summary": "The AlongPartCenteredPlacingType class defines a placing type\r\n            that places the object using the along line placing.\r\n            The line used will be the part's edge in the center of that line."
  },
  {
    "id": "AngleDimension Class",
    "name": "AngleDimension Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AngleDimension",
    "summary": "The AngleDimension class defines an angle dimension between two lines. The dimension can be shown\r\n            by a triangle or in degrees. You can also enter the triangle base length."
  },
  {
    "id": "AngleDimensionAttributes Class",
    "name": "AngleDimensionAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes",
    "summary": "The AngleDimensionAttributes class contains the attributes for angle dimensions."
  },
  {
    "id": "Arc.ArcAttributes Class",
    "name": "Arc.ArcAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Arc.ArcAttributes",
    "summary": "The ArcAttributes class is the attributes class for the arc."
  },
  {
    "id": "ArrowheadAttributes Class",
    "name": "ArrowheadAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes",
    "summary": "The ArrowheadAttributes class handles attributes related to arrowheads of different objects."
  },
  {
    "id": "AttributesBase Class",
    "name": "AttributesBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.AttributesBase",
    "summary": "The AttributesBase class is the class that all the main attributes that can load attribute files inherit from."
  },
  {
    "id": "BaseLinePlacing Class",
    "name": "BaseLinePlacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacing",
    "summary": "The BaseLinePlacing class defines a placing where the\r\n            object is placed using a line as a reference.\r\n            This will thus define the object's X-axis along that line."
  },
  {
    "id": "BaseLinePlacingType Class",
    "name": "BaseLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacingType",
    "summary": "The BaseLinePlacingType class defines a placing type that\r\n            places the object using the base line placing."
  },
  {
    "id": "BaseLineWithArrowAtEndPointPlacingType Class",
    "name": "BaseLineWithArrowAtEndPointPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.BaseLineWithArrowAtEndPointPlacingType",
    "summary": "The BaseLineWithArrowAtEndPointPlacingType class defines a\r\n            placing type that places the object using the base line placing.\r\n            The line is drawn and will have an arrow at the end point."
  },
  {
    "id": "BaseLineWithArrowAtStartPointPlacingType Class",
    "name": "BaseLineWithArrowAtStartPointPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.BaseLineWithArrowAtStartPointPlacingType",
    "summary": "The BaseLineWithArrowAtStartPointPlacingType class defines a\r\n            placing type that places the object using the base line placing.\r\n            The line is drawn and will have an arrow at the start point."
  },
  {
    "id": "Bolt.BoltAttributes Class",
    "name": "Bolt.BoltAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes",
    "summary": "The BoltAttributes class is the attributes class for the bolt."
  },
  {
    "id": "CannotCreateSectionViewFrom3dView Class",
    "name": "CannotCreateSectionViewFrom3dView Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotCreateSectionViewFrom3dView",
    "summary": "The CannotCreateSectionViewFrom3dView class defines the exception that is \r\n            thrown when a user tries to create a section view from a 3d view."
  },
  {
    "id": "CannotDeleteActiveDrawingException Class",
    "name": "CannotDeleteActiveDrawingException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotDeleteActiveDrawingException",
    "summary": "The CannotDeleteActiveDrawingException class defines the exception\r\n            that is thrown when a user tries to delete a drawing\r\n            that is active."
  },
  {
    "id": "CannotGetAttributeForPluginDueToIncorrectTypeException Class",
    "name": "CannotGetAttributeForPluginDueToIncorrectTypeException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginDueToIncorrectTypeException",
    "summary": "The CannotGetAttributeForPluginDueToIncorrectTypeException class defines the exception that is\r\n            thrown when Plugin.GetAttribute is called but the type is incorrect."
  },
  {
    "id": "CannotGetAttributeForPluginDueToInexistantFieldException Class",
    "name": "CannotGetAttributeForPluginDueToInexistantFieldException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginDueToInexistantFieldException",
    "summary": "The CannotGetAttributeForPluginDueToInexistantFieldException class defines the exception that is\r\n            thrown when Plugin.GetAttribute is called but the field does not exist."
  },
  {
    "id": "CannotGetAttributeForPluginException Class",
    "name": "CannotGetAttributeForPluginException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginException",
    "summary": "The CannotGetAttributeForPluginException class defines the exception that is\r\n            thrown when Plugin.GetAttribute is called but the attribute cannot be fetched."
  },
  {
    "id": "CannotInsertDrawingException Class",
    "name": "CannotInsertDrawingException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotInsertDrawingException",
    "summary": "The CannotInsertDrawingException class defines the exception\r\n            that is thrown when a user tries to insert a drawing\r\n            when another drawing is active."
  },
  {
    "id": "CannotLoadAttributesException Class",
    "name": "CannotLoadAttributesException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotLoadAttributesException",
    "summary": "The CannotLoadAttributesException class defines the exception\r\n            that is thrown when the loading of attributes failed."
  },
  {
    "id": "CannotModifyNonActiveDrawingException Class",
    "name": "CannotModifyNonActiveDrawingException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotModifyNonActiveDrawingException",
    "summary": "The CannotModifyNonActiveDrawingException class defines the exception\r\n            that is thrown when a user tries to modify a drawing\r\n            that is not set as active."
  },
  {
    "id": "CannotPerformOperationDrawingEditorMustBeClosedException Class",
    "name": "CannotPerformOperationDrawingEditorMustBeClosedException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingEditorMustBeClosedException",
    "summary": "The CannotPerformOperationDrawingEditorMustBeClosedException class\r\n            defines the exception that is thrown when a user tries to do an\r\n            operation which requires the drawing editor to be closed."
  },
  {
    "id": "CannotPerformOperationDrawingIsActiveException Class",
    "name": "CannotPerformOperationDrawingIsActiveException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingIsActiveException",
    "summary": "The CannotPerformOperationDrawingIsActiveException class defines the\r\n            exception that is thrown when a user tries to do an operation which\r\n            requires that the drawing is not active."
  },
  {
    "id": "CannotPerformOperationDrawingMustBeActiveException Class",
    "name": "CannotPerformOperationDrawingMustBeActiveException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingMustBeActiveException",
    "summary": "The CannotPerformOperationDrawingMustBeActiveException class defines the\r\n            exception that is thrown when a user tries to do an operation which\r\n            requires that the drawing is active."
  },
  {
    "id": "CannotPerformOperationDrawingNotUpToDateException Class",
    "name": "CannotPerformOperationDrawingNotUpToDateException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingNotUpToDateException",
    "summary": "The CannotPerformOperationDrawingNotUpToDateException class defines the\r\n            exception that is thrown when a user tries to do an operation which\r\n            requires that the drawing is active."
  },
  {
    "id": "CannotPerformOperationNumberingNotUpToDate Class",
    "name": "CannotPerformOperationNumberingNotUpToDate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationNumberingNotUpToDate",
    "summary": "The CannotPerformOperationNumberingNotUpToDate class\r\n            defines the exception that is thrown when a user tries to do an\r\n            operation which requires that numbering is up to date."
  },
  {
    "id": "CannotSetAttributeForPluginDueToIncorrectTypeException Class",
    "name": "CannotSetAttributeForPluginDueToIncorrectTypeException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginDueToIncorrectTypeException",
    "summary": "The CannotSetAttributeForPluginDueToIncorrectTypeException class defines the exception that is\r\n            thrown when Plugin.SetAttribute is called but the type is incorrect."
  },
  {
    "id": "CannotSetAttributeForPluginDueToInexistantFieldException Class",
    "name": "CannotSetAttributeForPluginDueToInexistantFieldException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginDueToInexistantFieldException",
    "summary": "The CannotSetAttributeForPluginDueToInexistantFieldException class defines the exception that is\r\n            thrown when Plugin.SetAttribute is called but the field does not exist."
  },
  {
    "id": "CannotSetAttributeForPluginException Class",
    "name": "CannotSetAttributeForPluginException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginException",
    "summary": "The CannotSetAttributeForPluginException class defines the exception that is\r\n            thrown when Plugin.SetAttribute is called but the attribute cannot be set."
  },
  {
    "id": "Circle Class",
    "name": "Circle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Circle",
    "summary": "The Circle class defines the graphical object circle. A circle can also be hatched."
  },
  {
    "id": "Circle.CircleAttributes Class",
    "name": "Circle.CircleAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Circle.CircleAttributes",
    "summary": "The CircleAttributes class is the attributes class of the circle."
  },
  {
    "id": "ClosedGraphicObject Class",
    "name": "ClosedGraphicObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ClosedGraphicObject",
    "summary": "The ClosedGraphicObject class is an abstract base class for all closed graphic objects\r\n            (the circle, the cloud, the polygon and the rectangle)."
  },
  {
    "id": "ClosedGraphicObject.ClosedGraphicObjectAttributes Class",
    "name": "ClosedGraphicObject.ClosedGraphicObjectAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ClosedGraphicObject.ClosedGraphicObjectAttributes",
    "summary": "The ClosedGraphicObjectAttributes class is the attributes class for the closed graphic object."
  },
  {
    "id": "Cloud Class",
    "name": "Cloud Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Cloud",
    "summary": "The Cloud class defines a cloud that is a polygon with a specific size set for the bulges."
  },
  {
    "id": "Cloud.CloudAttributes Class",
    "name": "Cloud.CloudAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Cloud.CloudAttributes",
    "summary": "The CloudAttributes class is the attributes class for the cloud."
  },
  {
    "id": "ContainerElement Class",
    "name": "ContainerElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ContainerElement",
    "summary": "The ContainerElement class defines container elements. A container element\r\n            is a mark element that has a frame and contains other mark elements.\r\n            A container element may also contain container elements to achieve nested frames."
  },
  {
    "id": "ContainerView Class",
    "name": "ContainerView Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ContainerView",
    "summary": "The ContainerView class contains container views that contain other drawing objects, including other views and container views. The drawing sheet is a container view.\r\n            Container views do not contain drawing representations of model objects."
  },
  {
    "id": "CurvedDimensionBase Class",
    "name": "CurvedDimensionBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionBase",
    "summary": "The CurvedDimensionBase class is the base class for radial and orthogonal curved dimensions."
  },
  {
    "id": "CurvedDimensionOrthogonal Class",
    "name": "CurvedDimensionOrthogonal Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionOrthogonal",
    "summary": "The CurvedDimensionOrthogonal class defines a curved dimension with orthogonal reference lines."
  },
  {
    "id": "CurvedDimensionRadial Class",
    "name": "CurvedDimensionRadial Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionRadial",
    "summary": "The CurvedDimensionRadial class defines a curved dimension with radial reference points.\r\n            The dimension text on the line can be either a distance or an angle value."
  },
  {
    "id": "CurvedDimensionSetBase Class",
    "name": "CurvedDimensionSetBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetBase",
    "summary": "The CurvedDimensionSetBase class is the base class for curved dimension sets which are defined by\r\n            an arc and a point list."
  },
  {
    "id": "CurvedDimensionSetBase.CurvedDimensionSetBaseAttributes Class",
    "name": "CurvedDimensionSetBase.CurvedDimensionSetBaseAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetBase.CurvedDimensionSetBaseAttributes",
    "summary": "The CurvedDimensionSetBaseAttributes class contains the attributes for the curved dimensions."
  },
  {
    "id": "CurvedDimensionSetHandler Class",
    "name": "CurvedDimensionSetHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetHandler",
    "summary": "The CurvedDimensionSetHandler class contains operations for creating curved dimension sets."
  },
  {
    "id": "CurvedDimensionSetOrthogonal Class",
    "name": "CurvedDimensionSetOrthogonal Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetOrthogonal",
    "summary": "The CurvedDimensionSetOrthogonal class defines a curved dimension set with orthogonal reference lines."
  },
  {
    "id": "CurvedDimensionSetOrthogonal.CurvedDimensionSetOrthogonalAttributes Class",
    "name": "CurvedDimensionSetOrthogonal.CurvedDimensionSetOrthogonalAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetOrthogonal.CurvedDimensionSetOrthogonalAttributes",
    "summary": "The CurvedDimensionSetOrthogonalAttributes class contains the attributes for managing all the attributes\r\n            of the curved dimension with orthogonal reference lines."
  },
  {
    "id": "CurvedDimensionSetRadial Class",
    "name": "CurvedDimensionSetRadial Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetRadial",
    "summary": "The CurvedDimensionSetRadial class defines a curved dimension set with radial reference lines."
  },
  {
    "id": "CurvedDimensionSetRadial.CurvedDimensionSetRadialAttributes Class",
    "name": "CurvedDimensionSetRadial.CurvedDimensionSetRadialAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedDimensionSetRadial.CurvedDimensionSetRadialAttributes",
    "summary": "The CurvedDimensionSetRadialAttributes class contains the attributes for managing all the attributes\r\n            of the curved dimension with radial reference lines."
  },
  {
    "id": "CurvedSectionMark Class",
    "name": "CurvedSectionMark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CurvedSectionMark",
    "summary": "The CurvedSectionMark class defines a drawing object that illustrates a curved section in a specific view.\r\n            In contrast to straight section mark, the curved section mark can only be inserted as a result of \r\n            creating a curved section view."
  },
  {
    "id": "CustomLineType Class",
    "name": "CustomLineType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CustomLineType",
    "summary": "The CustomLineType class defines the custom line types of the drawing objects."
  },
  {
    "id": "CustomLineTypeCatalog Class",
    "name": "CustomLineTypeCatalog Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.CustomLineTypeCatalog",
    "summary": "The CustomLineTypeCatalog provides accessors to fetch the possible custom line types of drawing objects."
  },
  {
    "id": "DatabaseObject Class",
    "name": "DatabaseObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DatabaseObject",
    "summary": "The DatabaseObject class is a base class for all drawing objects."
  },
  {
    "id": "DetailMark Class",
    "name": "DetailMark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DetailMark",
    "summary": "The DetailMark class defines a drawing object that illustrates a detail in a specific view."
  },
  {
    "id": "DetailMark.DetailMarkAttributes Class",
    "name": "DetailMark.DetailMarkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DetailMark.DetailMarkAttributes",
    "summary": "The DetailMarkAttributes class is the attributes class for detail marks."
  },
  {
    "id": "DetailMarkSymbolAttributes Class",
    "name": "DetailMarkSymbolAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DetailMarkSymbolAttributes",
    "summary": "The DetailMarkSymbolAttributes class is for detail mark attributes related to the shape of\r\n            the connecting symbol."
  },
  {
    "id": "DetailMarkTagsAttributes Class",
    "name": "DetailMarkTagsAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DetailMarkTagsAttributes",
    "summary": "The DetailMarkTagsAttributes class contains attributes for detail mark tags."
  },
  {
    "id": "DimensionBase Class",
    "name": "DimensionBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionBase",
    "summary": "The DimensionBase class is the common base class for all the different dimensions."
  },
  {
    "id": "DimensionLink Class",
    "name": "DimensionLink Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionLink",
    "summary": "The DimensionLink class contains methods related to dimension links.\r\n            A dimension link is a link between two dimension sets."
  },
  {
    "id": "DimensionSetBase Class",
    "name": "DimensionSetBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBase",
    "summary": "The DimensionSetBase class is the common base class for all the different dimension sets. \r\n            The dimension set base cannot be instantiated."
  },
  {
    "id": "DimensionSetBaseAttributes Class",
    "name": "DimensionSetBaseAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes",
    "summary": "The DimensionSetBaseAttributes class is the base class for all dimension set attributes.\r\n            The class contains attributes that are common to all dimension sets."
  },
  {
    "id": "DimensionSetBaseAttributes.CombinedDimensionAttributes Class",
    "name": "DimensionSetBaseAttributes.CombinedDimensionAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.CombinedDimensionAttributes",
    "summary": "The CombinedDimensionAttributes class handles attributes related to \r\n            the combination of identical parts of dimensions."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionExaggerationAttributes Class",
    "name": "DimensionSetBaseAttributes.DimensionExaggerationAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionExaggerationAttributes",
    "summary": "The DimensionExaggerationAttributes class handles attributes related to \r\n            the exaggeration of dimension lines."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionFormatAttributes Class",
    "name": "DimensionSetBaseAttributes.DimensionFormatAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionFormatAttributes",
    "summary": "The DimensionFormatAttributes class controls the precision, format and unit of the dimension."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionPlacingAttributes Class",
    "name": "DimensionSetBaseAttributes.DimensionPlacingAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionPlacingAttributes",
    "summary": "The DimensionPlacingAttributes class controls the placing of the dimension."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionTextAttributes Class",
    "name": "DimensionSetBaseAttributes.DimensionTextAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionTextAttributes",
    "summary": "The DimensionTextAttributes class controls the dimension value representation."
  },
  {
    "id": "DPMPrinterAttributes Class",
    "name": "DPMPrinterAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DPMPrinterAttributes",
    "summary": "The DPMPrinterAttributes class contains the attributes for controlling the printing."
  },
  {
    "id": "DrawingEnumerator Class",
    "name": "DrawingEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingEnumerator",
    "summary": "The DrawingEnumerator class provides the means to iterate through drawing instances. Drawing enumerators\r\n            are generated by the drawing handler."
  },
  {
    "id": "DrawingEnumeratorBase Class",
    "name": "DrawingEnumeratorBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingEnumeratorBase",
    "summary": "The DrawingEnumeratorBase class is a base class for DrawingObjectEnumerator and DrawingEnumerator."
  },
  {
    "id": "DrawingHandler Class",
    "name": "DrawingHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingHandler",
    "summary": "The DrawingHandler class initializes the interface from a .NET application to Tekla Structures. This object\r\n             must be created before any actions can be performed on Tekla Structures drawings.\r\n             When this object is created, it is possible to ask the current active\r\n             drawing in Tekla Structures, get a list of drawings or create a new drawing."
  },
  {
    "id": "DrawingLink Class",
    "name": "DrawingLink Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingLink",
    "summary": "The DrawingLink class defines a drawing link object in a drawing.\r\n            When a drawing link is double clicked, the target drawing is opened."
  },
  {
    "id": "DrawingObject Class",
    "name": "DrawingObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingObject",
    "summary": "The DrawingObject class is an abstract base class for all the objects in the drawing.\r\n            All drawing objects have a database identifier and belong to some view."
  },
  {
    "id": "DrawingObject.NoAttributes Class",
    "name": "DrawingObject.NoAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingObject.NoAttributes",
    "summary": "The NoAttributes class defines attributes for objects that do not contain any attributes."
  },
  {
    "id": "DrawingObjectEnumerator Class",
    "name": "DrawingObjectEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DrawingObjectEnumerator",
    "summary": "The DrawingObjectEnumerator class provides the means to iterate through drawing object instances. Drawing object enumerators\r\n            are generated by the container view and they contain drawing objects that are children of the container view instance."
  },
  {
    "id": "DwgObject Class",
    "name": "DwgObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.DwgObject",
    "summary": "The DwgObject class defines a DWG or DXF object that can be inserted into a drawing."
  },
  {
    "id": "EdgeChamfer Class",
    "name": "EdgeChamfer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.EdgeChamfer",
    "summary": "The EdgeChamfer class contains methods related to edge chamfers.\r\n            An edge chamfer is a drawing object derived from a model object.\r\n            It represents a drawing chamfer that has a reference to the\r\n            actual chamfer in the model database."
  },
  {
    "id": "EdgeChamfer.EdgeChamferAttributes Class",
    "name": "EdgeChamfer.EdgeChamferAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.EdgeChamfer.EdgeChamferAttributes",
    "summary": "The EdgeChamferAttributes class is the attributes class for the edge chamfer."
  },
  {
    "id": "ElementBase Class",
    "name": "ElementBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ElementBase",
    "summary": "The ElementBase class is the abstract base class for all mark elements."
  },
  {
    "id": "EmbeddedObjectAttributes Class",
    "name": "EmbeddedObjectAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.EmbeddedObjectAttributes",
    "summary": "The EmbeddedObjectAttributes class contains attributes for embedded objects."
  },
  {
    "id": "EmbeddedObjectBase Class",
    "name": "EmbeddedObjectBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.EmbeddedObjectBase",
    "summary": "The EmbeddedObjectBase class defines an embedded object in a drawing.\r\n            The object refers to another file in the file system and its drawing\r\n            representation is updated when a drawing is opened."
  },
  {
    "id": "EmbeddedObjectFrame Class",
    "name": "EmbeddedObjectFrame Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.EmbeddedObjectFrame",
    "summary": "The EmbeddedObjectFrame class defines the frame object for embedded objects."
  },
  {
    "id": "Events Class",
    "name": "Events Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Events",
    "summary": "The Events class allows the user to register event listeners for drawing events."
  },
  {
    "id": "FontAttributes Class",
    "name": "FontAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.FontAttributes",
    "summary": "The FontAttributes class contains the basic attributes for fonts."
  },
  {
    "id": "Frame Class",
    "name": "Frame Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Frame",
    "summary": "The Frame class defines a frame that can be given to objects, including texts.\r\n            A frame is a box around the object. You can specify the color and shape of the box."
  },
  {
    "id": "GenericAttributesBase Class",
    "name": "GenericAttributesBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GenericAttributesBase",
    "summary": "The GenericAttributesBase class is a base class that shared attributes among many classes use."
  },
  {
    "id": "GraphicObject Class",
    "name": "GraphicObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GraphicObject",
    "summary": "The GraphicObject class is the abstract base class for all graphic objects\r\n            (the arc, the circle, the cloud, the line, the polygon, the polyline and the rectangle)."
  },
  {
    "id": "GraphicObject.GraphicObjectAttributes Class",
    "name": "GraphicObject.GraphicObjectAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GraphicObject.GraphicObjectAttributes",
    "summary": "The GraphicObjectAttributes class is the attributes class of the graphic object."
  },
  {
    "id": "GraphicObjectHatchAttributes Class",
    "name": "GraphicObjectHatchAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GraphicObjectHatchAttributes",
    "summary": "The GraphicObjectHatchAttributes class contains hatch attributes for graphic object hatches."
  },
  {
    "id": "Grid Class",
    "name": "Grid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Grid",
    "summary": "The Grid class contains methods related to grids.\r\n            A drawing grid is inserted/removed using the view."
  },
  {
    "id": "Grid.GridAttributes Class",
    "name": "Grid.GridAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Grid.GridAttributes",
    "summary": "The GridAttributes class is the attributes class for the grid."
  },
  {
    "id": "GridLine.GridLabel Class",
    "name": "GridLine.GridLabel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GridLine.GridLabel",
    "summary": "The GridLabel class contains the grid labels of the grid lines, the text label and the insertion points."
  },
  {
    "id": "GridLine.GridLineAttributes Class",
    "name": "GridLine.GridLineAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.GridLine.GridLineAttributes",
    "summary": "The GridLineAttributes class is the attributes class for the grid line."
  },
  {
    "id": "HatchAttributes Class",
    "name": "HatchAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.HatchAttributes",
    "summary": "The HatchAttributes base class, inherited by ModelObjectHatchAttributes\r\n            and GraphicObjectHatchAttributes, contains hatch attributes."
  },
  {
    "id": "Hideable Class",
    "name": "Hideable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Hideable",
    "summary": "Accesses the information if this object is hidden or not or if it should be."
  },
  {
    "id": "HyperLink Class",
    "name": "HyperLink Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.HyperLink",
    "summary": "The HyperLink class defines a hyperlink object in a drawing. When a hyperlink is double\r\n            clicked, the default browser is launched."
  },
  {
    "id": "Image Class",
    "name": "Image Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Image",
    "summary": "The Image class defines an image that can be inserted into a drawing."
  },
  {
    "id": "InsidePartAlongPartOrWithLeaderLinePlacingType Class",
    "name": "InsidePartAlongPartOrWithLeaderLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InsidePartAlongPartOrWithLeaderLinePlacingType",
    "summary": "The InsidePartAlongPartOrWithLeaderLinePlacingType class defines a placing\r\n            type that places the object using the base line placing as the first option.\r\n            If there is no room for the first option the fallback option will be used.\r\n            The fallback option is placing the object with a leader line.\r\n            The base line used is in the middle of the part, aligned with the part."
  },
  {
    "id": "InsidePartAlongPartPlacingType Class",
    "name": "InsidePartAlongPartPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InsidePartAlongPartPlacingType",
    "summary": "The InsidePartAlongPartPlacingType class defines a placing type that \r\n            places the object using the base line placing.\r\n            The base line used is in the middle of the part, aligned with the part."
  },
  {
    "id": "InsidePartHorizontalOrWithLeaderLinePlacingType Class",
    "name": "InsidePartHorizontalOrWithLeaderLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InsidePartHorizontalOrWithLeaderLinePlacingType",
    "summary": "The InsidePartHorizontalOrWithLeaderLinePlacingType class defines a placing\r\n            type that places the object using the base line placing as the first option.\r\n            If there is no room for the first option the fallback option will be used.\r\n            The fallback option is placing the object with a leader line.\r\n            The base line used is in the middle of the part, aligned with the part.\r\n            In addition the object will be rotated to be horizontal in the drawing."
  },
  {
    "id": "InsidePartHorizontalPlacingType Class",
    "name": "InsidePartHorizontalPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InsidePartHorizontalPlacingType",
    "summary": "The InsidePartHorizontalPlacingType class defines a placing type that\r\n            places the object using the base line placing.\r\n            The base line used is in the middle of the part, aligned with the part.\r\n            In addition the object will be rotated to be horizontal in the drawing."
  },
  {
    "id": "IntList Class",
    "name": "IntList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.IntList",
    "summary": "The IntList class defines a type safe list of integers."
  },
  {
    "id": "InvalidAttributesForOperationException Class",
    "name": "InvalidAttributesForOperationException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InvalidAttributesForOperationException",
    "summary": "The InvalidAttributesForOperationException class defines the exception\r\n            that is thrown when an object's attributes are set to something that is\r\n            not valid for the object."
  },
  {
    "id": "InvalidPluginPickerInputException Class",
    "name": "InvalidPluginPickerInputException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InvalidPluginPickerInputException",
    "summary": "The InvalidPluginPickerInputException class defines the exception that is\r\n            thrown when UI.Picker is used during a Plugin.Insert call but the previously \r\n            assigned PluginPickerInput does not correspond to the next UI.Picker call."
  },
  {
    "id": "InvalidTypeException Class",
    "name": "InvalidTypeException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.InvalidTypeException",
    "summary": "The InvalidTypeException class defines the exception that is\r\n            thrown when a type was not one of the allowed ones."
  },
  {
    "id": "LayoutAttributes Class",
    "name": "LayoutAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LayoutAttributes",
    "summary": "The LayoutAttributes class contains attributes for controlling the drawing layout."
  },
  {
    "id": "LeaderLineAndParentObjectAlongPartPlacingType Class",
    "name": "LeaderLineAndParentObjectAlongPartPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LeaderLineAndParentObjectAlongPartPlacingType",
    "summary": "The LeaderLineAndParentObjectAlongPartPlacingType class defines a placing type that places\r\n            the object with a leader line and rotated to be at the same angle as the connected part."
  },
  {
    "id": "LeaderLinePlacing Class",
    "name": "LeaderLinePlacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LeaderLinePlacing",
    "summary": "The LeaderLinePlacing class defines a placing where the\r\n            object is placed attached to a leader line."
  },
  {
    "id": "LeaderLinePlacingType Class",
    "name": "LeaderLinePlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LeaderLinePlacingType",
    "summary": "The LeaderLinePlacingType class defines a placing type that places the object with a leader line."
  },
  {
    "id": "LevelMark Class",
    "name": "LevelMark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LevelMark",
    "summary": "The LevelMark class defines a drawing object that is displayed as a level mark in a drawing.\r\n            See the Tekla Structures help for more information."
  },
  {
    "id": "LevelMark.LevelMarkAttributes Class",
    "name": "LevelMark.LevelMarkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LevelMark.LevelMarkAttributes",
    "summary": "The LevelMarkAttributes class contains the attributes for the level mark."
  },
  {
    "id": "Line.LineAttributes Class",
    "name": "Line.LineAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Line.LineAttributes",
    "summary": "The LineAttributes class is the attributes class of the line."
  },
  {
    "id": "LineTypeAttributes Class",
    "name": "LineTypeAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LineTypeAttributes",
    "summary": "The LineTypeAttributes class contains basic attributes for lines."
  },
  {
    "id": "LineTypes Class",
    "name": "LineTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LineTypes",
    "summary": "The LineTypes class defines the possible line types that can be used by the drawing objects."
  },
  {
    "id": "LinkAttributes Class",
    "name": "LinkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LinkAttributes",
    "summary": "The LinkAttributes class contains the attributes for controlling the appearance of a link."
  },
  {
    "id": "LinkBase Class",
    "name": "LinkBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LinkBase",
    "summary": "The LinkBase class is the base class for links."
  },
  {
    "id": "LinkFrameAttributes Class",
    "name": "LinkFrameAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.LinkFrameAttributes",
    "summary": "The LinkFrameAttributes class contains the attributes for controlling the appearance of\r\n            a link frame."
  },
  {
    "id": "Mark Class",
    "name": "Mark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Mark",
    "summary": "The Mark class represents a mark object that contains a single mark.\r\n            Several mark objects can be merged into one mark set."
  },
  {
    "id": "Mark.MarkAttributes Class",
    "name": "Mark.MarkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Mark.MarkAttributes",
    "summary": "The MarkAttributes class defines the mark attributes."
  },
  {
    "id": "MarkBase Class",
    "name": "MarkBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.MarkBase",
    "summary": "The MarkBase class contains general mark information and can be\r\n             selected and modified with the general attributes."
  },
  {
    "id": "MarkBase.MarkBaseAttributes Class",
    "name": "MarkBase.MarkBaseAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.MarkBase.MarkBaseAttributes",
    "summary": "The MarkBaseAttributes class is the attributes class for the mark base."
  },
  {
    "id": "MarkSet Class",
    "name": "MarkSet Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.MarkSet",
    "summary": "The MarkSet class defines mark set objects that contain several mark objects merged to one mark set."
  },
  {
    "id": "MarkSet.MarkSetAttributes Class",
    "name": "MarkSet.MarkSetAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.MarkSet.MarkSetAttributes",
    "summary": "The MarkSetAttributes class is the attribute class for the mark set."
  },
  {
    "id": "ModelObject Class",
    "name": "ModelObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ModelObject",
    "summary": "The ModelObject class is an abstract class for all model objects in the drawing side.\r\n            The model objects of the drawing side contain identifiers of the actual model objects in the model database.\r\n            The model objects appear and disappear based on current view properties (view size, settings)."
  },
  {
    "id": "ModelObjectHatchAttributes Class",
    "name": "ModelObjectHatchAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ModelObjectHatchAttributes",
    "summary": "The ModelObjectHatchAttributes class contains hatch attributes for model object hatches."
  },
  {
    "id": "NewLineElement Class",
    "name": "NewLineElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.NewLineElement",
    "summary": "The NewLineElement class defines a line feed between the desired elements to create multi-row marks."
  },
  {
    "id": "NormalLineType Class",
    "name": "NormalLineType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.NormalLineType",
    "summary": "The NormalLineType class defines the non-custom line types that can be used by the drawing objects."
  },
  {
    "id": "OpenGraphicObject Class",
    "name": "OpenGraphicObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.OpenGraphicObject",
    "summary": "The OpenGraphicObject class is an abstract base class for all open graphic objects\r\n            (the arc, the line and the polyline)."
  },
  {
    "id": "OpenGraphicObject.OpenGraphicObjectAttributes Class",
    "name": "OpenGraphicObject.OpenGraphicObjectAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.OpenGraphicObject.OpenGraphicObjectAttributes",
    "summary": "The OpenGraphicObjectAttributes class is the attributes class of the open graphic object."
  },
  {
    "id": "Part.PartAttributes Class",
    "name": "Part.PartAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Part.PartAttributes",
    "summary": "The PartAttributes class is the attributes class for the part."
  },
  {
    "id": "PickerInput Class",
    "name": "PickerInput Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInput",
    "summary": "The PickerInput class instances can be provided as predefined results of requests through the\r\n            methods of the UI.Picker class."
  },
  {
    "id": "PickerInputInterrupt Class",
    "name": "PickerInputInterrupt Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputInterrupt",
    "summary": "The PickerInputInterrupt class represents the interruption of picking by the user (e.g. by\r\n            pressing Escape while requested to pick points).\r\n            Used for values asked by any UI.Picker.Pick* method where an interrupt happens by the user."
  },
  {
    "id": "PickerInputNPoints Class",
    "name": "PickerInputNPoints Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputNPoints",
    "summary": "The PickerInputNPoints class represents a pick of several points in a view.\r\n            Used for values asked by UI.Picker.PickPoints(StringList Prompts, out PointList PickedPoints, out ViewBase PickedView) and\r\n            UI.Picker.PickPoints(int NumberOfPicks, StringList Prompts, out PointList PickedPoints, out ViewBase PickedView)."
  },
  {
    "id": "PickerInputObject Class",
    "name": "PickerInputObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputObject",
    "summary": "The PickerInputObject class represents a pick of an object in a view.\r\n            Used for values asked by UI.Picker.PickObject(string Prompt, out DrawingObject PickedObject, out ViewBase PickedView)."
  },
  {
    "id": "PickerInputPointsWithinAView Class",
    "name": "PickerInputPointsWithinAView Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputPointsWithinAView",
    "summary": "The PickerInputPointsWithinAView class is the base class of PickerInput instances that represent\r\n            a pick of one or more points in a view."
  },
  {
    "id": "PickerInputThreePoints Class",
    "name": "PickerInputThreePoints Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputThreePoints",
    "summary": "The PickerInputThreePoints class represents a pick of three points in a view.\r\n            Used for values asked by UI.Picker.PickThreePoints(string FirstPrompt, string SecondPrompt, string ThirdPrompt, out Point FirstPickedPoint, out Point SecondPickedPoint, out Point ThirdPickedPoint, out ViewBase PickedView)."
  },
  {
    "id": "PickerInputTwoPoints Class",
    "name": "PickerInputTwoPoints Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputTwoPoints",
    "summary": "The PickerInputTwoPoints class represents a pick of two points in a view.\r\n            Used for values asked by UI.Picker.PickTwoPoints(string FirstPrompt, string SecondPrompt, out Point FirstPickedPoint, out Point SecondPickedPoint, out ViewBase PickedView)."
  },
  {
    "id": "PickerInputWithinAView Class",
    "name": "PickerInputWithinAView Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInputWithinAView",
    "summary": "The PickerInputWithinAView class is the base class of PickerInput instances that represent\r\n            a valid pick of point(s) or object(s) in a view."
  },
  {
    "id": "PickerInterruptedException Class",
    "name": "PickerInterruptedException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PickerInterruptedException",
    "summary": "The PickerInterruptedException class defines the exception\r\n            that is thrown when a user interrupts the picker."
  },
  {
    "id": "PlacingAttributes Class",
    "name": "PlacingAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingAttributes",
    "summary": "The PlacingAttributes class contains the basic attributes for determining an object's placing."
  },
  {
    "id": "PlacingBase Class",
    "name": "PlacingBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingBase",
    "summary": "The PlacingBase class is the base class for placing types.\r\n            If you set a user defined Placing to an object it will override the PreferredPlacingType set in the object's attributes.\r\n            Please note that not all objects accept all types.\r\n            If you try to use the wrong type it will not be accepted (Insert, Modify will fail).\r\n            (It is strongly recommended to use the PreferredPlacingTypes to assign new Placings to objects.)"
  },
  {
    "id": "PlacingDirectionAttributes Class",
    "name": "PlacingDirectionAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingDirectionAttributes",
    "summary": "The PlacingDirectionAttributes class contains the basic attributes for placing directions."
  },
  {
    "id": "PlacingDistanceAttributes Class",
    "name": "PlacingDistanceAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingDistanceAttributes",
    "summary": "The PlacingDistanceAttributes class contains the basic attributes for placing distances."
  },
  {
    "id": "PlacingQuarterAttributes Class",
    "name": "PlacingQuarterAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingQuarterAttributes",
    "summary": "The PlacingQuarterAttributes class contains the basic attributes for placing quarters."
  },
  {
    "id": "PlacingTypes Class",
    "name": "PlacingTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PlacingTypes",
    "summary": "The PlacingTypes class defines the different available placing types.\r\n            Please note that not all objects accept all types.\r\n            If you try to use the wrong type it will not be accepted (Insert, Modify will fail)."
  },
  {
    "id": "Plugin Class",
    "name": "Plugin Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Plugin",
    "summary": "The Plugin class represents a drawing plug-in."
  },
  {
    "id": "PluginPickerInput Class",
    "name": "PluginPickerInput Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PluginPickerInput",
    "summary": "The PluginPickerInput class represents a predefined set of picker inputs that can be provided\r\n            to a plug-in object. It replaces the interactive selection of points and/or objects by the user\r\n            when the plug-in is inserted into a drawing through the API."
  },
  {
    "id": "PointList Class",
    "name": "PointList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PointList",
    "summary": "The PointList class defines a type safe point list."
  },
  {
    "id": "PointPlacing Class",
    "name": "PointPlacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PointPlacing",
    "summary": "The PointPlacing class defines a placing where the object is placed at\r\n            one point (the insertion point) without any additional placing options."
  },
  {
    "id": "PointPlacingType Class",
    "name": "PointPlacingType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PointPlacingType",
    "summary": "The PointPlacingType class defines a placing type where the object is placed\r\n            at one point (the insertion point) without any additional placing options."
  },
  {
    "id": "Polygon Class",
    "name": "Polygon Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Polygon",
    "summary": "The Polygon class defines a polygon that is a multipoint line which is connected. It can also have a bulge (curved lines)."
  },
  {
    "id": "Polygon.PolygonAttributes Class",
    "name": "Polygon.PolygonAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Polygon.PolygonAttributes",
    "summary": "The PolygonAttributes class is the attributes class of the polygon."
  },
  {
    "id": "Polyline Class",
    "name": "Polyline Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Polyline",
    "summary": "The Polyline class defines a polyline that is a multipoint line. It can also have a bulge (curved lines)."
  },
  {
    "id": "Polyline.PolylineAttributes Class",
    "name": "Polyline.PolylineAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Polyline.PolylineAttributes",
    "summary": "The PolylineAttributes class is the attributes class of the polyline."
  },
  {
    "id": "PourBreak Class",
    "name": "PourBreak Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PourBreak",
    "summary": "The PourBreak class contains methods related to pour breaks.\r\n            A pour break is a drawing object derived from a model object.\r\n            It represents a drawing pour break that has a reference to the\r\n            actual pour break in the model database."
  },
  {
    "id": "PourBreak.PourBreakAttributes Class",
    "name": "PourBreak.PourBreakAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PourBreak.PourBreakAttributes",
    "summary": "The PourBreakAttributes class is the attributes class for the pour break."
  },
  {
    "id": "PourObject Class",
    "name": "PourObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PourObject",
    "summary": "The PourObject class contains methods related to pours.\r\n            A pour is a drawing object derived from a model object.\r\n            It represents a drawing pour that has a reference to the\r\n            actual pour in the model database."
  },
  {
    "id": "PourObject.PourAttributes Class",
    "name": "PourObject.PourAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PourObject.PourAttributes",
    "summary": "The PourAttributes class is the attributes class for the pour."
  },
  {
    "id": "PreferredMarkPlacingTypes Class",
    "name": "PreferredMarkPlacingTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PreferredMarkPlacingTypes",
    "summary": "The PreferredMarkPlacingTypes class contains the available preferred mark placing types.\r\n            These are allowed to be used for marks.\r\n            However, there are different mark types and not all types can be used by all marks.\r\n            If you try to use the wrong type it will not be accepted (Insert, Modify will fail)."
  },
  {
    "id": "PreferredPlacingTypeBase Class",
    "name": "PreferredPlacingTypeBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PreferredPlacingTypeBase",
    "summary": "The PreferredPlacingTypeBase class is the base class for the preferred placing type.\r\n            You can set the PreferredPlacingType in the object's attributes to specify how your object should be placed in the drawing.\r\n            Please note that not all objects accept all types.\r\n            If you try to use the wrong type it will not be accepted (Insert, Modify will fail).\r\n            To use valid types you should use the named defaults\r\n            (PreferredTextPlacingTypes for Text, PreferredMarkPlacingTypes for Mark, PreferredSymbolPlacingTypes for Symbol)."
  },
  {
    "id": "PreferredPlacingTypes Class",
    "name": "PreferredPlacingTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PreferredPlacingTypes",
    "summary": "The PreferredPlacingTypes class contains all the available preferred placing types.\r\n            Please note that not all objects accept all types.\r\n            If you try to use the wrong type it will not be accepted (Insert, Modify will fail)."
  },
  {
    "id": "PreferredSymbolPlacingTypes Class",
    "name": "PreferredSymbolPlacingTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PreferredSymbolPlacingTypes",
    "summary": "The PreferredSymbolPlacingTypes class contains the available preferred symbol placing types.\r\n            These are allowed to be used for symbols."
  },
  {
    "id": "PreferredTextPlacingTypes Class",
    "name": "PreferredTextPlacingTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PreferredTextPlacingTypes",
    "summary": "The PreferredTextPlacingTypes class contains the available preferred text placing types.\r\n            These are allowed to be used for texts."
  },
  {
    "id": "PrintAttributes Class",
    "name": "PrintAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PrintAttributes",
    "summary": "The PrintAttributes class contains the attributes for controlling the printing."
  },
  {
    "id": "PropertyElement Class",
    "name": "PropertyElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement",
    "summary": "The PropertyElement class may represent any of the many different mark element types, such as the profile, the material and the name.\r\n            The property is defined by the name and it is converted into a textual value before the mark is drawn."
  },
  {
    "id": "PropertyElement.PropertyElementType Class",
    "name": "PropertyElement.PropertyElementType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType",
    "summary": "The PropertyElementType class represents the type of a property element."
  },
  {
    "id": "PropertyElement.PropertyElementType.BoltMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.BoltMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.BoltMarkPropertyElementTypes",
    "summary": "The BoltMarkPropertyElementTypes class represents the available property element types for bolt marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.ChamferMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.ChamferMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.ChamferMarkPropertyElementTypes",
    "summary": "The ChamferMarkPropertyElementTypes class represents the available property element types for chamfer marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.ConnectionMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.ConnectionMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.ConnectionMarkPropertyElementTypes",
    "summary": "The ConnectionMarkPropertyElementTypes class represents the available property element types for connection marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.DetailMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.DetailMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.DetailMarkPropertyElementTypes",
    "summary": "The DetailMarkPropertyElementTypes class represents the available property element types for detail marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.DetailViewLabelMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.DetailViewLabelMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.DetailViewLabelMarkPropertyElementTypes",
    "summary": "The DetailViewLabelMarkPropertyElementTypes class represents the available property element types for detail view label marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.MergedMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.MergedMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.MergedMarkPropertyElementTypes",
    "summary": "The MergedMarkPropertyElementTypes class represents the available property element types for merged marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.PartMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.PartMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.PartMarkPropertyElementTypes",
    "summary": "The PartMarkPropertyElementTypes class represents the available property element types for part marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.PourMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.PourMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.PourMarkPropertyElementTypes",
    "summary": "The PourMarkPropertyElementTypes class represents the available property element types for pour marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.ReinforcementMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.ReinforcementMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.ReinforcementMarkPropertyElementTypes",
    "summary": "The ReinforcementMarkPropertyElementTypes class represents the available property element types for reinforcement marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.ReinforcementMeshMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.ReinforcementMeshMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.ReinforcementMeshMarkPropertyElementTypes",
    "summary": "The ReinforcementMeshMarkPropertyElementTypes class represents the available property element types for reinforcement mesh marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.SectionMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.SectionMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.SectionMarkPropertyElementTypes",
    "summary": "The SectionMarkPropertyElementTypes class represents the available property element types for section marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.SectionViewLabelMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.SectionViewLabelMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.SectionViewLabelMarkPropertyElementTypes",
    "summary": "The SectionViewLabelMarkPropertyElementTypes class represents the available property element types for section view label marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.SurfacingMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.SurfacingMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.SurfacingMarkPropertyElementTypes",
    "summary": "The SurfacingMarkPropertyElementTypes class represents the available property element types for surfacing marks."
  },
  {
    "id": "PropertyElement.PropertyElementType.ViewLabelMarkPropertyElementTypes Class",
    "name": "PropertyElement.PropertyElementType.ViewLabelMarkPropertyElementTypes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.PropertyElement.PropertyElementType.ViewLabelMarkPropertyElementTypes",
    "summary": "The ViewLabelMarkPropertyElementTypes class represents the available property element types for view label marks."
  },
  {
    "id": "RadiusDimension Class",
    "name": "RadiusDimension Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.RadiusDimension",
    "summary": "The RadiusDimension class defines a radius dimension that displays the radius of the given arc."
  },
  {
    "id": "RadiusDimensionAttributes Class",
    "name": "RadiusDimensionAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.RadiusDimensionAttributes",
    "summary": "The RadiusDimensionAttributes class contains attributes to manage all the attributes of a straight dimension."
  },
  {
    "id": "Rectangle Class",
    "name": "Rectangle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Rectangle",
    "summary": "The Rectangle class defines a rectangle that is a box made of four lines with orthogonal angles."
  },
  {
    "id": "Rectangle.RectangleAttributes Class",
    "name": "Rectangle.RectangleAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Rectangle.RectangleAttributes",
    "summary": "The RectangleAttributes class is the attributes class of the rectangle."
  },
  {
    "id": "RectangleBoundingBox Class",
    "name": "RectangleBoundingBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.RectangleBoundingBox",
    "summary": "The RectangleBoundingBox class represents a bounding box for an object,\r\n            i.e. the surrounding box of the object. The bounding box contains the\r\n            calculated corner points of the box. The rectangle bounding box is\r\n            inherited from the axis-aligned bounding box. The AABB also contains methods\r\n            for getting the center point of the box."
  },
  {
    "id": "ReferenceModel.ReferenceModelAttributes Class",
    "name": "ReferenceModel.ReferenceModelAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReferenceModel.ReferenceModelAttributes",
    "summary": "The ReferenceModelAttributes class contains attributes for reference model objects."
  },
  {
    "id": "ReinforcementBase Class",
    "name": "ReinforcementBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase",
    "summary": "The ReinforcementBase class contains methods related to reinforcements.\r\n            A reinforcement is a drawing object derived from a model object.\r\n            It represents a drawing reinforcement that has a reference to the\r\n            actual reinforcement in the model database."
  },
  {
    "id": "ReinforcementBase.ReinforcementBaseAttributes Class",
    "name": "ReinforcementBase.ReinforcementBaseAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementBaseAttributes",
    "summary": "The ReinforcementBaseAttributes class is the attributes class for the reinforcement."
  },
  {
    "id": "ReinforcementBase.ReinforcementGroupAttributes Class",
    "name": "ReinforcementBase.ReinforcementGroupAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementGroupAttributes",
    "summary": "The ReinforcementGroupAttributes class is the base attributes class for\r\n            ReinforcementGroup."
  },
  {
    "id": "ReinforcementBase.ReinforcementMeshAttributes Class",
    "name": "ReinforcementBase.ReinforcementMeshAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementMeshAttributes",
    "summary": "The ReinforcementMeshAttributes class is the base attributes class for ReinforcementMesh."
  },
  {
    "id": "ReinforcementBase.ReinforcementSetGroupAttributes Class",
    "name": "ReinforcementBase.ReinforcementSetGroupAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementSetGroupAttributes",
    "summary": "The ReinforcementSetGroupAttributes class is the base attributes class for\r\n            ReinforcementSetGroup."
  },
  {
    "id": "ReinforcementBase.ReinforcementSingleAttributes Class",
    "name": "ReinforcementBase.ReinforcementSingleAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementSingleAttributes",
    "summary": "The ReinforcementSingleAttributes class is the base attributes class for\r\n            ReinforcementSingle."
  },
  {
    "id": "ReinforcementBase.ReinforcementStrandAttributes Class",
    "name": "ReinforcementBase.ReinforcementStrandAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementStrandAttributes",
    "summary": "The ReinforcementStrandAttributes class is the base attributes class for\r\n            ReinforcementStrand."
  },
  {
    "id": "ReinforcementGroup Class",
    "name": "ReinforcementGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementGroup",
    "summary": "The ReinforcementGroup class defines a reinforcement group in the drawing."
  },
  {
    "id": "ReinforcementMesh Class",
    "name": "ReinforcementMesh Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementMesh",
    "summary": "The ReinforcementMesh class defines a reinforcement mesh in the drawing."
  },
  {
    "id": "ReinforcementPulloutElement Class",
    "name": "ReinforcementPulloutElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementPulloutElement",
    "summary": "The ReinforcementPulloutElement class illustrates the shape and dimensions of a reinforcing bar in a drawing."
  },
  {
    "id": "ReinforcementSetGroup Class",
    "name": "ReinforcementSetGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementSetGroup",
    "summary": "The ReinforcementSetGroup class defines a reinforcement set group in the drawing.\r\n            A model rebar set generates one or more groups of rebars for drawing purposes and each group is\r\n            represented in a drawing as a reinforcement set group.\r\n            ModelIdentifier is always zero for the ReinforcementSetGroup."
  },
  {
    "id": "ReinforcementSingle Class",
    "name": "ReinforcementSingle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementSingle",
    "summary": "The ReinforcementSingle class defines a single (as in not part of a group) reinforcement bar in the drawing."
  },
  {
    "id": "ReinforcementStrand Class",
    "name": "ReinforcementStrand Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReinforcementStrand",
    "summary": "The ReinforcementStrand class defines a reinforcement mesh in the drawing."
  },
  {
    "id": "ReportTemplateElement Class",
    "name": "ReportTemplateElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ReportTemplateElement",
    "summary": "The ReportTemplateElement class represents a template in the Tekla Structures template library."
  },
  {
    "id": "SectionMark Class",
    "name": "SectionMark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMark",
    "summary": "The SectionMark class defines a drawing object that illustrates a straight section in a specific view."
  },
  {
    "id": "SectionMarkBase Class",
    "name": "SectionMarkBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase",
    "summary": "The SectionMarkBase class is a base class for both the SectionMark class and the CurvedSectionMark class."
  },
  {
    "id": "SectionMarkBase.SectionMarkAttributes Class",
    "name": "SectionMarkBase.SectionMarkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkAttributes",
    "summary": "The SectionMarkAttributes class is the attributes class for section marks."
  },
  {
    "id": "SectionMarkBase.SectionMarkSymbol Class",
    "name": "SectionMarkBase.SectionMarkSymbol Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkSymbol",
    "summary": "The SectionMarkSymbol class is for section mark attributes related to the shape of the connecting symbol."
  },
  {
    "id": "SectionMarkBase.SectionMarkTagAttributes Class",
    "name": "SectionMarkBase.SectionMarkTagAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkTagAttributes",
    "summary": "The SectionMarkTagAttributes class contains attributes for section mark tags."
  },
  {
    "id": "SectionMarkBase.SectionMarkTagsAttributes Class",
    "name": "SectionMarkBase.SectionMarkTagsAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkTagsAttributes",
    "summary": "The SectionMarkTagsAttributes class contains attributes for section mark tags."
  },
  {
    "id": "Size Class",
    "name": "Size Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Size",
    "summary": "The Size class contains the width and height properties."
  },
  {
    "id": "SpaceElement Class",
    "name": "SpaceElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SpaceElement",
    "summary": "The SpaceElement class defines a space between the desired elements."
  },
  {
    "id": "StraightDimension Class",
    "name": "StraightDimension Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StraightDimension",
    "summary": "The StraightDimension class defines straight dimensions."
  },
  {
    "id": "StraightDimension.StraightDimensionAttributes Class",
    "name": "StraightDimension.StraightDimensionAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StraightDimension.StraightDimensionAttributes",
    "summary": "The StraightDimensionAttributes class contains the attributes of the straight dimension."
  },
  {
    "id": "StraightDimensionSet Class",
    "name": "StraightDimensionSet Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StraightDimensionSet",
    "summary": "The StraightDimensionSet class defines a straight dimension set."
  },
  {
    "id": "StraightDimensionSet.StraightDimensionSetAttributes Class",
    "name": "StraightDimensionSet.StraightDimensionSetAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StraightDimensionSet.StraightDimensionSetAttributes",
    "summary": "The StraightDimensionSetAttributes class contains the attributes for managing\r\n            all the attributes of the straight dimension."
  },
  {
    "id": "StraightDimensionSetHandler Class",
    "name": "StraightDimensionSetHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StraightDimensionSetHandler",
    "summary": "The StraightDimensionSetHandler class contains operations for creating and modifying straight dimension sets."
  },
  {
    "id": "StringList Class",
    "name": "StringList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.StringList",
    "summary": "The StringList class defines a type safe string collection."
  },
  {
    "id": "Surfacing Class",
    "name": "Surfacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Surfacing",
    "summary": "The Surfacing class contains methods related to surfacings.\r\n            A surfacing is a drawing object derived from a model object.\r\n            It represents a drawing surfacing that has a reference to the\r\n            actual surfacing in the model database."
  },
  {
    "id": "Surfacing.SurfacingAttributes Class",
    "name": "Surfacing.SurfacingAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Surfacing.SurfacingAttributes",
    "summary": "The SurfacingAttributes class is the attributes class for the surfacing."
  },
  {
    "id": "Symbol Class",
    "name": "Symbol Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Symbol",
    "summary": "The Symbol class defines a drawing object that is displayed as a symbol in a drawing.\r\n            Symbols are located in the environment directory under the folder named \"symbols\"\r\n            in .sym files that can contain up to 255 symbols.\r\n            Symbol files can be created with SymEd. See the Tekla Structures help for more information."
  },
  {
    "id": "Symbol.SymbolAttributes Class",
    "name": "Symbol.SymbolAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Symbol.SymbolAttributes",
    "summary": "The SymbolAttributes class contains the attributes for the symbol."
  },
  {
    "id": "SymbolElement Class",
    "name": "SymbolElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SymbolElement",
    "summary": "The SymbolElement class represents a symbol in the Tekla Structures symbol library."
  },
  {
    "id": "SymbolInfo Class",
    "name": "SymbolInfo Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SymbolInfo",
    "summary": "The SymbolInfo class holds symbol information: the symbol file and the symbol index in the symbol file."
  },
  {
    "id": "SymbolLibrary Class",
    "name": "SymbolLibrary Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.SymbolLibrary",
    "summary": "The SymbolLibrary class is for handling symbol libraries."
  },
  {
    "id": "TeklaStructuresDrawingsApplicationException Class",
    "name": "TeklaStructuresDrawingsApplicationException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.TeklaStructuresDrawingsApplicationException",
    "summary": "The TeklaStructuresDrawingsApplicationException class defines the base class for all exceptions\r\n            that can be thrown while using Tekla.Structures.Drawing."
  },
  {
    "id": "TemplateInfo Class",
    "name": "TemplateInfo Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.TemplateInfo",
    "summary": "The TemplateInfo class holds template information."
  },
  {
    "id": "Text Class",
    "name": "Text Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Text",
    "summary": "The Text class defines a drawing object that can hold a text string and is shown in a drawing."
  },
  {
    "id": "Text.TextAttributes Class",
    "name": "Text.TextAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Text.TextAttributes",
    "summary": "The TextAttributes class is the attributes class for the text."
  },
  {
    "id": "TextElement Class",
    "name": "TextElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.TextElement",
    "summary": "The TextElement class defines a user-defined text in a mark content."
  },
  {
    "id": "TextFile Class",
    "name": "TextFile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.TextFile",
    "summary": "The TextFile class defines a text file object in a drawing."
  },
  {
    "id": "TextFile.TextFileAttributes Class",
    "name": "TextFile.TextFileAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.TextFile.TextFileAttributes",
    "summary": "The TextFileAttributes class contains the attributes for the text file object."
  },
  {
    "id": "UnitAttributes Class",
    "name": "UnitAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UnitAttributes",
    "summary": "The UnitAttributes class handles attributes related to units and formatting of values."
  },
  {
    "id": "UserDefinedElement Class",
    "name": "UserDefinedElement Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UserDefinedElement",
    "summary": "The UserDefinedElement class represents a user-defined attribute specified by its name.\r\n            A user-defined element is converted into a textual value before it is drawn."
  },
  {
    "id": "View Class",
    "name": "View Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View",
    "summary": "The View class contains methods related to views.\r\n             Views are views that contain other drawing objects, excluding other views.\r\n             Views also contain drawing representations of model objects."
  },
  {
    "id": "View.ViewAttributes Class",
    "name": "View.ViewAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View.ViewAttributes",
    "summary": "The ViewAttributes class contains the attributes for the view."
  },
  {
    "id": "View.ViewMarkSymbolAttributes Class",
    "name": "View.ViewMarkSymbolAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View.ViewMarkSymbolAttributes",
    "summary": "The ViewMarkSymbolAttributes class contains symbol attributes for view mark tags."
  },
  {
    "id": "View.ViewMarkTagAttributes Class",
    "name": "View.ViewMarkTagAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View.ViewMarkTagAttributes",
    "summary": "The ViewMarkTagAttributes class contains attributes for view mark tags."
  },
  {
    "id": "View.ViewMarkTagsAttributes Class",
    "name": "View.ViewMarkTagsAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View.ViewMarkTagsAttributes",
    "summary": "The ViewMarkTagsAttributes class contains attributes for view mark tags."
  },
  {
    "id": "View.ViewShorteningAttributes Class",
    "name": "View.ViewShorteningAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.View.ViewShorteningAttributes",
    "summary": "The ViewShorteningAttributes class sets the shortening attributes for the view.\r\n            If CutParts is set to true, the other values are applied. If it is false, none of the other values matter."
  },
  {
    "id": "ViewBase Class",
    "name": "ViewBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ViewBase",
    "summary": "The ViewBase class is a base class for both the ContainerView class and the View class."
  },
  {
    "id": "ViewMarkBasicSymbolAttributes Class",
    "name": "ViewMarkBasicSymbolAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ViewMarkBasicSymbolAttributes",
    "summary": "The ViewMarkBasicSymbolAttributes class contains basic attributes for mark symbols."
  },
  {
    "id": "ViewMarkBasicTagAttributes Class",
    "name": "ViewMarkBasicTagAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.ViewMarkBasicTagAttributes",
    "summary": "The ViewMarkBasicTagAttributes class contains basic attributes for view mark tags."
  },
  {
    "id": "Weld.WeldAttributes Class",
    "name": "Weld.WeldAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Weld.WeldAttributes",
    "summary": "The WeldAttributes class is the attributes class for the weld."
  },
  {
    "id": "WeldMark Class",
    "name": "WeldMark Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.WeldMark",
    "summary": "The WeldMark class defines a drawing object that illustrates a weld mark in a specific view.\r\n             WeldMark class refers to welding marks that appear when creating/updating drawing views. In this case, ModelIdentifier has a value.\r\n             WeldMark class also refers to weld marks created with drawing editor UI. In this case, ModelIdentifier value is zero.\r\n             Graphical representation of welding marks (line and text properties) can be modified using .wel setting files.\r\n             The welding mark settting files (.wls) cannot be used to modify instances of WeldMark class."
  },
  {
    "id": "WeldMark.SeamVisibilityAttributes Class",
    "name": "WeldMark.SeamVisibilityAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.WeldMark.SeamVisibilityAttributes",
    "summary": "The SeamVisibilityAttributes class is the attributes class for the weld seam visibility."
  },
  {
    "id": "WeldMark.WeldMarkAttributes Class",
    "name": "WeldMark.WeldMarkAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.WeldMark.WeldMarkAttributes",
    "summary": "The WeldMarkAttributes class is the attributes class for the weld mark attributes."
  },
  {
    "id": "AutoDrawingRule Class",
    "name": "AutoDrawingRule Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Automation.AutoDrawingRule",
    "summary": "The AutoDrawingRule class contains the definition of a rule for the Tekla Structures AutoDrawing tool."
  },
  {
    "id": "DrawingCreator Class",
    "name": "DrawingCreator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Automation.DrawingCreator",
    "summary": "The DrawingCreator class is for handling the creation of drawings using the built-in logic of Tekla Structures."
  },
  {
    "id": "Operation Class",
    "name": "Operation Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Operations.Operation",
    "summary": "Operations for drawing objects."
  },
  {
    "id": "DrawingCoordinateConverter Class",
    "name": "DrawingCoordinateConverter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Tools.DrawingCoordinateConverter",
    "summary": "The DrawingCoordinateConverter class is used to move coordinates from one view to \r\n             another. This tool takes into account the empty areas in the views."
  },
  {
    "id": "InputDefinitionFactory Class",
    "name": "InputDefinitionFactory Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.Tools.InputDefinitionFactory",
    "summary": "The InputDefinitionFactory class contains helper functions for input definition handling."
  },
  {
    "id": "DrawingObjectSelector Class",
    "name": "DrawingObjectSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UI.DrawingObjectSelector",
    "summary": "The DrawingObjectSelector class is used to select drawing objects in the drawing.\r\n            The class contains methods for selecting/unselecting single objects or\r\n            a list of objects. Currently, these selections both select the objects from the\r\n            database and highlight them visually."
  },
  {
    "id": "DrawingSelector Class",
    "name": "DrawingSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UI.DrawingSelector",
    "summary": "The DrawingSelector class provides functionality for accessing the drawing list dialog."
  },
  {
    "id": "Events Class",
    "name": "Events Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UI.Events",
    "summary": "The Events class allows the user to register event listeners for drawing user interface events."
  },
  {
    "id": "Picker Class",
    "name": "Picker Class",
    "type": "class",
    "namespace": "Tekla.Structures.Drawing.UI.Picker",
    "summary": "The Picker class is used to pick points and objects in the drawing."
  },
  {
    "id": "BinaryFilterExpression Class",
    "name": "BinaryFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.BinaryFilterExpression",
    "summary": "The BinaryFilterExpression class represents a binary expression between two filter expressions.\r\n            This class cannot be inherited."
  },
  {
    "id": "BinaryFilterExpressionCollection Class",
    "name": "BinaryFilterExpressionCollection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.BinaryFilterExpressionCollection",
    "summary": "The BinaryFilterExpressionCollection class represents a collection of BinaryFilterItem objects.\r\n             The class is used to represent linear expressions. This class cannot be inherited."
  },
  {
    "id": "BinaryFilterExpressionItem Class",
    "name": "BinaryFilterExpressionItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.BinaryFilterExpressionItem",
    "summary": "The BinaryFilterExpressionItem class represents a data item in a BinaryFilterExpressionCollection.\r\n            This class cannot be inherited."
  },
  {
    "id": "BooleanConstantFilterExpression Class",
    "name": "BooleanConstantFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.BooleanConstantFilterExpression",
    "summary": "The BooleanConstantFilterExpression class represents a constant Boolean filter expression."
  },
  {
    "id": "BooleanFilterExpression Class",
    "name": "BooleanFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.BooleanFilterExpression",
    "summary": "The BooleanFilterExpression class represents a Boolean filter expression."
  },
  {
    "id": "DataFilterExpression Class",
    "name": "DataFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.DataFilterExpression",
    "summary": "The DataFilterExpression class represents a basic data type for a filter expression.\r\n            This is a base class for other filter expressions and cannot be used directly."
  },
  {
    "id": "DateTimeConstantFilterExpression Class",
    "name": "DateTimeConstantFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.DateTimeConstantFilterExpression",
    "summary": "The DateTimeConstantFilterExpression class represents a constant DateTime filter expression."
  },
  {
    "id": "DateTimeFilterExpression Class",
    "name": "DateTimeFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.DateTimeFilterExpression",
    "summary": "The DateTimeFilterExpression class represents a DateTime filter expression."
  },
  {
    "id": "Expression Class",
    "name": "Expression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Expression",
    "summary": "The Expression class represents an expression. This is a base class for other expressions and cannot be used directly."
  },
  {
    "id": "Filter Class",
    "name": "Filter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Filter",
    "summary": "The Filter class creates a filter file based on the input FilterExpression object."
  },
  {
    "id": "FilterExpression Class",
    "name": "FilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.FilterExpression",
    "summary": "The FilterExpression class represents a filter expression. This is a base class for other\r\n            filter expressions and should not be used directly."
  },
  {
    "id": "InvalidFilterExpressionException Class",
    "name": "InvalidFilterExpressionException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.InvalidFilterExpressionException",
    "summary": "The InvalidFilterExpressionException class represents an error that occurred during the expression evaluation.\r\n            This class cannot be inherited."
  },
  {
    "id": "NumericConstantFilterExpression Class",
    "name": "NumericConstantFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.NumericConstantFilterExpression",
    "summary": "The NumericConstantFilterExpression class represents a constant numeric filter expression."
  },
  {
    "id": "NumericFilterExpression Class",
    "name": "NumericFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.NumericFilterExpression",
    "summary": "The NumericFilterExpression class represents a numeric filter expression."
  },
  {
    "id": "StringConstantFilterExpression Class",
    "name": "StringConstantFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.StringConstantFilterExpression",
    "summary": "The StringConstantFilterExpression class represents a constant string filter expression."
  },
  {
    "id": "StringFilterExpression Class",
    "name": "StringFilterExpression Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.StringFilterExpression",
    "summary": "The StringFilterExpression class represents a string filter expression."
  },
  {
    "id": "AssemblyFilterExpressions Class",
    "name": "AssemblyFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions",
    "summary": "The AssemblyFilterExpressions class contains all the assembly filter expressions."
  },
  {
    "id": "AssemblyFilterExpressions.CustomBoolean Class",
    "name": "AssemblyFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.CustomDateTime Class",
    "name": "AssemblyFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.CustomNumber Class",
    "name": "AssemblyFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.CustomString Class",
    "name": "AssemblyFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Guid Class",
    "name": "AssemblyFilterExpressions.Guid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Guid",
    "summary": "The Guid class represents the GUID filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.IdNumber Class",
    "name": "AssemblyFilterExpressions.IdNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.IdNumber",
    "summary": "The IdNumber class represents the identifier number filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Level Class",
    "name": "AssemblyFilterExpressions.Level Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Level",
    "summary": "The Level class represents the level filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Name Class",
    "name": "AssemblyFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Phase Class",
    "name": "AssemblyFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.PositionNumber Class",
    "name": "AssemblyFilterExpressions.PositionNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.PositionNumber",
    "summary": "The PositionNumber class represents the position number filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Prefix Class",
    "name": "AssemblyFilterExpressions.Prefix Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Prefix",
    "summary": "The Prefix class represents the prefix filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Series Class",
    "name": "AssemblyFilterExpressions.Series Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Series",
    "summary": "The Series class represents the series filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.StartNumber Class",
    "name": "AssemblyFilterExpressions.StartNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.StartNumber",
    "summary": "The StartNumber class represents the start number filter expression."
  },
  {
    "id": "AssemblyFilterExpressions.Type Class",
    "name": "AssemblyFilterExpressions.Type Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.AssemblyFilterExpressions.Type",
    "summary": "The Type class represents the type filter expression."
  },
  {
    "id": "BoltFilterExpressions Class",
    "name": "BoltFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions",
    "summary": "The BoltFilterExpressions class contains all the bolt filter expressions."
  },
  {
    "id": "BoltFilterExpressions.CustomBoolean Class",
    "name": "BoltFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "BoltFilterExpressions.CustomDateTime Class",
    "name": "BoltFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "BoltFilterExpressions.CustomNumber Class",
    "name": "BoltFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "BoltFilterExpressions.CustomString Class",
    "name": "BoltFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "BoltFilterExpressions.Length Class",
    "name": "BoltFilterExpressions.Length Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.Length",
    "summary": "The Length class represents the length filter expression."
  },
  {
    "id": "BoltFilterExpressions.Phase Class",
    "name": "BoltFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "BoltFilterExpressions.SiteWorkshop Class",
    "name": "BoltFilterExpressions.SiteWorkshop Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.SiteWorkshop",
    "summary": "The SiteWorkshop class represents the site/workshop filter expression."
  },
  {
    "id": "BoltFilterExpressions.Size Class",
    "name": "BoltFilterExpressions.Size Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.Size",
    "summary": "The Size class represents the size filter expression."
  },
  {
    "id": "BoltFilterExpressions.Standard Class",
    "name": "BoltFilterExpressions.Standard Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.BoltFilterExpressions.Standard",
    "summary": "The Standard class represents the standard filter expression."
  },
  {
    "id": "ComponentFilterExpressions Class",
    "name": "ComponentFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions",
    "summary": "The ComponentFilterExpressions class contains all the component filter expressions."
  },
  {
    "id": "ComponentFilterExpressions.ConnectionCode Class",
    "name": "ComponentFilterExpressions.ConnectionCode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.ConnectionCode",
    "summary": "The ConnectionCode class represents the connection code filter expression."
  },
  {
    "id": "ComponentFilterExpressions.CustomBoolean Class",
    "name": "ComponentFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ComponentFilterExpressions.CustomDateTime Class",
    "name": "ComponentFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ComponentFilterExpressions.CustomNumber Class",
    "name": "ComponentFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ComponentFilterExpressions.CustomString Class",
    "name": "ComponentFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ComponentFilterExpressions.Name Class",
    "name": "ComponentFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "ComponentFilterExpressions.Phase Class",
    "name": "ComponentFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "ComponentFilterExpressions.RunningNumber Class",
    "name": "ComponentFilterExpressions.RunningNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ComponentFilterExpressions.RunningNumber",
    "summary": "The RunningNumber class represents the running number filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions Class",
    "name": "ConstructionObjectFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions",
    "summary": "The ConstructionObjectFilterExpressions class contains all the construction object filter expressions."
  },
  {
    "id": "ConstructionObjectFilterExpressions.CustomBoolean Class",
    "name": "ConstructionObjectFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions.CustomDateTime Class",
    "name": "ConstructionObjectFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions.CustomNumber Class",
    "name": "ConstructionObjectFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions.CustomString Class",
    "name": "ConstructionObjectFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions.Phase Class",
    "name": "ConstructionObjectFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "ConstructionObjectFilterExpressions.Type Class",
    "name": "ConstructionObjectFilterExpressions.Type Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ConstructionObjectFilterExpressions.Type",
    "summary": "The Type class represents the type filter expression."
  },
  {
    "id": "LoadFilterExpressions Class",
    "name": "LoadFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions",
    "summary": "The LoadFilterExpressions class contains all the load filter expressions."
  },
  {
    "id": "LoadFilterExpressions.CustomBoolean Class",
    "name": "LoadFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "LoadFilterExpressions.CustomDateTime Class",
    "name": "LoadFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "LoadFilterExpressions.CustomNumber Class",
    "name": "LoadFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "LoadFilterExpressions.CustomString Class",
    "name": "LoadFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "LoadFilterExpressions.Group Class",
    "name": "LoadFilterExpressions.Group Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.Group",
    "summary": "The Group class represents the group filter expression."
  },
  {
    "id": "LoadFilterExpressions.Phase Class",
    "name": "LoadFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "LoadFilterExpressions.Type Class",
    "name": "LoadFilterExpressions.Type Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LoadFilterExpressions.Type",
    "summary": "The Type class represents the type filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions Class",
    "name": "LogicalAreaFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions",
    "summary": "The LogicalAreaFilterExpressions class contains all the logical area filter expressions."
  },
  {
    "id": "LogicalAreaFilterExpressions.Building Class",
    "name": "LogicalAreaFilterExpressions.Building Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.Building",
    "summary": "The Building class represents the building filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.CustomBoolean Class",
    "name": "LogicalAreaFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.CustomDateTime Class",
    "name": "LogicalAreaFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.CustomNumber Class",
    "name": "LogicalAreaFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.CustomString Class",
    "name": "LogicalAreaFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.Section Class",
    "name": "LogicalAreaFilterExpressions.Section Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.Section",
    "summary": "The Section class represents the section filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.Site Class",
    "name": "LogicalAreaFilterExpressions.Site Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.Site",
    "summary": "The Site class represents the site filter expression."
  },
  {
    "id": "LogicalAreaFilterExpressions.Story Class",
    "name": "LogicalAreaFilterExpressions.Story Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.LogicalAreaFilterExpressions.Story",
    "summary": "The Story class represents the story filter expression."
  },
  {
    "id": "ObjectFilterExpressions Class",
    "name": "ObjectFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions",
    "summary": "The ObjectFilterExpressions class contains all the object filter expressions."
  },
  {
    "id": "ObjectFilterExpressions.CustomBoolean Class",
    "name": "ObjectFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ObjectFilterExpressions.CustomDateTime Class",
    "name": "ObjectFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ObjectFilterExpressions.CustomNumber Class",
    "name": "ObjectFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ObjectFilterExpressions.CustomString Class",
    "name": "ObjectFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ObjectFilterExpressions.Guid Class",
    "name": "ObjectFilterExpressions.Guid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.Guid",
    "summary": "The Guid class represents the GUID filter expression."
  },
  {
    "id": "ObjectFilterExpressions.IdNumber Class",
    "name": "ObjectFilterExpressions.IdNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.IdNumber",
    "summary": "The IdNumber class represents the identifier number filter expression."
  },
  {
    "id": "ObjectFilterExpressions.IsComponent Class",
    "name": "ObjectFilterExpressions.IsComponent Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.IsComponent",
    "summary": "The IsComponent class represents the \"is component\" filter expression."
  },
  {
    "id": "ObjectFilterExpressions.Phase Class",
    "name": "ObjectFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "ObjectFilterExpressions.Type Class",
    "name": "ObjectFilterExpressions.Type Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectFilterExpressions.Type",
    "summary": "The Type class represents the type filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions Class",
    "name": "ObjectTypesFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions",
    "summary": "The ObjectTypesFilterExpressions class contains all the object type filter expressions."
  },
  {
    "id": "ObjectTypesFilterExpressions.CategoryName Class",
    "name": "ObjectTypesFilterExpressions.CategoryName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.CategoryName",
    "summary": "The CategoryName class represents the category name filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions.CustomBoolean Class",
    "name": "ObjectTypesFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions.CustomDateTime Class",
    "name": "ObjectTypesFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions.CustomNumber Class",
    "name": "ObjectTypesFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions.CustomString Class",
    "name": "ObjectTypesFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ObjectTypesFilterExpressions.EntityName Class",
    "name": "ObjectTypesFilterExpressions.EntityName Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ObjectTypesFilterExpressions.EntityName",
    "summary": "The EntityName class represents the entity name filter expression."
  },
  {
    "id": "PartFilterExpressions Class",
    "name": "PartFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions",
    "summary": "The PartFilterExpressions class contains all the part filter expressions."
  },
  {
    "id": "PartFilterExpressions.Class Class",
    "name": "PartFilterExpressions.Class Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Class",
    "summary": "The Class class represents the class filter expression."
  },
  {
    "id": "PartFilterExpressions.CustomBoolean Class",
    "name": "PartFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "PartFilterExpressions.CustomDateTime Class",
    "name": "PartFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "PartFilterExpressions.CustomNumber Class",
    "name": "PartFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "PartFilterExpressions.CustomString Class",
    "name": "PartFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "PartFilterExpressions.Finish Class",
    "name": "PartFilterExpressions.Finish Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Finish",
    "summary": "The Finish class represents the finish filter expression."
  },
  {
    "id": "PartFilterExpressions.Lot Class",
    "name": "PartFilterExpressions.Lot Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Lot",
    "summary": "The Lot class represents the lot filter expression."
  },
  {
    "id": "PartFilterExpressions.Material Class",
    "name": "PartFilterExpressions.Material Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Material",
    "summary": "The Material class represents the material filter expression."
  },
  {
    "id": "PartFilterExpressions.Name Class",
    "name": "PartFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "PartFilterExpressions.NumberingSeries Class",
    "name": "PartFilterExpressions.NumberingSeries Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.NumberingSeries",
    "summary": "The NumberingSeries class represents the numbering series filter expression."
  },
  {
    "id": "PartFilterExpressions.Phase Class",
    "name": "PartFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "PartFilterExpressions.PositionNumber Class",
    "name": "PartFilterExpressions.PositionNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.PositionNumber",
    "summary": "The PositionNumber class represents the position number filter expression."
  },
  {
    "id": "PartFilterExpressions.PourPhase Class",
    "name": "PartFilterExpressions.PourPhase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.PourPhase",
    "summary": "The PourPhase class represents the pour phase filter expression."
  },
  {
    "id": "PartFilterExpressions.Prefix Class",
    "name": "PartFilterExpressions.Prefix Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Prefix",
    "summary": "The Prefix class represents the prefix filter expression."
  },
  {
    "id": "PartFilterExpressions.Profile Class",
    "name": "PartFilterExpressions.Profile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.Profile",
    "summary": "The Profile class represents the profile filter expression."
  },
  {
    "id": "PartFilterExpressions.StartNumber Class",
    "name": "PartFilterExpressions.StartNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PartFilterExpressions.StartNumber",
    "summary": "The StartNumber class represents the start number filter expression."
  },
  {
    "id": "PourBreakFilterExpressions Class",
    "name": "PourBreakFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourBreakFilterExpressions",
    "summary": "The PourBreakFilterExpressions class contains all the pour break filter expressions."
  },
  {
    "id": "PourBreakFilterExpressions.CustomBoolean Class",
    "name": "PourBreakFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourBreakFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "PourBreakFilterExpressions.CustomDateTime Class",
    "name": "PourBreakFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourBreakFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "PourBreakFilterExpressions.CustomNumber Class",
    "name": "PourBreakFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourBreakFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "PourBreakFilterExpressions.CustomString Class",
    "name": "PourBreakFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourBreakFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "PourObjectFilterExpressions Class",
    "name": "PourObjectFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions",
    "summary": "The PourObjectFilterExpressions class contains all the pour object filter expressions."
  },
  {
    "id": "PourObjectFilterExpressions.ConcreteMixture Class",
    "name": "PourObjectFilterExpressions.ConcreteMixture Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.ConcreteMixture",
    "summary": "The ConcreteMixture class represents the concrete mixture filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.CustomBoolean Class",
    "name": "PourObjectFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.CustomDateTime Class",
    "name": "PourObjectFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.CustomNumber Class",
    "name": "PourObjectFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.CustomString Class",
    "name": "PourObjectFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.Material Class",
    "name": "PourObjectFilterExpressions.Material Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.Material",
    "summary": "The Material class represents the material filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.PourNumber Class",
    "name": "PourObjectFilterExpressions.PourNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.PourNumber",
    "summary": "The PourNumber class represents the pour number filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.PourPhase Class",
    "name": "PourObjectFilterExpressions.PourPhase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.PourPhase",
    "summary": "The PourPhase class represents the pour phase filter expression."
  },
  {
    "id": "PourObjectFilterExpressions.PourType Class",
    "name": "PourObjectFilterExpressions.PourType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourObjectFilterExpressions.PourType",
    "summary": "The PourType class represents the pour type filter expression."
  },
  {
    "id": "PourUnitFilterExpressions Class",
    "name": "PourUnitFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions",
    "summary": "The PourUnitFilterExpressions class contains all the pour unit filter expressions."
  },
  {
    "id": "PourUnitFilterExpressions.CustomBoolean Class",
    "name": "PourUnitFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "PourUnitFilterExpressions.CustomDateTime Class",
    "name": "PourUnitFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "PourUnitFilterExpressions.CustomNumber Class",
    "name": "PourUnitFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "PourUnitFilterExpressions.CustomString Class",
    "name": "PourUnitFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "PourUnitFilterExpressions.Guid Class",
    "name": "PourUnitFilterExpressions.Guid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.Guid",
    "summary": "The Guid class represents the GUID filter expression."
  },
  {
    "id": "PourUnitFilterExpressions.Name Class",
    "name": "PourUnitFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.PourUnitFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "ReferenceObjectFilterExpressions Class",
    "name": "ReferenceObjectFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReferenceObjectFilterExpressions",
    "summary": "The ReferenceObjectFilterExpressions class contains all the reference object filter expressions."
  },
  {
    "id": "ReferenceObjectFilterExpressions.CustomBoolean Class",
    "name": "ReferenceObjectFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReferenceObjectFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ReferenceObjectFilterExpressions.CustomDateTime Class",
    "name": "ReferenceObjectFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReferenceObjectFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ReferenceObjectFilterExpressions.CustomNumber Class",
    "name": "ReferenceObjectFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReferenceObjectFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ReferenceObjectFilterExpressions.CustomString Class",
    "name": "ReferenceObjectFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReferenceObjectFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions Class",
    "name": "ReinforcingBarFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions",
    "summary": "The ReinforcingBarFilterExpressions class contains all the reinforcing bar filter expressions."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Class Class",
    "name": "ReinforcingBarFilterExpressions.Class Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Class",
    "summary": "The Class class represents the class filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.CustomBoolean Class",
    "name": "ReinforcingBarFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.CustomDateTime Class",
    "name": "ReinforcingBarFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.CustomNumber Class",
    "name": "ReinforcingBarFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.CustomString Class",
    "name": "ReinforcingBarFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Diameter Class",
    "name": "ReinforcingBarFilterExpressions.Diameter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Diameter",
    "summary": "The Diameter class represents the diameter filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.JoinType Class",
    "name": "ReinforcingBarFilterExpressions.JoinType Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.JoinType",
    "summary": "The JoinType class represents the join type filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Length Class",
    "name": "ReinforcingBarFilterExpressions.Length Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Length",
    "summary": "The Length class represents the length filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Material Class",
    "name": "ReinforcingBarFilterExpressions.Material Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Material",
    "summary": "The Material class represents the material filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Name Class",
    "name": "ReinforcingBarFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.NumberingSeries Class",
    "name": "ReinforcingBarFilterExpressions.NumberingSeries Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.NumberingSeries",
    "summary": "The NumberingSeries class represents the numbering series filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Phase Class",
    "name": "ReinforcingBarFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Position Class",
    "name": "ReinforcingBarFilterExpressions.Position Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Position",
    "summary": "The Position class represents the position filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.PositionNumber Class",
    "name": "ReinforcingBarFilterExpressions.PositionNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.PositionNumber",
    "summary": "The PositionNumber class represents the position number filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Prefix Class",
    "name": "ReinforcingBarFilterExpressions.Prefix Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Prefix",
    "summary": "The Prefix class represents the prefix filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Shape Class",
    "name": "ReinforcingBarFilterExpressions.Shape Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Shape",
    "summary": "The Shape class represents the shape filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.Size Class",
    "name": "ReinforcingBarFilterExpressions.Size Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.Size",
    "summary": "The Size class represents the size filter expression."
  },
  {
    "id": "ReinforcingBarFilterExpressions.StartNumber Class",
    "name": "ReinforcingBarFilterExpressions.StartNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.ReinforcingBarFilterExpressions.StartNumber",
    "summary": "The StartNumber class represents the start number filter expression."
  },
  {
    "id": "SurfaceFilterExpressions Class",
    "name": "SurfaceFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions",
    "summary": "The SurfaceFilterExpressions class contains all the surface object filter expressions."
  },
  {
    "id": "SurfaceFilterExpressions.Class Class",
    "name": "SurfaceFilterExpressions.Class Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.Class",
    "summary": "The Class class represents the class filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.CustomBoolean Class",
    "name": "SurfaceFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.CustomDateTime Class",
    "name": "SurfaceFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.CustomNumber Class",
    "name": "SurfaceFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.CustomString Class",
    "name": "SurfaceFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.Name Class",
    "name": "SurfaceFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "SurfaceFilterExpressions.Type Class",
    "name": "SurfaceFilterExpressions.Type Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.SurfaceFilterExpressions.Type",
    "summary": "The Type class represents the type filter expression."
  },
  {
    "id": "TaskFilterExpressions Class",
    "name": "TaskFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions",
    "summary": "The TaskFilterExpressions class contains all the task filter expressions."
  },
  {
    "id": "TaskFilterExpressions.ActualEndDate Class",
    "name": "TaskFilterExpressions.ActualEndDate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.ActualEndDate",
    "summary": "The ActualEndDate class represents the actual end date filter expression."
  },
  {
    "id": "TaskFilterExpressions.ActualStartDate Class",
    "name": "TaskFilterExpressions.ActualStartDate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.ActualStartDate",
    "summary": "The ActualStartDate class represents the actual start date filter expression."
  },
  {
    "id": "TaskFilterExpressions.Completeness Class",
    "name": "TaskFilterExpressions.Completeness Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.Completeness",
    "summary": "The Completeness class represents the completeness filter expression."
  },
  {
    "id": "TaskFilterExpressions.Critical Class",
    "name": "TaskFilterExpressions.Critical Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.Critical",
    "summary": "The Critical class represents the critical filter expression."
  },
  {
    "id": "TaskFilterExpressions.CustomBoolean Class",
    "name": "TaskFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "TaskFilterExpressions.CustomDateTime Class",
    "name": "TaskFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "TaskFilterExpressions.CustomNumber Class",
    "name": "TaskFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "TaskFilterExpressions.CustomString Class",
    "name": "TaskFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "TaskFilterExpressions.Local Class",
    "name": "TaskFilterExpressions.Local Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.Local",
    "summary": "The Local class represents the local filter expression."
  },
  {
    "id": "TaskFilterExpressions.Name Class",
    "name": "TaskFilterExpressions.Name Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.Name",
    "summary": "The Name class represents the name filter expression."
  },
  {
    "id": "TaskFilterExpressions.PlannedEndDate Class",
    "name": "TaskFilterExpressions.PlannedEndDate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.PlannedEndDate",
    "summary": "The PlannedEndDate class represents the planned end date filter expression."
  },
  {
    "id": "TaskFilterExpressions.PlannedStartDate Class",
    "name": "TaskFilterExpressions.PlannedStartDate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TaskFilterExpressions.PlannedStartDate",
    "summary": "The PlannedStartDate class represents the planned start date filter expression."
  },
  {
    "id": "TemplateFilterExpressions Class",
    "name": "TemplateFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TemplateFilterExpressions",
    "summary": "The TemplateFilterExpressions class contains all the template filter expressions."
  },
  {
    "id": "TemplateFilterExpressions.CustomBoolean Class",
    "name": "TemplateFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TemplateFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "TemplateFilterExpressions.CustomDateTime Class",
    "name": "TemplateFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TemplateFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "TemplateFilterExpressions.CustomNumber Class",
    "name": "TemplateFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TemplateFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "TemplateFilterExpressions.CustomString Class",
    "name": "TemplateFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.TemplateFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "WeldFilterExpressions Class",
    "name": "WeldFilterExpressions Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions",
    "summary": "The WeldFilterExpressions class contains all the weld filter expressions."
  },
  {
    "id": "WeldFilterExpressions.CustomBoolean Class",
    "name": "WeldFilterExpressions.CustomBoolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.CustomBoolean",
    "summary": "The CustomBoolean class represents a custom Boolean filter expression."
  },
  {
    "id": "WeldFilterExpressions.CustomDateTime Class",
    "name": "WeldFilterExpressions.CustomDateTime Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.CustomDateTime",
    "summary": "The CustomDateTime class represents a custom DateTime filter expression."
  },
  {
    "id": "WeldFilterExpressions.CustomNumber Class",
    "name": "WeldFilterExpressions.CustomNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.CustomNumber",
    "summary": "The CustomNumber class represents a custom numeric filter expression."
  },
  {
    "id": "WeldFilterExpressions.CustomString Class",
    "name": "WeldFilterExpressions.CustomString Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.CustomString",
    "summary": "The CustomString class represents a custom string filter expression."
  },
  {
    "id": "WeldFilterExpressions.Phase Class",
    "name": "WeldFilterExpressions.Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.Phase",
    "summary": "The Phase class represents the phase filter expression."
  },
  {
    "id": "WeldFilterExpressions.PositionNumber Class",
    "name": "WeldFilterExpressions.PositionNumber Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.PositionNumber",
    "summary": "The PositionNumber class represents the position number filter expression."
  },
  {
    "id": "WeldFilterExpressions.ReferenceText Class",
    "name": "WeldFilterExpressions.ReferenceText Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.ReferenceText",
    "summary": "The ReferenceText class represents the reference text filter expression."
  },
  {
    "id": "WeldFilterExpressions.WeldingSite Class",
    "name": "WeldFilterExpressions.WeldingSite Class",
    "type": "class",
    "namespace": "Tekla.Structures.Filtering.Categories.WeldFilterExpressions.WeldingSite",
    "summary": "The WeldingSite class represents the welding site filter expression."
  },
  {
    "id": "FormingStates Class",
    "name": "FormingStates Class",
    "type": "class",
    "namespace": "Tekla.Structures.Forming.FormingStates",
    "summary": "FormingStates class which contains different forming options."
  },
  {
    "id": "AABB Class",
    "name": "AABB Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.AABB",
    "summary": "The AABB class represents an axis-aligned 3d bounding box."
  },
  {
    "id": "CoordinateSystem Class",
    "name": "CoordinateSystem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.CoordinateSystem",
    "summary": "The CoordinateSystem class defines a coordinate system in space. The system is\r\n            defined by an origin, an X-axis and a Y-axis. The Z-axis is the cross product of the X-axis and the Y-axis."
  },
  {
    "id": "Distance Class",
    "name": "Distance Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Distance",
    "summary": "The Distance class contains methods for calculating the distance between geometric objects."
  },
  {
    "id": "FacetedBrep Class",
    "name": "FacetedBrep Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.FacetedBrep",
    "summary": "The FacetedBrep class defines a faceted BREP."
  },
  {
    "id": "FacetedBrepFace Class",
    "name": "FacetedBrepFace Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.FacetedBrepFace",
    "summary": "The FacetedBrepFace class defines a face of a faceted BREP.\r\n             A FacetedBrepFace cannot be instantiated directly. They are managed internally by a FacetedBrep."
  },
  {
    "id": "FacetedBrepFaceHole Class",
    "name": "FacetedBrepFaceHole Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.FacetedBrepFaceHole",
    "summary": "The FacetedBrepFaceHole class defines a hole on a faceted BREP face.\r\n            A FacetedBrepFaceHole cannot be instantiated directly. They are managed internally by a FacetedBrepFace.\r\n            You can look also at the code example for the class FacetedBrepFace to see more examples."
  },
  {
    "id": "FacetedBrepWithNormals Class",
    "name": "FacetedBrepWithNormals Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.FacetedBrepWithNormals",
    "summary": "The FacetedBRepWithNormals class defines a faceted BREP that has also vertex normal vectors."
  },
  {
    "id": "GeometricPlane Class",
    "name": "GeometricPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.GeometricPlane",
    "summary": "The GeometricPlane class represents a 3d geometric plane."
  },
  {
    "id": "GeometryConstants Class",
    "name": "GeometryConstants Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.GeometryConstants",
    "summary": "The Constants class of Geometry3d holds certain constant values that are used\r\n            internally by the other geometry classes."
  },
  {
    "id": "IndirectPolymeshEdge Class",
    "name": "IndirectPolymeshEdge Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.IndirectPolymeshEdge",
    "summary": "The IndirectEdge class represents a single global edge in a solid\r\n             using integer indexes to reference to vertices instead of directly using\r\n             geometric (coordinate) values."
  },
  {
    "id": "Intersection Class",
    "name": "Intersection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Intersection",
    "summary": "The Intersection class contains methods for calculating intersections between geometric objects."
  },
  {
    "id": "LineSegment Class",
    "name": "LineSegment Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.LineSegment",
    "summary": "The LineSegment class represents a single finite segment of a line in 3D space. See Line\r\n            for the implementation of a straight line."
  },
  {
    "id": "Matrix Class",
    "name": "Matrix Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Matrix",
    "summary": "The Matrix class represents a 4x3 matrix."
  },
  {
    "id": "MatrixFactory Class",
    "name": "MatrixFactory Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.MatrixFactory",
    "summary": "The MatrixFactory class provides a convenient way to generate different\r\n            kinds of transformation matrices."
  },
  {
    "id": "OBB Class",
    "name": "OBB Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.OBB",
    "summary": "The OBB class represents an oriented 3d bounding box."
  },
  {
    "id": "Parallel Class",
    "name": "Parallel Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Parallel",
    "summary": "The Parallel class contains methods for testing the parallelism of geometric objects."
  },
  {
    "id": "Polycurve Class",
    "name": "Polycurve Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Polycurve",
    "summary": "Represents 3D polycurve geometry, which itself is composed of one or more connected curves. The class offers\r\n             facilities for iteration through the polycurve, and implements the ICurve interface.\r\n            \r\n             Once this class is constructed, it represents an immutable polycurve. The curves that can be obtained during\r\n             iteration are mere copies of the curves in the polycurve, and mutating them won't affect the polycurve. Please\r\n             use the PolycurveGeometryBuilder class to build and manipulate this objects of this class.\r\n            \r\n             Since it implements IEnumerable, the curves can be iterated using foreach loops, and it supports\r\n             all of the LINQ operations, and it is possible to build arbitrarily complex queries over the curves of this\r\n             class."
  },
  {
    "id": "PolycurveGeometryBuilder Class",
    "name": "PolycurveGeometryBuilder Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.PolycurveGeometryBuilder",
    "summary": "Creates an empty geometry builder. This builder contains no geometries"
  },
  {
    "id": "Projection Class",
    "name": "Projection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Projection",
    "summary": "The Projection class contains methods for calculating the projection of geometric objects on\r\n            other geometric objects."
  },
  {
    "id": "Vector Class",
    "name": "Vector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Geometry3d.Vector",
    "summary": "The Vector class defines a direction and magnitude from the current origin."
  },
  {
    "id": "BaseComponent Class",
    "name": "BaseComponent Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BaseComponent",
    "summary": "The BaseComponent class is an abstract base class that represents generic components. The generic components\r\n            derived from the base component are the component, the connection, the detail and the seam."
  },
  {
    "id": "BaseRebarModifier Class",
    "name": "BaseRebarModifier Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BaseRebarModifier",
    "summary": "Represents a modifier that can modify the characteristics of RebarSet reinforcing bars that pass through it."
  },
  {
    "id": "BendSurface Class",
    "name": "BendSurface Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BendSurface",
    "summary": "The BendSurface class defines a surface contour that can be used as a bend between two plates"
  },
  {
    "id": "BendSurfaceNode Class",
    "name": "BendSurfaceNode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BendSurfaceNode",
    "summary": "The BendSurfaceNode class represents a bend surface geometry tree node."
  },
  {
    "id": "BentPlate Class",
    "name": "BentPlate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BentPlate",
    "summary": "A class for the bent plate"
  },
  {
    "id": "BentPlateGeometrySolver Class",
    "name": "BentPlateGeometrySolver Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BentPlateGeometrySolver",
    "summary": "BentPlateGeometrySolver is a solver class to handle ConnectiveGeometry modification related computations."
  },
  {
    "id": "BoltArray Class",
    "name": "BoltArray Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BoltArray",
    "summary": "The BoltArray class defines a bolt group with an array shape."
  },
  {
    "id": "BoltCircle Class",
    "name": "BoltCircle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BoltCircle",
    "summary": "The BoltCircle class defines a bolt group with a circle shape."
  },
  {
    "id": "BoltGroup Class",
    "name": "BoltGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BoltGroup",
    "summary": "The BoltGroup class is an abstract base class for all bolt shapes, such as array, circle and XY list.\r\n            See the Tekla Structures help file for further information about the attributes."
  },
  {
    "id": "BoltHoleAttributes Class",
    "name": "BoltHoleAttributes Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BoltHoleAttributes",
    "summary": "The bolt hole attributes."
  },
  {
    "id": "BoltXYList Class",
    "name": "BoltXYList Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.BoltXYList",
    "summary": "The BoltXYList class defines a bolt group with an XY list shape. The bolt group is the most generic one\r\n            of the bolt groups."
  },
  {
    "id": "Boolean Class",
    "name": "Boolean Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Boolean",
    "summary": "The Boolean class is an abstract base class for boolean operations such as a part cut, an add, a fitting or\r\n            a cut plane."
  },
  {
    "id": "Brep Class",
    "name": "Brep Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Brep",
    "summary": "The Brep class represents a single brep in the model.\r\n             A brep has a single start and end point."
  },
  {
    "id": "Chamfer Class",
    "name": "Chamfer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Chamfer",
    "summary": "The Chamfer class defines how the corners of a polybeam or a contour plate are rounded."
  },
  {
    "id": "ChangeData Class",
    "name": "ChangeData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ChangeData",
    "summary": "The ChangeData class presents information about the detected change of the modelobject in the model. It is instantiated inside the connected method."
  },
  {
    "id": "ClashCheckData Class",
    "name": "ClashCheckData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ClashCheckData",
    "summary": "The ClashCheckData class presents information about the detected clash. It is instantiated inside the onClashDetected method.\r\n            The objects store the identifiers and type of the clash to be passed on to event subscribers."
  },
  {
    "id": "ClashCheckHandler Class",
    "name": "ClashCheckHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ClashCheckHandler",
    "summary": "The ClashCheckHandler class contains clash check methods."
  },
  {
    "id": "Component Class",
    "name": "Component Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Component",
    "summary": "The Component class represents a component. A component is a modelling tool that typically\r\n             assembles multiple parts to build some type of a structure, for example a hall macro or at a\r\n             smaller scale a reinforcement component (a macro). Also, a custom part is a component."
  },
  {
    "id": "ComponentInput Class",
    "name": "ComponentInput Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ComponentInput",
    "summary": "The ComponentInput class handles the input of component objects and positions. A component has one component input.\r\n            The component input must include all the needed input objects and points in the correct order. For example,\r\n            an input with a point and a part is different from an input of a part and a point.\r\n            The maximum number of different input items in the collection is 10."
  },
  {
    "id": "ConicalSurface Class",
    "name": "ConicalSurface Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ConicalSurface",
    "summary": "The ConicalSurface class defines a conical surface contour."
  },
  {
    "id": "ConicalSurfaceNode Class",
    "name": "ConicalSurfaceNode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ConicalSurfaceNode",
    "summary": "The ConicalSurfaceNode class represents conical surface geometry tree node."
  },
  {
    "id": "ConnectiveGeometry Class",
    "name": "ConnectiveGeometry Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ConnectiveGeometry",
    "summary": "A class for geometry formed of several geometry sections. Geometry is initialized with polygon geometry\r\n             and then can be extended by calling one of AddLeg methods using BentPlateGeometrySolver class.\r\n             In the case of success, two polygon geometries will be connected by cylindrical surface geometry possibly\r\n             with help of additional polygon geometries.\r\n             Resulted geometry, then, can be set to bent plate."
  },
  {
    "id": "ConnectiveGeometryException Class",
    "name": "ConnectiveGeometryException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ConnectiveGeometryException",
    "summary": "The ConnectiveGeometryException class represents an error that occurred during the ConnectiveGeometry creation or modification."
  },
  {
    "id": "Contour Class",
    "name": "Contour Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Contour",
    "summary": "The Contour class defines a possibly chamfered contour. Contours must not have loops."
  },
  {
    "id": "ControlCircle Class",
    "name": "ControlCircle Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlCircle",
    "summary": "The ControlCircle class defines a user defined (not magnetic) circle helping in modeling work.\r\n            If there are duplicated input points or 3 input points are in a line, ControlCircle.Insert() will return false.\r\n            ControlCircle.Select() will return the center point of the circle to Point1."
  },
  {
    "id": "ControlPlane Class",
    "name": "ControlPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlPlane",
    "summary": "The ControlPlane class defines a user defined (possibly magnetic) plane helping in modeling work."
  },
  {
    "id": "ControlPolycurve Class",
    "name": "ControlPolycurve Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ControlPolycurve",
    "summary": "The ControlPolycurve class defines a user defined polycurve object which contains a chain of line and arc geometries."
  },
  {
    "id": "CutPlane Class",
    "name": "CutPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CutPlane",
    "summary": "The CutPlane class defines how the end of a part is cut with a plane. A cut plane differs from a fitting because\r\n            a cut can never extend the boundaries of the original part."
  },
  {
    "id": "CylindricalSurface Class",
    "name": "CylindricalSurface Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CylindricalSurface",
    "summary": "The CylindricalSurface class defines a cylindrical surface contour."
  },
  {
    "id": "CylindricalSurfaceNode Class",
    "name": "CylindricalSurfaceNode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.CylindricalSurfaceNode",
    "summary": "The CylindricalSurfaceNode class represents cylindrical surface geometry tree node."
  },
  {
    "id": "DeformingData Class",
    "name": "DeformingData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.DeformingData",
    "summary": "The DeformingData class holds information about the deforming of parts.\r\n            Deformed parts are parts that have been warped, cambered or shortened."
  },
  {
    "id": "Detail Class",
    "name": "Detail Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Detail",
    "summary": "The Detail class represents a detail. A detail is different from a connection since the detail only connects to one part."
  },
  {
    "id": "DisposableToken Class",
    "name": "DisposableToken Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.DisposableToken",
    "summary": "Initializes a new instance of the DisposableToken class.\r\n            Top"
  },
  {
    "id": "EdgeChamfer Class",
    "name": "EdgeChamfer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.EdgeChamfer",
    "summary": "The EdgeChamfer class defines how the part edge is chamfered."
  },
  {
    "id": "Events Class",
    "name": "Events Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Events",
    "summary": "The Events class allows the user to register event listeners for model events."
  },
  {
    "id": "ExtensionIntersectsWithPlateException Class",
    "name": "ExtensionIntersectsWithPlateException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ExtensionIntersectsWithPlateException",
    "summary": "The ExtensionIntersectsWithPlateException class represents an error when extension plate clashes with plates."
  },
  {
    "id": "FacePerpendicularToIntersectionLineException Class",
    "name": "FacePerpendicularToIntersectionLineException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.FacePerpendicularToIntersectionLineException",
    "summary": "The FacePerpendicularToIntersectionLineException class represents an error when, face perpendicular to intersection line."
  },
  {
    "id": "FacesAtAnObtuseAngleException Class",
    "name": "FacesAtAnObtuseAngleException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.FacesAtAnObtuseAngleException",
    "summary": "The FacesAtAnObtuseAngleException class represents an error when, faces to be connected are too steep of an angle."
  },
  {
    "id": "FacesTooNearEachOtherException Class",
    "name": "FacesTooNearEachOtherException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.FacesTooNearEachOtherException",
    "summary": "The FacesTooNearEachOtherException class represents an error when, faces to be connected overlap."
  },
  {
    "id": "Fitting Class",
    "name": "Fitting Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Fitting",
    "summary": "The Fitting class defines how the part end fits to a plane.  A fitting can make the part either longer or shorter."
  },
  {
    "id": "GeneralConnectiveGeometryException Class",
    "name": "GeneralConnectiveGeometryException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GeneralConnectiveGeometryException",
    "summary": "The GeneralConnectiveGeometryException class represents a general error that occurred during the ConnectiveGeometry creation or modification."
  },
  {
    "id": "GeometrySection Class",
    "name": "GeometrySection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GeometrySection",
    "summary": "The GeometrySection class represents geometry node with its identifier."
  },
  {
    "id": "GeometrySectionEnumerator Class",
    "name": "GeometrySectionEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GeometrySectionEnumerator",
    "summary": "The GeometrySectionEnumerator class is used to enumerate the geometry sections of a bent plate geometry."
  },
  {
    "id": "Grid Class",
    "name": "Grid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Grid",
    "summary": "The Grid class defines a user defined (possibly magnetic) set of planes helping in modeling work. A grid has grid plane\r\n             instances as children."
  },
  {
    "id": "GridBase Class",
    "name": "GridBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GridBase",
    "summary": "The GridBase class defines the base class for grids."
  },
  {
    "id": "GridCylindricalSurface Class",
    "name": "GridCylindricalSurface Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GridCylindricalSurface",
    "summary": "The GridCylindricalSurface class defines a user defined (possibly magnetic) cylindrical surface helping in\r\n             modeling work. A grid cylindrical surface must always belong to a parent grid instance."
  },
  {
    "id": "GridPlane Class",
    "name": "GridPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GridPlane",
    "summary": "The GridPlane class defines a user defined (possibly magnetic) plane helping in modeling work. A grid plane must\r\n             always belong to a father grid instance."
  },
  {
    "id": "GridSurface Class",
    "name": "GridSurface Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.GridSurface",
    "summary": "The GridSurface class defines a user defined (possibly magnetic) surface helping in modeling work. A grid surface must\r\n            always belong to a parent GridBase instance."
  },
  {
    "id": "HierarchicDefinition Class",
    "name": "HierarchicDefinition Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.HierarchicDefinition",
    "summary": "The HierarchicDefinition class defines a hierarchy structure. This hierarchy structure can \r\n            be instantiated and extended by hierarchical objects."
  },
  {
    "id": "HierarchicObject Class",
    "name": "HierarchicObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.HierarchicObject",
    "summary": "The HierarchicObject class defines an object in a tree-structured hierarchy. The hierarchy structure is defined\r\n            by hierarchical definitions which the hierarchical objects instantiate. Hierarchical objects may contain\r\n            other hierarchical objects, thus forming a sub-hierarchy, or model objects."
  },
  {
    "id": "InputItem Class",
    "name": "InputItem Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.InputItem",
    "summary": "The InputItem class is used to store input objects and positions."
  },
  {
    "id": "InvalidCurveCombinationException Class",
    "name": "InvalidCurveCombinationException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.InvalidCurveCombinationException",
    "summary": "This class represent an exception thrown when the combination of base curves is not allowed in a lofted plate\r\n            operation"
  },
  {
    "id": "InvalidFacePointsException Class",
    "name": "InvalidFacePointsException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.InvalidFacePointsException",
    "summary": "The InvalidFacePointsException class represents an error when, cannot create geometry from requested face points."
  },
  {
    "id": "InvalidRadiusException Class",
    "name": "InvalidRadiusException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.InvalidRadiusException",
    "summary": "The InvalidRadiusException class represents an error when, cannot connect parts with a cylindrical section having the provided radius."
  },
  {
    "id": "Load Class",
    "name": "Load Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Load",
    "summary": "The Load class is an abstract base class for all loads."
  },
  {
    "id": "LoadArea Class",
    "name": "LoadArea Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadArea",
    "summary": "The LoadArea class defines a linearly-distributed force bound by a triangle or a quadrangle."
  },
  {
    "id": "LoadGroup Class",
    "name": "LoadGroup Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadGroup",
    "summary": "Creates a new load group instance.\r\n            Top"
  },
  {
    "id": "LoadTemperature Class",
    "name": "LoadTemperature Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadTemperature",
    "summary": "The LoadTemperature class defines a temperature change in a part, or a temperature difference between two part surfaces."
  },
  {
    "id": "LoadUniform Class",
    "name": "LoadUniform Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoadUniform",
    "summary": "The LoadUniform class defines a uniformly-distributed force bounded by a polygon."
  },
  {
    "id": "LoftedPlate Class",
    "name": "LoftedPlate Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoftedPlate",
    "summary": "This class represents a lofted plate"
  },
  {
    "id": "LoftedPlateOperationException Class",
    "name": "LoftedPlateOperationException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.LoftedPlateOperationException",
    "summary": "This empty class serves as a base (marker class) for all the exception thrown in lofted plate operations"
  },
  {
    "id": "Material Class",
    "name": "Material Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Material",
    "summary": "The Material class represents a single material that parts can be made of."
  },
  {
    "id": "ModelHandler Class",
    "name": "ModelHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ModelHandler",
    "summary": "The ModelHandler class provides information about the currently open Tekla Structures\r\n            model."
  },
  {
    "id": "ModelInfo Class",
    "name": "ModelInfo Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ModelInfo",
    "summary": "The ModelInfo class provides information about the currently open Tekla Structures\r\n            model."
  },
  {
    "id": "ModelObject Class",
    "name": "ModelObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ModelObject",
    "summary": "The ModelObject class is an abstract base class for all model objects, such as parts, bolts,\r\n             welds and reinforcements."
  },
  {
    "id": "ModelObjectEnumerator Class",
    "name": "ModelObjectEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ModelObjectEnumerator",
    "summary": "The ModelObjectEnumerator class provides the means to iterate through model object instances in the \r\n            current model."
  },
  {
    "id": "ModelObjectSelector Class",
    "name": "ModelObjectSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ModelObjectSelector",
    "summary": "The ModelObjectSelector class can be used to make different model object selections\r\n            from the current model."
  },
  {
    "id": "NullRulingException Class",
    "name": "NullRulingException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.NullRulingException",
    "summary": "This class represent an exception thrown when a ruling of the lofted plate (i.e. the lines that swipe the plate\r\n            surface between the base curves) would become zero because of a lofted plate operation"
  },
  {
    "id": "NumberingSeries Class",
    "name": "NumberingSeries Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.NumberingSeries",
    "summary": "The NumberingSeries class describes how an object is to be numbered."
  },
  {
    "id": "NumberingSeriesNullable Class",
    "name": "NumberingSeriesNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.NumberingSeriesNullable",
    "summary": "The NumberingSeriesNullable class describes how an object is to be numbered."
  },
  {
    "id": "Object Class",
    "name": "Object Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Object",
    "summary": "The Object class is an abstract base class for all the objects Tekla Structures has."
  },
  {
    "id": "Offset Class",
    "name": "Offset Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Offset",
    "summary": "The Offset class defines the offset value of start points and end points. The offset is the\r\n            distance from the current work plane in the three global directions."
  },
  {
    "id": "Phase Class",
    "name": "Phase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Phase",
    "summary": "The Phase class defines a model object phase."
  },
  {
    "id": "PhaseCollection Class",
    "name": "PhaseCollection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PhaseCollection",
    "summary": "The PhaseCollection class handles the collection of the model phases."
  },
  {
    "id": "Plane Class",
    "name": "Plane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Plane",
    "summary": "The Plane class defines a plane in space using an origin, an X-axis and a Y-axis."
  },
  {
    "id": "PlateIntersectsWithIntersectionLineException Class",
    "name": "PlateIntersectsWithIntersectionLineException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PlateIntersectsWithIntersectionLineException",
    "summary": "The PlateIntersectsWithIntersectionLineException class represents an error when, plate polygon extends beyond intersection line."
  },
  {
    "id": "PointCloud Class",
    "name": "PointCloud Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PointCloud",
    "summary": "Initializes a new instance of the PointCloud class."
  },
  {
    "id": "Polygon Class",
    "name": "Polygon Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Polygon",
    "summary": "The Polygon class represents a polygon object that has its corners at the given points."
  },
  {
    "id": "PolygonNode Class",
    "name": "PolygonNode Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PolygonNode",
    "summary": "The PolygonNode class represents flat geometry tree node."
  },
  {
    "id": "Polymesh Class",
    "name": "Polymesh Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Polymesh",
    "summary": "The Polygon class represents a polygon object that has its corners at the given points."
  },
  {
    "id": "PolymeshEnumerator Class",
    "name": "PolymeshEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PolymeshEnumerator",
    "summary": "The PolymeshEnumerator class is used to enumerate the polymesh of a pour's merged faces."
  },
  {
    "id": "Position Class",
    "name": "Position Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Position",
    "summary": "The Position class defines how a part is positioned relative to the input."
  },
  {
    "id": "PourBreak Class",
    "name": "PourBreak Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PourBreak",
    "summary": "The PourBreak class represents a pour break in a model."
  },
  {
    "id": "PourObject Class",
    "name": "PourObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PourObject",
    "summary": "The PourObject class represents a pour object in the model."
  },
  {
    "id": "PourUnit Class",
    "name": "PourUnit Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.PourUnit",
    "summary": "The PourUnit class represents a pour unit in the model."
  },
  {
    "id": "Profile Class",
    "name": "Profile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Profile",
    "summary": "The Profile class defines the form of a cross section."
  },
  {
    "id": "ProjectInfo Class",
    "name": "ProjectInfo Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ProjectInfo",
    "summary": "The ProjectInfo class provides project information about the currently open Tekla Structures model."
  },
  {
    "id": "RadialGrid Class",
    "name": "RadialGrid Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RadialGrid",
    "summary": "The RadialGrid class defines a user defined (possibly magnetic) set;\r\n             radial grid has grid planes and cylindrical grid planes as children"
  },
  {
    "id": "RebarComplexGeometry Class",
    "name": "RebarComplexGeometry Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarComplexGeometry",
    "summary": "The ReinforcingBar class represents a single physical reinforcing bar. It contains the curves\r\n            and bendings that define the geometry of the bar."
  },
  {
    "id": "RebarCranking Class",
    "name": "RebarCranking Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarCranking",
    "summary": "The RebarCranking class represents the cranking of reinforcing bars at a RebarSplitter."
  },
  {
    "id": "RebarCrankingNullable Class",
    "name": "RebarCrankingNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarCrankingNullable",
    "summary": "The RebarCrankingNullable class represents the cranking of reinforcing bars at a RebarEndDetailModifier."
  },
  {
    "id": "RebarEndDetailModifier Class",
    "name": "RebarEndDetailModifier Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarEndDetailModifier",
    "summary": "The RebarEndDetailModifier class represents a modifier that can modify the characteristics of RebarSet reinforcing bars that pass through it.\r\n             It can modify reinforcing bar end properties and will therefore affect the end of the reinforcing bars it is nearest to."
  },
  {
    "id": "RebarGeometry Class",
    "name": "RebarGeometry Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarGeometry",
    "summary": "The RebarGeometry class represents a single physical reinforcing bar - the building block of \r\n            a mesh, a rebar group and even a single rebar.\r\n            It contains the physical reinforcing bar points in 3D space."
  },
  {
    "id": "RebarGuideline Class",
    "name": "RebarGuideline Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarGuideline",
    "summary": "Defines a rebar guideline that is used in a RebarSet.\r\n            A RebarSet has a minimum of one rebar guideline, the primary guideline."
  },
  {
    "id": "RebarHookData Class",
    "name": "RebarHookData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarHookData",
    "summary": "The RebarHookData class defines the hook at the end of a reinforcing bar.\r\n            Hooks are used for anchoring purposes."
  },
  {
    "id": "RebarHookDataNullable Class",
    "name": "RebarHookDataNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarHookDataNullable",
    "summary": "The RebarHookDataNullable class defines the hook at the end of a reinforcing bar. Hooks are used for anchoring purposes."
  },
  {
    "id": "RebarLapping Class",
    "name": "RebarLapping Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarLapping",
    "summary": "The RebarLapping class represents the lapping of reinforcing bars at a RebarSplitter."
  },
  {
    "id": "RebarLeg Class",
    "name": "RebarLeg Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarLeg",
    "summary": "This represents a leg of a rebar and is used in the RebarComplexGeometry class."
  },
  {
    "id": "RebarLegFace Class",
    "name": "RebarLegFace Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarLegFace",
    "summary": "Defines a rebar leg face that is used in a RebarSet.\r\n            Rebar leg faces control how the RebarSet generates the reinforcing bars."
  },
  {
    "id": "RebarLegSurfaceObject Class",
    "name": "RebarLegSurfaceObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarLegSurfaceObject",
    "summary": "The RebarLegSurfaceObject class represents a polymesh surface for generating rebar legs in a RebarSet."
  },
  {
    "id": "RebarLengthAdjustmentDataNullable Class",
    "name": "RebarLengthAdjustmentDataNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarLengthAdjustmentDataNullable",
    "summary": "The RebarLengthAdjustmentDataNullable class defines the length adjustment at the end of a reinforcing bar affected by a RebarEndDetailModifier.\r\n            If a length adjustment property is null then that property will not be applied to the RebarSet generated reinforcing bars."
  },
  {
    "id": "RebarMesh Class",
    "name": "RebarMesh Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarMesh",
    "summary": "The RebarMesh class represents a reinforcement mesh."
  },
  {
    "id": "RebarProperties Class",
    "name": "RebarProperties Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarProperties",
    "summary": "The RebarProperties class defines the default properties of the reinforcing bars in a RebarSet."
  },
  {
    "id": "RebarPropertiesNullable Class",
    "name": "RebarPropertiesNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarPropertiesNullable",
    "summary": "The RebarPropertiesNullable class defines the properties of the reinforcing bars affected by a RebarPropertyModifier."
  },
  {
    "id": "RebarPropertyModifier Class",
    "name": "RebarPropertyModifier Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarPropertyModifier",
    "summary": "The RebarPropertyModifier class represents a modifier that can modify the characteristics of RebarSet reinforcing bars that pass through it."
  },
  {
    "id": "RebarSet Class",
    "name": "RebarSet Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSet",
    "summary": "The RebarSet class represents a set of reinforcing bars."
  },
  {
    "id": "RebarSetAddition Class",
    "name": "RebarSetAddition Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSetAddition",
    "summary": "The RebarSetAddition class can be used to add RebarLegFace objects to an existing RebarSet."
  },
  {
    "id": "RebarSpacing Class",
    "name": "RebarSpacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSpacing",
    "summary": "The RebarSpacing class defines spacing properties for a RebarGuideline."
  },
  {
    "id": "RebarSpacing.ExactSpacing Class",
    "name": "RebarSpacing.ExactSpacing Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSpacing.ExactSpacing",
    "summary": "This class defines objects used in the exact spacing type."
  },
  {
    "id": "RebarSpacingZone Class",
    "name": "RebarSpacingZone Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSpacingZone",
    "summary": "The RebarSpacingZone class defines the properties of a single spacing zone.\r\n            The spacing properties of number of spaces, spacing and length are proposed properties that the spacing algorithm uses as input when calculating the\r\n            final reinforcing bars spacing.\r\n            Depending on the RebarSpacingZone properties and any other rebar spacing zones defined on the associated RebarGuideline the spacing algorithm may\r\n            determine a different final reinforcing bars spacing from the original proposed properties. However the RebarSpacingZone properties will always contain the\r\n            original proposed values."
  },
  {
    "id": "RebarSplice Class",
    "name": "RebarSplice Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSplice",
    "summary": "The RebarSplice class represents a splice between two reinforcements."
  },
  {
    "id": "RebarSplitter Class",
    "name": "RebarSplitter Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarSplitter",
    "summary": "The RebarSplitter class represents a modifier that can split the RebarSet reinforcing bars that pass through it."
  },
  {
    "id": "RebarStrand Class",
    "name": "RebarStrand Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarStrand",
    "summary": "The RebarStrand class represents prestressed strands for concrete parts."
  },
  {
    "id": "RebarThreadingDataNullable Class",
    "name": "RebarThreadingDataNullable Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.RebarThreadingDataNullable",
    "summary": "The RebarThreadingDataNullable class defines the threading properties at the end of a reinforcing bar affected by a RebarEndDetailModifier.\r\n            If a threading property is null then that property will not be applied to the RebarSet generated reinforcing bars."
  },
  {
    "id": "ReferenceModelObject Class",
    "name": "ReferenceModelObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ReferenceModelObject",
    "summary": "The ReferenceModelObject class contains methods related to reference model objects.\r\n            A reference model object is a subobject of a reference model."
  },
  {
    "id": "Seam Class",
    "name": "Seam Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Seam",
    "summary": "The Seam class represents a seam. A seam is something that connects a main part to other parts along an edge."
  },
  {
    "id": "SelfIntersectingSurfaceException Class",
    "name": "SelfIntersectingSurfaceException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SelfIntersectingSurfaceException",
    "summary": "This class represent an exception thrown when the an operation on a lofted plate has been determined to cause\r\n            a self intersecting surface"
  },
  {
    "id": "SingleRebar Class",
    "name": "SingleRebar Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SingleRebar",
    "summary": "The SingleRebar class represents a single reinforcing bar."
  },
  {
    "id": "SpiralBeamDataException Class",
    "name": "SpiralBeamDataException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SpiralBeamDataException",
    "summary": "The SpiralBeamDataException class represents an error that occurred during the spiral beam creation or modification."
  },
  {
    "id": "StrandUnbondingData Class",
    "name": "StrandUnbondingData Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.StrandUnbondingData",
    "summary": "The StrandUnbondingData class represents the unbonding of a rebar strand."
  },
  {
    "id": "SurfaceObject Class",
    "name": "SurfaceObject Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SurfaceObject",
    "summary": "The SurfaceObject class represents a surface object in the model. Currently this class\r\n             only support dynamic surfaces whose geometries are determined by the parts or pours \r\n             they associate to. It is not allowed to modify the geometry of a dynamic surface on Open API.\r\n             The polymesh setter of this class throws ."
  },
  {
    "id": "SurfaceTreatment Class",
    "name": "SurfaceTreatment Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.SurfaceTreatment",
    "summary": "The SurfaceTreatment class defines a layer above a building element defining what a surface looks like.\r\n            The surface could for example have a tiled look."
  },
  {
    "id": "Task Class",
    "name": "Task Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Task",
    "summary": "The Task class defines a single building site task. It may contain parts, assemblies or other tasks. Tasks may\r\n            have a hierarchy between them i.e. there are other tasks as subtasks for a parent task. Tasks may also\r\n            depend on each other, have resources assigned to them or have a single worktype."
  },
  {
    "id": "TaskDependency Class",
    "name": "TaskDependency Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.TaskDependency",
    "summary": "Creates a new task dependency instance."
  },
  {
    "id": "TaskWorktype Class",
    "name": "TaskWorktype Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.TaskWorktype",
    "summary": "The TaskWorktype class defines a single worktype for a task object. Each task may belong to only \r\n            one worktype."
  },
  {
    "id": "TransformationPlane Class",
    "name": "TransformationPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.TransformationPlane",
    "summary": "The TransformationPlane class describes a transformation from global model coordinates\r\n            to local and back to global."
  },
  {
    "id": "UndefinedCurveDirectionException Class",
    "name": "UndefinedCurveDirectionException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UndefinedCurveDirectionException",
    "summary": "The UndefinedCurveDirectionException class represents an error when, cannot make inward/outward curve check."
  },
  {
    "id": "UnknownLoftedPlateErrorException Class",
    "name": "UnknownLoftedPlateErrorException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UnknownLoftedPlateErrorException",
    "summary": "This class represent an exception thrown when an operation on a lofted plate caused an error of unknown origin"
  },
  {
    "id": "UnsupportedChamferException Class",
    "name": "UnsupportedChamferException Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UnsupportedChamferException",
    "summary": "The UnsupportedChamferException class represents an error when, plates containing unsupported chamfer information."
  },
  {
    "id": "WorkPlaneHandler Class",
    "name": "WorkPlaneHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.WorkPlaneHandler",
    "summary": "The WorkPlaneHandler class contains methods for getting and setting\r\n            the current transformation plane."
  },
  {
    "id": "ClashChekerEvent Class",
    "name": "ClashChekerEvent Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.ClashChecker.ClashChekerEvent",
    "summary": "The ClashChekerEvent class contains methods related to clash check events."
  },
  {
    "id": "IFC2X3_ParametricObject_CircleHollowProfile Class",
    "name": "IFC2X3_ParametricObject_CircleHollowProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_CircleHollowProfile",
    "summary": "The IFC2X3_ParametricObject_CircleHollowProfile class contains the circular and hollow profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_CircleProfile Class",
    "name": "IFC2X3_ParametricObject_CircleProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_CircleProfile",
    "summary": "The IFC2X3_ParametricObject_CircleProfile class contains the circular profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_CShapeProfile Class",
    "name": "IFC2X3_ParametricObject_CShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_CShapeProfile",
    "summary": "The IFC2X3_ParametricObject_CShapeProfile class contains the C-shape profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_EllipseProfile Class",
    "name": "IFC2X3_ParametricObject_EllipseProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_EllipseProfile",
    "summary": "The IFC2X3_ParametricObject_EllipseProfile class contains the ellipse profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_IShapeProfile Class",
    "name": "IFC2X3_ParametricObject_IShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_IShapeProfile",
    "summary": "The IFC2X3_ParametricObject_IShapeProfile class contains the I-shape profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_LShapeProfile Class",
    "name": "IFC2X3_ParametricObject_LShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_LShapeProfile",
    "summary": "The IFC2X3_ParametricObject_LShapeProfile class contains the L-shape profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_RectangleHollowProfile Class",
    "name": "IFC2X3_ParametricObject_RectangleHollowProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_RectangleHollowProfile",
    "summary": "The IFC2X3_ParametricObject_RectangleHollowProfile class contains the rectangular and hollow profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_RectangleProfile Class",
    "name": "IFC2X3_ParametricObject_RectangleProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_RectangleProfile",
    "summary": "The IFC2X3_ParametricObject_RectangleProfile class contains the rectangular profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_TShapeProfile Class",
    "name": "IFC2X3_ParametricObject_TShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_TShapeProfile",
    "summary": "The IFC2X3_ParametricObject_TShapeProfile class contains the T-shape profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_UShapeProfile Class",
    "name": "IFC2X3_ParametricObject_UShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_UShapeProfile",
    "summary": "The IFC2X3_ParametricObject_UShapeProfile class contains the U-shape profile definition."
  },
  {
    "id": "IFC2X3_ParametricObject_ZShapeProfile Class",
    "name": "IFC2X3_ParametricObject_ZShapeProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.IFC2X3_ParametricObject_ZShapeProfile",
    "summary": "The IFC2X3_ParametricObject_ZShapeProfile class contains the Z-shape profile definition."
  },
  {
    "id": "ParametricObject_CustomProfile Class",
    "name": "ParametricObject_CustomProfile Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.ParametricObject_CustomProfile",
    "summary": "The ParametricObject_CustomProfile class contains the custom profile definition."
  },
  {
    "id": "ParametricObject_ObjectBoundingBox Class",
    "name": "ParametricObject_ObjectBoundingBox Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.ParametricObject_ObjectBoundingBox",
    "summary": "The ParametricObject_ObjectBoundingBox class contains the object bounding box (OBB) definition."
  },
  {
    "id": "ReferenceModelObjectAttribute Class",
    "name": "ReferenceModelObjectAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.ReferenceModelObjectAttribute",
    "summary": "The ReferenceModelObjectAttribute class is a base class from where concrete attributes are derived from. The documentation about\r\n            different attributes and their function can be found from the vendor specification, for example from the IFC format specification."
  },
  {
    "id": "ReferenceModelObjectAttributeEnumerator Class",
    "name": "ReferenceModelObjectAttributeEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Collaboration.ReferenceModelObjectAttributeEnumerator",
    "summary": "The ReferenceModelObjectAttributeEnumerator class can be used to enumerate through reference model object attributes."
  },
  {
    "id": "Rotation3D Class",
    "name": "Rotation3D Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Geometry.Rotation3D",
    "summary": "Represents 3d rotation of object."
  },
  {
    "id": "ModelHistory Class",
    "name": "ModelHistory Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.History.ModelHistory",
    "summary": "The ModelHistory class provides history information about the objects of the model\r\n             that is currently open in Tekla Structures."
  },
  {
    "id": "ModificationStamp Class",
    "name": "ModificationStamp Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.History.ModificationStamp",
    "summary": "The ModificationStamp class provides the modification stamp for the objects of the model\r\n            that is currently open in Tekla Structures."
  },
  {
    "id": "GuidConversion Class",
    "name": "GuidConversion Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Operations.GuidConversion",
    "summary": "Conversion of old TS GUIDs to current GUIDs.\r\n            GUIDs are changed in TS save as operation, this class can be used to convert old GUIDs to current GUIDs.\r\n            To recognize the need for GUID conversion, application needs to save project GUID and compare to the current project GUID.\r\n            Note: With big models the instance uses a lot of memory."
  },
  {
    "id": "Operation Class",
    "name": "Operation Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Operations.Operation",
    "summary": "The Operation class implements Tekla Structures level operations."
  },
  {
    "id": "Operation.ProgressBar Class",
    "name": "Operation.ProgressBar Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Operations.Operation.ProgressBar",
    "summary": "The ProgressBar class implements progress bar with cancel button."
  },
  {
    "id": "ClipPlane Class",
    "name": "ClipPlane Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ClipPlane",
    "summary": "The ClipPlane class defines a clip plane which can be used together with a visible view."
  },
  {
    "id": "ClipPlaneCollection Class",
    "name": "ClipPlaneCollection Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ClipPlaneCollection",
    "summary": "The ClipPlaneCollection class handles the collection of the clip planes."
  },
  {
    "id": "Color Class",
    "name": "Color Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.Color",
    "summary": "The Color class represents an RGB color with transparency. The color values must be between 0.0 and 1.0."
  },
  {
    "id": "GraphicsDrawer Class",
    "name": "GraphicsDrawer Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.GraphicsDrawer",
    "summary": "The GraphicsDrawer class draws temporary graphics in the currently active rendered view in Tekla Structures."
  },
  {
    "id": "Mesh Class",
    "name": "Mesh Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.Mesh",
    "summary": "The Mesh class represents a mesh for drawing three-dimensional data."
  },
  {
    "id": "ModelObjectSelector Class",
    "name": "ModelObjectSelector Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ModelObjectSelector",
    "summary": "The ModelObjectSelector class can be used to select objects from the Tekla Structures user interface.\r\n            Currently, these selections both select the objects from the database and highlight them visually."
  },
  {
    "id": "ModelObjectVisualization Class",
    "name": "ModelObjectVisualization Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ModelObjectVisualization",
    "summary": "The class to set and clear temporary visualization (color and transparency) for model objects in view. \r\n            Permanent representation will be restored when view is redrawn or temporary visualization is cleared.\r\n            Can be used also to fetch current permanent representation of model object."
  },
  {
    "id": "ModelViewEnumerator Class",
    "name": "ModelViewEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ModelViewEnumerator",
    "summary": "The ModelViewEnumerator class is an enumerator class for model views.\r\n            The enumerator enables model view items to be looped."
  },
  {
    "id": "Picker Class",
    "name": "Picker Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.Picker",
    "summary": "The Picker class can be used to query the user to do manual picks of objects and points from the Tekla Structures model.\r\n            The methods throw an exception if the user interrupts (cancels) the pick command."
  },
  {
    "id": "PickInput Class",
    "name": "PickInput Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.PickInput",
    "summary": "The PickInput class handles the input of picked objects and positions."
  },
  {
    "id": "View Class",
    "name": "View Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.View",
    "summary": "The View class contains methods related to views."
  },
  {
    "id": "ViewCamera Class",
    "name": "ViewCamera Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ViewCamera",
    "summary": "The ViewCamera class defines a camera which can be used together with a visible view.\r\n             Always supply a properly orthogonalized camera up vector when rotating the camera."
  },
  {
    "id": "ViewHandler Class",
    "name": "ViewHandler Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ViewHandler",
    "summary": "The ViewHandler class contains methods for handling views."
  },
  {
    "id": "ViewVisibilitySettings Class",
    "name": "ViewVisibilitySettings Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.UI.ViewVisibilitySettings",
    "summary": "The View visibility settings class contains object visibility information related to view."
  },
  {
    "id": "WeldGeometry Class",
    "name": "WeldGeometry Class",
    "type": "class",
    "namespace": "Tekla.Structures.Model.Welding.WeldGeometry",
    "summary": "Class that represents weld seam specific geometry."
  },
  {
    "id": "AutoDirectionTypeAttribute Class",
    "name": "AutoDirectionTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.AutoDirectionTypeAttribute",
    "summary": "The AutoDirectionTypeAttribute class is used for storing the auto direction type.\r\n            Based on the type the system will then calculate the up direction of the connection/detail\r\n            if the \"Auto\" up direction is chosen in the dialog.\r\n            The attribute is initialized from the custom attribute \r\n                [AutoDirectionType(AutoDirectionTypeEnum.AUTODIR_DETAIL)] \r\n            in the connection/detail source."
  },
  {
    "id": "ConnectionBase Class",
    "name": "ConnectionBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.ConnectionBase",
    "summary": "The ConnectionBase class is a base class for defining connections, details and seams.\r\n            These types are more specialized and restricted by the input values than the ones derived\r\n            from PluginBase.\r\n            \r\n            The coordinate system for connections, details and seams is explained in the Tekla Structures\r\n            help, in the part about the position type of custom components. The position type defines the\r\n            origin of the custom component, relative to the main part."
  },
  {
    "id": "CustomPartBase Class",
    "name": "CustomPartBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.CustomPartBase",
    "summary": "The CustomPartBase class is a base class for defining custom parts.\r\n            These types are more specialized and restricted by the input values than the ones derived\r\n            from PluginBase.\r\n            \r\n            The coordinate system for connections, details and seams is explained in the Tekla Structures\r\n            help, in the part about the position type of custom components. The position type defines the\r\n            origin of the custom component, relative to the main part."
  },
  {
    "id": "CustomPartInputTypeAttribute Class",
    "name": "CustomPartInputTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.CustomPartInputTypeAttribute",
    "summary": "The CustomPartInputTypeAttribute class is used for defining the input type.\r\n            Based on the type the system will then ask for the correct number of input points in the creation.\r\n            The attribute is initialized from the custom attribute \r\n                [CustomPartInputType(CustomPartBase.CustomPartInputType.INPUT_1_POINT)] \r\n            in the custom part source code."
  },
  {
    "id": "CustomPartPositioningTypeAttribute Class",
    "name": "CustomPartPositioningTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.CustomPartPositioningTypeAttribute",
    "summary": "The CustomPartInputTypeAttribute class is used for defining the input type.\r\n            Based on the type the system will then position the custom part either based on calculated\r\n            extrema center point or given input points.\r\n            \r\n            The attribute is initialized from the custom attribute i.e.\r\n                [CustomPartPositioningType((CustomPartBase.CustomPartPositioningType.POSITIONING_BY_INPUTPOINTS)] \r\n            in the custom part source code."
  },
  {
    "id": "DetailTypeAttribute Class",
    "name": "DetailTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.DetailTypeAttribute",
    "summary": "The DetailTypeAttribute class is used for storing the detail type.\r\n            Based on the type the system will then position the detail in the creation.\r\n            The attribute is initialized from the custom attribute \r\n                [DetailType(DetailTypeEnum.END)] \r\n            in the connection source."
  },
  {
    "id": "DrawingPluginBase Class",
    "name": "DrawingPluginBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.DrawingPluginBase",
    "summary": "The DrawingPluginBase class is an abstract base class for drawing plug-ins."
  },
  {
    "id": "DrawingPluginBase.InputDefinition Class",
    "name": "DrawingPluginBase.InputDefinition Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.DrawingPluginBase.InputDefinition",
    "summary": "The InputDefinition class is a class for defining the plug-in dependency over the input (points or identifiers).\r\n            The user implemented method DefineInput() of the DrawingPluginBase interface should return an array list of \r\n            input definition instances. This defines the points and identifiers the plug-in will receive as input\r\n            when the Run() method is called."
  },
  {
    "id": "InputObjectDependencyAttribute Class",
    "name": "InputObjectDependencyAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.InputObjectDependencyAttribute",
    "summary": "The InputObjectDependencyAttribute class is used for storing an input object dependency which determines when the plug-in is updated in the system.\r\n            The attribute is initialized from the custom attribute [InputObjectDependency(PluginBase.InputObjectDependency Type)] in the plug-in source."
  },
  {
    "id": "InputObjectTypeAttribute Class",
    "name": "InputObjectTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.InputObjectTypeAttribute",
    "summary": "The InputObjectTypeAttribute class is used for storing the type of the input.\r\n            Based on the type the system can then correctly ask for user input in the creation.\r\n            The attribute is initialized from the custom attribute \r\n                [InputObjectType(ConnectionBase.InputObjectType.INPUTOBJECT_PART)] \r\n            in the connection source."
  },
  {
    "id": "PluginAttribute Class",
    "name": "PluginAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginAttribute",
    "summary": "The PluginAttribute class is used for storing the name of the plug-in to the system.\r\n            The attribute is initialized from the custom attribute [Plugin(\"PluginName\")] in the plug-in source."
  },
  {
    "id": "PluginBase Class",
    "name": "PluginBase Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginBase",
    "summary": "The PluginBase class in an abstract base class for model plug-ins.\r\n            Model plug-ins have to be inherited from this class. Drawing plug-ins have to be \r\n            inherited from the DrawingPluginBase.\r\n            \r\n            A plug-in is always executed in the plug-in's local coordinate system.\r\n            The origin of the plug-in's coordinate system is defined based on\r\n            the first input object or point. In case the first input is an object,\r\n            the origin of the plug-in's coordinate system is the first input point of the object. \r\n            In case the first input is a point, the origin of the plug-in's coordinate system is\r\n            the input point. The X- and Y-axes of the coordinate system are defined in the current plane."
  },
  {
    "id": "PluginBase.InputDefinition Class",
    "name": "PluginBase.InputDefinition Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginBase.InputDefinition",
    "summary": "The InputDefinition class is a class for defining the plug-in dependency over the input (points or identifiers).\r\n            The user implemented method DefineInput() of the PluginBase interface should return an array list of \r\n            input definition instances. This defines the points and identifiers the plug-in will receive as input\r\n            when the Run() method is called."
  },
  {
    "id": "PluginCoordinateSystemAttribute Class",
    "name": "PluginCoordinateSystemAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginCoordinateSystemAttribute",
    "summary": "The PluginCoordinateSystemAttribute class is used for defining  the coordinate system type for model plug-ins which are using points as an input.\r\n            The attribute is initialized from the custom attribute [PluginCoordinateSystem(PluginBase.CoordinateSystemType Type)] in the plug-in source.\r\n            If attribute is not defined or attribute has value PluginBase.CoordinateSystemType.FROM_FIRST_POINT_AND_GLOBAL coordinate system is calculated as earlier.\r\n            The attribute is used if the first Inputdefinition object contains at least two points (defined by two points, line, face or polygon)."
  },
  {
    "id": "PluginDescriptionAttribute Class",
    "name": "PluginDescriptionAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginDescriptionAttribute",
    "summary": "Not supported at the moment."
  },
  {
    "id": "PluginNameAttribute Class",
    "name": "PluginNameAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginNameAttribute",
    "summary": "Not supported at the moment."
  },
  {
    "id": "PluginPropertyFileLocationAttribute Class",
    "name": "PluginPropertyFileLocationAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginPropertyFileLocationAttribute",
    "summary": "Used to specify file location for a property file."
  },
  {
    "id": "PluginSymbolVisiblityAttribute Class",
    "name": "PluginSymbolVisiblityAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginSymbolVisiblityAttribute",
    "summary": "The PluginSymbolVisiblityAttribute class is used for defining the symbol visibility for model plug-ins.\r\n            The attribute is initialized from the custom attribute [PluginSymbolVisiblity(PluginBase.SymbolVisibility Type)] in the plug-in source.\r\n            If attribute is not defined or attribute has value PluginBase.SymbolVisibility.DRAW_SYMBOL plug-in symbol is drawn normally."
  },
  {
    "id": "PluginUserInterfaceAttribute Class",
    "name": "PluginUserInterfaceAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PluginUserInterfaceAttribute",
    "summary": "The PluginUserInterfaceAttribute class is used for storing the description of the plug-in user interface to the system.\r\n            The attribute is initialized from the custom attribute [PluginUserInterface(PluginName.UserInterfaceDefinitions.Plugin1)] in the plug-in source.\r\n            In this case the description string Plugin1 is a dialog written in inp format. \r\n            If the plug-in dialog is inherited from the PluginFormBase the description string contains a class name of the dialog i.e. [PluginUserInterface(\"Model_Plug_in1.MainForm\")]."
  },
  {
    "id": "PositionTypeAttribute Class",
    "name": "PositionTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.PositionTypeAttribute",
    "summary": "The PositionTypeAttribute class is used for storing the position type of the connection.\r\n            Based on the type the system will then position the connection in the creation.\r\n            The attribute is initialized from the custom attribute \r\n                [PositionType(PositionTypeEnum.COLLISION_PLANE)] \r\n            in the connection source."
  },
  {
    "id": "SeamInputTypeAttribute Class",
    "name": "SeamInputTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.SeamInputTypeAttribute",
    "summary": "The SeamInputTypeAttribute class is used for identifying that the connection is a seam and defining the input type.\r\n            Based on the type the system will then ask for the correct number of input points in the creation.\r\n            The attribute is initialized from the custom attribute \r\n                [SeamInputType(ConnectionBase.SeamInputType.INPUT_POLYGON)] \r\n            in the connection source."
  },
  {
    "id": "SecondaryTypeAttribute Class",
    "name": "SecondaryTypeAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.SecondaryTypeAttribute",
    "summary": "The SecondaryTypeAttribute class is used for storing the number of needed secondaries in the connection.\r\n            Based on the type the system can then correctly ask for user input in the creation.\r\n            The attribute is initialized from the custom attribute i.e.\r\n                [SecondaryType(ConnectionBase.SecondaryType.SECONDARYTYPE_ONE)] \r\n            in the connection source."
  },
  {
    "id": "StructuresFieldAttribute Class",
    "name": "StructuresFieldAttribute Class",
    "type": "class",
    "namespace": "Tekla.Structures.Plugins.StructuresFieldAttribute",
    "summary": "The StructuresFieldAttribute class is used for mapping a database attribute to a data field that the plug-in uses in execution.\r\n            The attribute is initialized from the custom attribute [StructuresField(attributeName)] in the plug-in source.\r\n            In the plug-in the data field must be public and the type must be double, integer or string."
  },
  {
    "id": "Edge Class",
    "name": "Edge Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.Edge",
    "summary": "The Edge class represents a single global edge in a solid."
  },
  {
    "id": "EdgeEnumerator Class",
    "name": "EdgeEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.EdgeEnumerator",
    "summary": "The EdgeEnumerator class is used to enumerate the edges of a solid."
  },
  {
    "id": "Face Class",
    "name": "Face Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.Face",
    "summary": "The Face class represents a single face in a solid."
  },
  {
    "id": "FaceEnumerator Class",
    "name": "FaceEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.FaceEnumerator",
    "summary": "The FaceEnumerator class is used to enumerate the faces of a solid."
  },
  {
    "id": "Loop Class",
    "name": "Loop Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.Loop",
    "summary": "The Loop class represents a single loop in a face."
  },
  {
    "id": "LoopEnumerator Class",
    "name": "LoopEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.LoopEnumerator",
    "summary": "The LoopEnumerator class is used to enumerate the loops of a face instance."
  },
  {
    "id": "Shell Class",
    "name": "Shell Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.Shell",
    "summary": "The Shell class represents a single shell in a solid."
  },
  {
    "id": "ShellEnumerator Class",
    "name": "ShellEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.ShellEnumerator",
    "summary": "The ShellEnumerator class is used to enumerate the shells of a solid."
  },
  {
    "id": "VertexEnumerator Class",
    "name": "VertexEnumerator Class",
    "type": "class",
    "namespace": "Tekla.Structures.Solid.VertexEnumerator",
    "summary": "The VertexEnumerator class is used to enumerate the vertexes of a loop instance."
  },
  {
    "id": "AutoDirectionTypeEnum Enumeration",
    "name": "AutoDirectionTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.AutoDirectionTypeEnum",
    "summary": "The auto direction type defines how a connection or detail coordinate system will be oriented automatically."
  },
  {
    "id": "ComponentDefinitionTypeEnum Enumeration",
    "name": "ComponentDefinitionTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.ComponentDefinitionTypeEnum",
    "summary": "The component definition type tells what kind of a component is in question."
  },
  {
    "id": "ComponentOptions.BoltEdgeDistanceReferenceEnum Enumeration",
    "name": "ComponentOptions.BoltEdgeDistanceReferenceEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.ComponentOptions.BoltEdgeDistanceReferenceEnum",
    "summary": "The bolt edge distance reference type."
  },
  {
    "id": "ConnectionStatusEnum Enumeration",
    "name": "ConnectionStatusEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.ConnectionStatusEnum",
    "summary": "The status type defines what the status of a connection or a detail is.\r\n            In the model the color of the symbol (green, yellow, red) indicates the status."
  },
  {
    "id": "DetailTypeEnum Enumeration",
    "name": "DetailTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.DetailTypeEnum",
    "summary": "The detail type defines what kind of a detail is in question."
  },
  {
    "id": "ModuleManager.ProgramConfigurationEnum Enumeration",
    "name": "ModuleManager.ProgramConfigurationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.ModuleManager.ProgramConfigurationEnum",
    "summary": "The configuration information of the program."
  },
  {
    "id": "PositionTypeEnum Enumeration",
    "name": "PositionTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.PositionTypeEnum",
    "summary": "The position type for connections and seams."
  },
  {
    "id": "PropertyTypeEnum Enumeration",
    "name": "PropertyTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.PropertyTypeEnum",
    "summary": "The type of property: int/double/string."
  },
  {
    "id": "TeklaStructuresDatabaseTypeEnum Enumeration",
    "name": "TeklaStructuresDatabaseTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.TeklaStructuresDatabaseTypeEnum",
    "summary": "The object types to be used in filter expressions."
  },
  {
    "id": "AnalysisBar.CardinalPointEnum Enumeration",
    "name": "AnalysisBar.CardinalPointEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.CardinalPointEnum",
    "summary": "The cardinal point types of the analysis bar."
  },
  {
    "id": "AnalysisConnectivity.CombinedTypeEnum Enumeration",
    "name": "AnalysisConnectivity.CombinedTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity.CombinedTypeEnum",
    "summary": "The combined types."
  },
  {
    "id": "AnalysisConnectivity.ConnectivityEnum Enumeration",
    "name": "AnalysisConnectivity.ConnectivityEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity.ConnectivityEnum",
    "summary": "The connectivity types."
  },
  {
    "id": "AnalysisDecomposedLoad.AnalysisDecomposedLoadDirectionEnum Enumeration",
    "name": "AnalysisDecomposedLoad.AnalysisDecomposedLoadDirectionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.AnalysisDecomposedLoadDirectionEnum",
    "summary": "Defines the analysis decomposed load directions."
  },
  {
    "id": "AnalysisDecomposedLoad.AnalysisLoadTypeEnum Enumeration",
    "name": "AnalysisDecomposedLoad.AnalysisLoadTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.AnalysisLoadTypeEnum",
    "summary": "Defines the analysis load types."
  },
  {
    "id": "AnalysisDecomposedLoad.LoadCoordinateEnum Enumeration",
    "name": "AnalysisDecomposedLoad.LoadCoordinateEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.LoadCoordinateEnum",
    "summary": "This defines whether local or global coordinates are used for loading the coordinate system."
  },
  {
    "id": "AnalysisDesignParameterMulti.DesignParIndex Enumeration",
    "name": "AnalysisDesignParameterMulti.DesignParIndex Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.DesignParIndex",
    "summary": "Multi value design parameter indexes"
  },
  {
    "id": "AnalysisLoadCombination.LoadCombinationEnum Enumeration",
    "name": "AnalysisLoadCombination.LoadCombinationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.LoadCombinationEnum",
    "summary": "The load combination types."
  },
  {
    "id": "AnalysisLoadGroup.LoadGroupDirectionEnum Enumeration",
    "name": "AnalysisLoadGroup.LoadGroupDirectionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.LoadGroupDirectionEnum",
    "summary": "The directions of a load group."
  },
  {
    "id": "AnalysisLoadGroup.LoadGroupTypeEnum Enumeration",
    "name": "AnalysisLoadGroup.LoadGroupTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.LoadGroupTypeEnum",
    "summary": "The types of load groups."
  },
  {
    "id": "AnalysisMaterial.MaterialTypeEnum Enumeration",
    "name": "AnalysisMaterial.MaterialTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.MaterialTypeEnum",
    "summary": "The material types."
  },
  {
    "id": "AnalysisModel.AnalysisMethodEnum Enumeration",
    "name": "AnalysisModel.AnalysisMethodEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisMethodEnum",
    "summary": "The analysis methods."
  },
  {
    "id": "AnalysisModel.AxisLocationEnum Enumeration",
    "name": "AnalysisModel.AxisLocationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AxisLocationEnum",
    "summary": "The axis location."
  },
  {
    "id": "AnalysisModel.ConstructionMethodEnum Enumeration",
    "name": "AnalysisModel.ConstructionMethodEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ConstructionMethodEnum",
    "summary": "The construction methods."
  },
  {
    "id": "AnalysisModel.KeepAxisEnum Enumeration",
    "name": "AnalysisModel.KeepAxisEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.KeepAxisEnum",
    "summary": "The keep axis settings."
  },
  {
    "id": "AnalysisModelAnalysisProperties.AnalysisMethodEnum Enumeration",
    "name": "AnalysisModelAnalysisProperties.AnalysisMethodEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties.AnalysisMethodEnum",
    "summary": "Defines the analysis method."
  },
  {
    "id": "AnalysisModelDesignProperties.DesignMethodEnum Enumeration",
    "name": "AnalysisModelDesignProperties.DesignMethodEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.DesignMethodEnum",
    "summary": "The design methods."
  },
  {
    "id": "AnalysisModelGeneralProperties.MemberAxisLocationEnum Enumeration",
    "name": "AnalysisModelGeneralProperties.MemberAxisLocationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.MemberAxisLocationEnum",
    "summary": "Defines the member axis location."
  },
  {
    "id": "AnalysisModelGeneralProperties.ModelCreationTypeEnum Enumeration",
    "name": "AnalysisModelGeneralProperties.ModelCreationTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ModelCreationTypeEnum",
    "summary": "Defines the model creation type."
  },
  {
    "id": "AnalysisModelIssue.SeverityEnum Enumeration",
    "name": "AnalysisModelIssue.SeverityEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.SeverityEnum",
    "summary": "Issue severity."
  },
  {
    "id": "AnalysisModelIssue.TypeEnum Enumeration",
    "name": "AnalysisModelIssue.TypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.TypeEnum",
    "summary": "Issue type."
  },
  {
    "id": "AnalysisObject.AnalysisObjectEnum Enumeration",
    "name": "AnalysisObject.AnalysisObjectEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.AnalysisObjectEnum",
    "summary": "All subclasses of analysis objects are defined here. This enumeration can be used to\r\n            select certain types of analysis objects."
  },
  {
    "id": "AnalysisObjectEnumerator.AnalysisEnumeratorTypeEnum Enumeration",
    "name": "AnalysisObjectEnumerator.AnalysisEnumeratorTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.AnalysisEnumeratorTypeEnum",
    "summary": "The available enumerator types."
  },
  {
    "id": "AnalysisPart.AnalysisTypeEnum Enumeration",
    "name": "AnalysisPart.AnalysisTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisTypeEnum",
    "summary": "The analysis types."
  },
  {
    "id": "AnalysisPart.ItemTypeEnum Enumeration",
    "name": "AnalysisPart.ItemTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.ItemTypeEnum",
    "summary": "The item types."
  },
  {
    "id": "AnalysisPart.PartTypeEnum Enumeration",
    "name": "AnalysisPart.PartTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.PartTypeEnum",
    "summary": "The types of the physical model part."
  },
  {
    "id": "AnalysisPartAnalysisProperties.AnalysisClassEnum Enumeration",
    "name": "AnalysisPartAnalysisProperties.AnalysisClassEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.AnalysisClassEnum",
    "summary": "The analysis classes."
  },
  {
    "id": "AnalysisPartAnalysisProperties.BuiltupEnum Enumeration",
    "name": "AnalysisPartAnalysisProperties.BuiltupEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.BuiltupEnum",
    "summary": "The builtup settings."
  },
  {
    "id": "AnalysisPartAreaAttributes.AreaElementTypeEnum Enumeration",
    "name": "AnalysisPartAreaAttributes.AreaElementTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaElementTypeEnum",
    "summary": "The area element types."
  },
  {
    "id": "AnalysisPartAreaAttributes.AreaSupportEnum Enumeration",
    "name": "AnalysisPartAreaAttributes.AreaSupportEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaSupportEnum",
    "summary": "The area support options."
  },
  {
    "id": "AnalysisPartAreaAttributes.AreaSupportTypeEnum Enumeration",
    "name": "AnalysisPartAreaAttributes.AreaSupportTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaSupportTypeEnum",
    "summary": "The new area support options."
  },
  {
    "id": "AnalysisPartBarAttributes.ForceStraightSegmentsEnum Enumeration",
    "name": "AnalysisPartBarAttributes.ForceStraightSegmentsEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.ForceStraightSegmentsEnum",
    "summary": "The straight force segments."
  },
  {
    "id": "AnalysisPartCompositeProperties.CompositeBeamEnum Enumeration",
    "name": "AnalysisPartCompositeProperties.CompositeBeamEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamEnum",
    "summary": "The composite beam options."
  },
  {
    "id": "AnalysisPartCompositeProperties.CompositeBeamWidthEnum Enumeration",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthEnum",
    "summary": "The composite beam width options."
  },
  {
    "id": "AnalysisPartEnd.ConditionEnum Enumeration",
    "name": "AnalysisPartEnd.ConditionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.ConditionEnum",
    "summary": "The conditions of the part end."
  },
  {
    "id": "AnalysisPartEnd.EccentricityModeEnum Enumeration",
    "name": "AnalysisPartEnd.EccentricityModeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.EccentricityModeEnum",
    "summary": "The eccentricity modes of the part end."
  },
  {
    "id": "AnalysisPartPositionProperties.AxisLocationEnum Enumeration",
    "name": "AnalysisPartPositionProperties.AxisLocationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisLocationEnum",
    "summary": "The axis location."
  },
  {
    "id": "AnalysisPartPositionProperties.AxisModifierEnum Enumeration",
    "name": "AnalysisPartPositionProperties.AxisModifierEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisModifierEnum",
    "summary": "The axis modifiers."
  },
  {
    "id": "AnalysisPartPositionProperties.LongitudinalOffsetEnum Enumeration",
    "name": "AnalysisPartPositionProperties.LongitudinalOffsetEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.LongitudinalOffsetEnum",
    "summary": "The longitudinal offsets."
  },
  {
    "id": "AnalysisPartSpanningProperties.SpanningTypeEnum Enumeration",
    "name": "AnalysisPartSpanningProperties.SpanningTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartSpanningProperties.SpanningTypeEnum",
    "summary": "The spanning types."
  },
  {
    "id": "AnalysisPosition.TypeEnum Enumeration",
    "name": "AnalysisPosition.TypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition.TypeEnum",
    "summary": "The position types."
  },
  {
    "id": "AnalysisRestraintData.ReleaseTypeEnum Enumeration",
    "name": "AnalysisRestraintData.ReleaseTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.ReleaseTypeEnum",
    "summary": "Defines the release type."
  },
  {
    "id": "AnalysisRestraintData.RestraintTypeEnum Enumeration",
    "name": "AnalysisRestraintData.RestraintTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RestraintTypeEnum",
    "summary": "Defines all the restraint types."
  },
  {
    "id": "AnalysisRestraintData.SupportedEnum Enumeration",
    "name": "AnalysisRestraintData.SupportedEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.SupportedEnum",
    "summary": "Defines how the part is supported."
  },
  {
    "id": "AnalysisResult.LoadCaseForMinMaxEnum Enumeration",
    "name": "AnalysisResult.LoadCaseForMinMaxEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCaseForMinMaxEnum",
    "summary": "Special load case numbers for min/max queries."
  },
  {
    "id": "AnalysisResult.LoadCaseTypeEnum Enumeration",
    "name": "AnalysisResult.LoadCaseTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCaseTypeEnum",
    "summary": "The load case type."
  },
  {
    "id": "AnalysisResult.ObjectTypeEnum Enumeration",
    "name": "AnalysisResult.ObjectTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ObjectTypeEnum",
    "summary": "The object type."
  },
  {
    "id": "AnalysisResult.ResultPositionEnum Enumeration",
    "name": "AnalysisResult.ResultPositionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ResultPositionEnum",
    "summary": "The result position."
  },
  {
    "id": "AnalysisResult.ValueTypeEnum Enumeration",
    "name": "AnalysisResult.ValueTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ValueTypeEnum",
    "summary": "The value type."
  },
  {
    "id": "AnalysisSubSection.AnalysisSubSectionSubTypeEnum Enumeration",
    "name": "AnalysisSubSection.AnalysisSubSectionSubTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.AnalysisSubSectionSubTypeEnum",
    "summary": "Defines the subsection subtypes."
  },
  {
    "id": "AnalysisSubSection.AnalysisSubSectionTypeEnum Enumeration",
    "name": "AnalysisSubSection.AnalysisSubSectionTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.AnalysisSubSectionTypeEnum",
    "summary": "Defines the subsection types."
  },
  {
    "id": "AnalysisSupport.SupportEnum Enumeration",
    "name": "AnalysisSupport.SupportEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.AnalysisSupport.SupportEnum",
    "summary": "The connectivity types."
  },
  {
    "id": "AnalysisObjectPicker.PickObjectType Enumeration",
    "name": "AnalysisObjectPicker.PickObjectType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectPicker.PickObjectType",
    "summary": "The possible pick object types."
  },
  {
    "id": "BoltItem.BoltItemTypeEnum Enumeration",
    "name": "BoltItem.BoltItemTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.BoltItemTypeEnum",
    "summary": "Defines the different bolt item types."
  },
  {
    "id": "BrepType Enumeration",
    "name": "BrepType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.BrepType",
    "summary": "Shape catalog renewal makes it possible to organize shapes in the shape catalog compared to a plain list before.\r\n            Thus, it is now possible and required to distinguish shapes in such a manner that:\r\n            BuildingProduct represent shapes that users can import from, for example, Tekla Warehouse and insert them into a model. \r\n            These are usually provided by the manufacturer and not detailed by users themselves.\r\n            StructuralShape represent shapes that get created by \"Convert part to item\" or from geometry editing."
  },
  {
    "id": "CatalogObjectTypeEnum Enumeration",
    "name": "CatalogObjectTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.CatalogObjectTypeEnum",
    "summary": "The catalog object type."
  },
  {
    "id": "ComponentItem.ComponentTypeEnum Enumeration",
    "name": "ComponentItem.ComponentTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.ComponentTypeEnum",
    "summary": "Defines the different component types."
  },
  {
    "id": "MaterialItem.MaterialItemTypeEnum Enumeration",
    "name": "MaterialItem.MaterialItemTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.MaterialItemTypeEnum",
    "summary": "Defines the different material item types."
  },
  {
    "id": "ProfileItem.ProfileItemSubTypeEnum Enumeration",
    "name": "ProfileItem.ProfileItemSubTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ProfileItemSubTypeEnum",
    "summary": "Defines the different profile item subtypes."
  },
  {
    "id": "ProfileItem.ProfileItemTypeEnum Enumeration",
    "name": "ProfileItem.ProfileItemTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ProfileItemTypeEnum",
    "summary": "Defines the different profile item types."
  },
  {
    "id": "ProfileItemParameter.ParameterUnitTypeEnum Enumeration",
    "name": "ProfileItemParameter.ParameterUnitTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.ParameterUnitTypeEnum",
    "summary": "Defines the different unit types of the profile item parameter."
  },
  {
    "id": "ShapeMetadataTypeEnum Enumeration",
    "name": "ShapeMetadataTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ShapeMetadataTypeEnum",
    "summary": "Represents data type or measurement unit of the specific metadata\r\n            If this is updated, update ShapeMetadataType_e on the Core side"
  },
  {
    "id": "ShapeUpAxis Enumeration",
    "name": "ShapeUpAxis Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.ShapeUpAxis",
    "summary": "Up axis direction"
  },
  {
    "id": "UserPropertyFieldTypeEnum Enumeration",
    "name": "UserPropertyFieldTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyFieldTypeEnum",
    "summary": "The user property field type."
  },
  {
    "id": "UserPropertyLevelEnum Enumeration",
    "name": "UserPropertyLevelEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyLevelEnum",
    "summary": "The user property level."
  },
  {
    "id": "UserPropertyVisibilityEnum Enumeration",
    "name": "UserPropertyVisibilityEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyVisibilityEnum",
    "summary": "The visibility of the user property."
  },
  {
    "id": "Angle.UnitType Enumeration",
    "name": "Angle.UnitType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Datatype.Angle.UnitType",
    "summary": "The angle units."
  },
  {
    "id": "Distance.UnitType Enumeration",
    "name": "Distance.UnitType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Datatype.Distance.UnitType",
    "summary": "The distance units."
  },
  {
    "id": "IDataType Interface",
    "name": "IDataType Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Datatype.IDataType",
    "summary": "The IDataType interface is the root interface for converting all the\r\n            Tekla.Structures.Datatype.* types to basic types supported by the\r\n            Tekla Structures Object Dialog tree."
  },
  {
    "id": "IDoubleDataType Interface",
    "name": "IDoubleDataType Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Datatype.IDoubleDataType",
    "summary": "The IDoubleDataType interface is an interface for the Tekla.Structures.Datatype.*\r\n            types whose value is a double."
  },
  {
    "id": "IIntDataType Interface",
    "name": "IIntDataType Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Datatype.IIntDataType",
    "summary": "The IIntDataType interface is an interface for the Tekla.Structures.Datatype.*\r\n            types whose value is an integer."
  },
  {
    "id": "IStringDataType Interface",
    "name": "IStringDataType Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Datatype.IStringDataType",
    "summary": "The IStringDataType interface is an interface for the Tekla.Structures.Datatype.*\r\n            types whose value is a string."
  },
  {
    "id": "dotdiaUnitTypes_e Enumeration",
    "name": "dotdiaUnitTypes_e Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Dialog.dotdiaUnitTypes_e",
    "summary": "Specifies the Tekla Structures unit types."
  },
  {
    "id": "ErrorDialog.Severity Enumeration",
    "name": "ErrorDialog.Severity Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Dialog.ErrorDialog.Severity",
    "summary": "The severity of the message to be displayed."
  },
  {
    "id": "SaveLoad.HelpFileTypeEnum Enumeration",
    "name": "SaveLoad.HelpFileTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.HelpFileTypeEnum",
    "summary": "The help file types."
  },
  {
    "id": "WpfSaveLoad.HelpFileTypeEnum Enumeration",
    "name": "WpfSaveLoad.HelpFileTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.HelpFileTypeEnum",
    "summary": "The help file types."
  },
  {
    "id": "AngleTypes Enumeration",
    "name": "AngleTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.AngleTypes",
    "summary": "The different types for angle dimensions."
  },
  {
    "id": "ArrowheadPositions Enumeration",
    "name": "ArrowheadPositions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ArrowheadPositions",
    "summary": "The positions of the arrowheads on the line."
  },
  {
    "id": "ArrowheadTypes Enumeration",
    "name": "ArrowheadTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ArrowheadTypes",
    "summary": "The arrowhead types."
  },
  {
    "id": "AutoSizeOptions Enumeration",
    "name": "AutoSizeOptions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.AutoSizeOptions",
    "summary": "Options for controlling how the sheet size is\r\n            calculated when the SizeDefinitionMode is AutoSize."
  },
  {
    "id": "Bolt.Representation Enumeration",
    "name": "Bolt.Representation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Bolt.Representation",
    "summary": "The bolt representations."
  },
  {
    "id": "CastUnitDrawing.CastUnitDrawingCreationType Enumeration",
    "name": "CastUnitDrawing.CastUnitDrawingCreationType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.CastUnitDrawing.CastUnitDrawingCreationType",
    "summary": "Defines the Cast Unit Drawing Creation type."
  },
  {
    "id": "DetailMark.DetailMarkAttributes.DetailBoundaryShape Enumeration",
    "name": "DetailMark.DetailMarkAttributes.DetailBoundaryShape Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DetailMark.DetailMarkAttributes.DetailBoundaryShape",
    "summary": "The boundary shapes of the detail mark."
  },
  {
    "id": "DimensionSetBaseAttributes.CombineFormats Enumeration",
    "name": "DimensionSetBaseAttributes.CombineFormats Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.CombineFormats",
    "summary": "The combined dimension formats."
  },
  {
    "id": "DimensionSetBaseAttributes.CurvedDimensionTypes Enumeration",
    "name": "DimensionSetBaseAttributes.CurvedDimensionTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.CurvedDimensionTypes",
    "summary": "The type of the curved dimension."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionTextPlacings Enumeration",
    "name": "DimensionSetBaseAttributes.DimensionTextPlacings Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionTextPlacings",
    "summary": "The placing types of the dimension value text."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionTypes Enumeration",
    "name": "DimensionSetBaseAttributes.DimensionTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionTypes",
    "summary": "The dimension types."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionValueFormats Enumeration",
    "name": "DimensionSetBaseAttributes.DimensionValueFormats Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionValueFormats",
    "summary": "The dimension value formats."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionValuePrecisions Enumeration",
    "name": "DimensionSetBaseAttributes.DimensionValuePrecisions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionValuePrecisions",
    "summary": "The value precisions for the dimensions."
  },
  {
    "id": "DimensionSetBaseAttributes.DimensionValueUnits Enumeration",
    "name": "DimensionSetBaseAttributes.DimensionValueUnits Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.DimensionValueUnits",
    "summary": "The units usable with the dimensions."
  },
  {
    "id": "DimensionSetBaseAttributes.ExaggerationDirections Enumeration",
    "name": "DimensionSetBaseAttributes.ExaggerationDirections Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.ExaggerationDirections",
    "summary": "The direction of the exaggeration."
  },
  {
    "id": "DimensionSetBaseAttributes.ExaggerationOrigins Enumeration",
    "name": "DimensionSetBaseAttributes.ExaggerationOrigins Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.ExaggerationOrigins",
    "summary": "The origin of the exaggeration."
  },
  {
    "id": "DimensionSetBaseAttributes.ExtensionLineTypes Enumeration",
    "name": "DimensionSetBaseAttributes.ExtensionLineTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.ExtensionLineTypes",
    "summary": "The extension line types."
  },
  {
    "id": "DimensionSetBaseAttributes.FrameTypes Enumeration",
    "name": "DimensionSetBaseAttributes.FrameTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.FrameTypes",
    "summary": "The frame types around the dimension values."
  },
  {
    "id": "DimensionSetBaseAttributes.Placings Enumeration",
    "name": "DimensionSetBaseAttributes.Placings Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.Placings",
    "summary": "The placing types of the objects."
  },
  {
    "id": "DimensionSetBaseAttributes.ShortDimensionTypes Enumeration",
    "name": "DimensionSetBaseAttributes.ShortDimensionTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DimensionSetBaseAttributes.ShortDimensionTypes",
    "summary": "The position of the short dimension value."
  },
  {
    "id": "DotPrintAreaType Enumeration",
    "name": "DotPrintAreaType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintAreaType",
    "summary": "The print area type."
  },
  {
    "id": "DotPrintColor Enumeration",
    "name": "DotPrintColor Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintColor",
    "summary": "Output color mode."
  },
  {
    "id": "DotPrintOrientationType Enumeration",
    "name": "DotPrintOrientationType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintOrientationType",
    "summary": "The print orientation type."
  },
  {
    "id": "DotPrintOutputType Enumeration",
    "name": "DotPrintOutputType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintOutputType",
    "summary": "The printer output type."
  },
  {
    "id": "DotPrintPaperSize Enumeration",
    "name": "DotPrintPaperSize Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintPaperSize",
    "summary": "The paper size."
  },
  {
    "id": "DotPrintScalingType Enumeration",
    "name": "DotPrintScalingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintScalingType",
    "summary": "The print scaling type."
  },
  {
    "id": "DotPrintToMultipleSheet Enumeration",
    "name": "DotPrintToMultipleSheet Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DotPrintToMultipleSheet",
    "summary": "The print to multiple sheet type."
  },
  {
    "id": "DrawingColors Enumeration",
    "name": "DrawingColors Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DrawingColors",
    "summary": "The colors used in Tekla.Structures.Drawing."
  },
  {
    "id": "DrawingHandler.MessageExecutionModeEnum Enumeration",
    "name": "DrawingHandler.MessageExecutionModeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DrawingHandler.MessageExecutionModeEnum",
    "summary": "The message execution modes of Tekla Structures."
  },
  {
    "id": "DrawingHatchColors Enumeration",
    "name": "DrawingHatchColors Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DrawingHatchColors",
    "summary": "The hatch colors used in Tekla.Structures.Drawing."
  },
  {
    "id": "DrawingUpToDateStatus Enumeration",
    "name": "DrawingUpToDateStatus Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.DrawingUpToDateStatus",
    "summary": "The drawing up to date status."
  },
  {
    "id": "EmbeddedObjectScalingOptions Enumeration",
    "name": "EmbeddedObjectScalingOptions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.EmbeddedObjectScalingOptions",
    "summary": "The options for controlling the scaling of the objects in the drawing."
  },
  {
    "id": "Events.DrawingUpdateTypeEnum Enumeration",
    "name": "Events.DrawingUpdateTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Events.DrawingUpdateTypeEnum",
    "summary": "The types of drawing update event."
  },
  {
    "id": "FormatTypes Enumeration",
    "name": "FormatTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.FormatTypes",
    "summary": "The available format types."
  },
  {
    "id": "FrameTypes Enumeration",
    "name": "FrameTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.FrameTypes",
    "summary": "The available frame styles around the object."
  },
  {
    "id": "Hideable.HiddenFlags Enumeration",
    "name": "Hideable.HiddenFlags Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Hideable.HiddenFlags",
    "summary": "The flag for keeping track of objects hidden status."
  },
  {
    "id": "Hideable.ShouldBeHiddenFlags Enumeration",
    "name": "Hideable.ShouldBeHiddenFlags Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Hideable.ShouldBeHiddenFlags",
    "summary": "The flag for keeping track if object should be hidden."
  },
  {
    "id": "IAxisAlignedBoundingBox Interface",
    "name": "IAxisAlignedBoundingBox Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IAxisAlignedBoundingBox",
    "summary": "The IAxisAlignedBoundingBox interface is implemented by objects that have an axis aligned bounding box."
  },
  {
    "id": "IEvents Interface",
    "name": "IEvents Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IEvents",
    "summary": "Interface for the Events class allows the user to register event listeners for Drawings events.\r\n            This interface allows the Marshaling of the Events class with Trimble.Remoting"
  },
  {
    "id": "IHasChildren Interface",
    "name": "IHasChildren Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IHasChildren",
    "summary": "The IHasChildren interface is implemented by objects that have child objects."
  },
  {
    "id": "IHideable Interface",
    "name": "IHideable Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IHideable",
    "summary": "The IHideable interface is used for each object that can be hidden in the drawing."
  },
  {
    "id": "IIsEqual Interface",
    "name": "IIsEqual Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IIsEqual",
    "summary": "The IIsEqual interface is for comparing objects using the function IsEqual()."
  },
  {
    "id": "IMovableRelative Interface",
    "name": "IMovableRelative Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IMovableRelative",
    "summary": "The IMovableRelative interface is implemented by objects that can be moved."
  },
  {
    "id": "IncludeRevisionMarkEnum Enumeration",
    "name": "IncludeRevisionMarkEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.IncludeRevisionMarkEnum",
    "summary": "Options for including a revision info in file name"
  },
  {
    "id": "IObjectAlignedBoundingBox Interface",
    "name": "IObjectAlignedBoundingBox Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IObjectAlignedBoundingBox",
    "summary": "The IObjectAlignedBoundingBox interface is implemented by objects that have an object aligned bounding box."
  },
  {
    "id": "IPlacing Interface",
    "name": "IPlacing Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IPlacing",
    "summary": "The IPlacing interface is for objects that can have different placings."
  },
  {
    "id": "IPreferredPlacing Interface",
    "name": "IPreferredPlacing Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IPreferredPlacing",
    "summary": "The IPreferredPlacing interface is for objects that can have different preferred placing types."
  },
  {
    "id": "IRelatedObjects Interface",
    "name": "IRelatedObjects Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IRelatedObjects",
    "summary": "The IRelatedObjects interface is implemented by objects that have related objects."
  },
  {
    "id": "IResizeable Interface",
    "name": "IResizeable Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.IResizeable",
    "summary": "The IResizeable interface is implemented by objects that can be resized."
  },
  {
    "id": "LeaderLine.LeaderLineTypes Enumeration",
    "name": "LeaderLine.LeaderLineTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.LeaderLine.LeaderLineTypes",
    "summary": "The different types of leader lines available."
  },
  {
    "id": "LevelMark.LevelMarkType Enumeration",
    "name": "LevelMark.LevelMarkType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.LevelMark.LevelMarkType",
    "summary": "Defines options about how the level mark is shown."
  },
  {
    "id": "LineTypesEnum Enumeration",
    "name": "LineTypesEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.LineTypesEnum",
    "summary": "The line types (the presentation of the line)."
  },
  {
    "id": "MarkBase.MarkBaseAttributes.TextAlignOptions Enumeration",
    "name": "MarkBase.MarkBaseAttributes.TextAlignOptions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.MarkBase.MarkBaseAttributes.TextAlignOptions",
    "summary": "Enumeration of the possible text alignment values."
  },
  {
    "id": "MarkSymbolShape Enumeration",
    "name": "MarkSymbolShape Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.MarkSymbolShape",
    "summary": "The mark symbol shapes for the detail mark."
  },
  {
    "id": "Part.Representation Enumeration",
    "name": "Part.Representation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Part.Representation",
    "summary": "The part representations."
  },
  {
    "id": "ReinforcementBase.HookedEndSymbolTypes Enumeration",
    "name": "ReinforcementBase.HookedEndSymbolTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.HookedEndSymbolTypes",
    "summary": "The available hooked end symbol types.\r\n            See Tekla Structures help, \"Reinforcement appearance\", for more information."
  },
  {
    "id": "ReinforcementBase.ReinforcementRepresentationTypes Enumeration",
    "name": "ReinforcementBase.ReinforcementRepresentationTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementRepresentationTypes",
    "summary": "The available reinforcement representation types.\r\n            See Tekla Structures help, \"Reinforcement appearance\", for more information."
  },
  {
    "id": "ReinforcementBase.ReinforcementVisibilityTypes Enumeration",
    "name": "ReinforcementBase.ReinforcementVisibilityTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.ReinforcementVisibilityTypes",
    "summary": "The available reinforcement visibility types.\r\n            Only applies to bar groups and meshes.\r\n            See Tekla Structures help, \"Setting the visibility of reinforcement in drawings\", for more information."
  },
  {
    "id": "ReinforcementBase.StraightEndSymbolTypes Enumeration",
    "name": "ReinforcementBase.StraightEndSymbolTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementBase.StraightEndSymbolTypes",
    "summary": "The available straight end symbol types.\r\n            See Tekla Structures help, \"Reinforcement appearance\", for more information."
  },
  {
    "id": "ReinforcementPulloutElement.EndSymbols Enumeration",
    "name": "ReinforcementPulloutElement.EndSymbols Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementPulloutElement.EndSymbols",
    "summary": "The shape of the bar ends in the pull-out."
  },
  {
    "id": "ReinforcementPulloutElement.Rotation Enumeration",
    "name": "ReinforcementPulloutElement.Rotation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ReinforcementPulloutElement.Rotation",
    "summary": "The rotation of the pull-out."
  },
  {
    "id": "ScalingOptions Enumeration",
    "name": "ScalingOptions Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.ScalingOptions",
    "summary": "The options for controlling the scaling of the objects in the drawing."
  },
  {
    "id": "SectionMarkBase.SectionMarkSymbol.SymbolShapes Enumeration",
    "name": "SectionMarkBase.SectionMarkSymbol.SymbolShapes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkSymbol.SymbolShapes",
    "summary": "The possible shapes of the section mark symbol."
  },
  {
    "id": "SectionMarkBase.SectionMarkTagAttributes.TagShowOnSide Enumeration",
    "name": "SectionMarkBase.SectionMarkTagAttributes.TagShowOnSide Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkTagAttributes.TagShowOnSide",
    "summary": "The values that determine on which side(s) the mark tag text is shown."
  },
  {
    "id": "SectionMarkBase.SectionMarkTagAttributes.TagTextRotation Enumeration",
    "name": "SectionMarkBase.SectionMarkTagAttributes.TagTextRotation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.SectionMarkBase.SectionMarkTagAttributes.TagTextRotation",
    "summary": "The mark tag text rotation values."
  },
  {
    "id": "SizeDefinitionMode Enumeration",
    "name": "SizeDefinitionMode Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.SizeDefinitionMode",
    "summary": "Controls the size definition mode of the drawing sheet. Set the mode to\r\n            SizeDefinitionMode.SpecifiedSize if you want to force the sheet to a\r\n            certain size."
  },
  {
    "id": "Surfacing.Representation Enumeration",
    "name": "Surfacing.Representation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Surfacing.Representation",
    "summary": "The surfacing representations."
  },
  {
    "id": "TagLocation Enumeration",
    "name": "TagLocation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.TagLocation",
    "summary": "The mark tag location values."
  },
  {
    "id": "TextAlignment Enumeration",
    "name": "TextAlignment Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.TextAlignment",
    "summary": "The alignment of the text."
  },
  {
    "id": "Units Enumeration",
    "name": "Units Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Units",
    "summary": "The available unit types."
  },
  {
    "id": "View.HorizontalLabelPosition Enumeration",
    "name": "View.HorizontalLabelPosition Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.View.HorizontalLabelPosition",
    "summary": "The horizontal label position types."
  },
  {
    "id": "View.LabelLineLengthType Enumeration",
    "name": "View.LabelLineLengthType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.View.LabelLineLengthType",
    "summary": "The label line length types."
  },
  {
    "id": "View.ShorteningCutPartType Enumeration",
    "name": "View.ShorteningCutPartType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.View.ShorteningCutPartType",
    "summary": "The vertical label position types."
  },
  {
    "id": "View.VerticalLabelPosition Enumeration",
    "name": "View.VerticalLabelPosition Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.View.VerticalLabelPosition",
    "summary": "The vertical label position types."
  },
  {
    "id": "View.ViewTypes Enumeration",
    "name": "View.ViewTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.View.ViewTypes",
    "summary": "The possible types of views."
  },
  {
    "id": "Weld.Representation Enumeration",
    "name": "Weld.Representation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Weld.Representation",
    "summary": "The weld representations."
  },
  {
    "id": "AutoDrawingsStatusEnum Enumeration",
    "name": "AutoDrawingsStatusEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Drawing.Automation.AutoDrawingsStatusEnum",
    "summary": "The status of the AutoDrawing script execution."
  },
  {
    "id": "IUIEvents Interface",
    "name": "IUIEvents Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Drawing.UI.IUIEvents",
    "summary": "Interface for the Events class allows the user to register event listeners for DrawingUI events.\r\n            This interface allows the Marshaling of the Events class with Trimble.Remoting"
  },
  {
    "id": "BinaryFilterOperatorType Enumeration",
    "name": "BinaryFilterOperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.BinaryFilterOperatorType",
    "summary": "The binary filter operator type defines the operators between two binary filters."
  },
  {
    "id": "BooleanOperatorType Enumeration",
    "name": "BooleanOperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.BooleanOperatorType",
    "summary": "The Boolean operator type defines the operators between two Boolean filter expressions."
  },
  {
    "id": "DateTimeOperatorType Enumeration",
    "name": "DateTimeOperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.DateTimeOperatorType",
    "summary": "The DateTime operator type defines the operators between two DateTime filter expressions."
  },
  {
    "id": "FilterExpressionFileType Enumeration",
    "name": "FilterExpressionFileType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.FilterExpressionFileType",
    "summary": "The filter expression file type defines the filter expression file types."
  },
  {
    "id": "InvalidFilterExpressionExceptionReasonsType Enumeration",
    "name": "InvalidFilterExpressionExceptionReasonsType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.InvalidFilterExpressionExceptionReasonsType",
    "summary": "The invalid filter expression exception reasons type defines the possible reasons for the\r\n            InvalidFilterExpressionException."
  },
  {
    "id": "NumericOperatorType Enumeration",
    "name": "NumericOperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.NumericOperatorType",
    "summary": "The numeric operator type defines the operators between two numeric filter expressions."
  },
  {
    "id": "OperatorType Enumeration",
    "name": "OperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.OperatorType",
    "summary": "The operator type defines the operators between two filter expressions."
  },
  {
    "id": "StringOperatorType Enumeration",
    "name": "StringOperatorType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Filtering.StringOperatorType",
    "summary": "The string operator type defines the operators between two string filter expressions."
  },
  {
    "id": "DeformingType Enumeration",
    "name": "DeformingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Forming.DeformingType",
    "summary": "Enumeration for deforming type."
  },
  {
    "id": "FoldingType Enumeration",
    "name": "FoldingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Forming.FoldingType",
    "summary": "Enumeration for folding type."
  },
  {
    "id": "WrappingType Enumeration",
    "name": "WrappingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Forming.WrappingType",
    "summary": "Enumeration for wrapping type."
  },
  {
    "id": "IBoundingVolume Interface",
    "name": "IBoundingVolume Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Geometry3d.IBoundingVolume",
    "summary": "The BoundingVolume interface represents any generic 3D bounding volume."
  },
  {
    "id": "ICurve Interface",
    "name": "ICurve Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Geometry3d.ICurve",
    "summary": "Interface that represents an abstract curved geometry defined by a set of points. This interface is intended\r\n            to be the base class of 3D curves."
  },
  {
    "id": "PolymeshEdgeTypeEnum Enumeration",
    "name": "PolymeshEdgeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Geometry3d.PolymeshEdgeTypeEnum",
    "summary": "The type of the polymesh edge. This should always correspond 1:1 with\r\n            geometry::IndirectEdge_s::EdgeType_e on the Tekla Structures Core side"
  },
  {
    "id": "Assembly.AssemblyTypeEnum Enumeration",
    "name": "Assembly.AssemblyTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Assembly.AssemblyTypeEnum",
    "summary": "The assembly types."
  },
  {
    "id": "BasePoint.CoordinateSystemType Enumeration",
    "name": "BasePoint.CoordinateSystemType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BasePoint.CoordinateSystemType",
    "summary": "The type of the base points coordinate system."
  },
  {
    "id": "BaseRebarGroup.ExcludeTypeEnum Enumeration",
    "name": "BaseRebarGroup.ExcludeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseRebarGroup.ExcludeTypeEnum",
    "summary": "The different ways to exclude reinforcing bars from the group."
  },
  {
    "id": "BaseRebarGroup.RebarGroupSpacingTypeEnum Enumeration",
    "name": "BaseRebarGroup.RebarGroupSpacingTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseRebarGroup.RebarGroupSpacingTypeEnum",
    "summary": "The ways to distribute the reinforcing bars with different spacings."
  },
  {
    "id": "BaseRebarModifier.AffectedRebarEnum Enumeration",
    "name": "BaseRebarModifier.AffectedRebarEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseRebarModifier.AffectedRebarEnum",
    "summary": "This enum allows the caller to specify which end of the bar is of interest when calling the function GetAffectedBars."
  },
  {
    "id": "BaseRebarModifier.BarsAffectedEnum Enumeration",
    "name": "BaseRebarModifier.BarsAffectedEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseRebarModifier.BarsAffectedEnum",
    "summary": "The reinforcing bars affected."
  },
  {
    "id": "BaseWeld.WeldContourEnum Enumeration",
    "name": "BaseWeld.WeldContourEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldContourEnum",
    "summary": "The weld contour."
  },
  {
    "id": "BaseWeld.WeldElectrodeClassificationEnum Enumeration",
    "name": "BaseWeld.WeldElectrodeClassificationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldElectrodeClassificationEnum",
    "summary": "The weld electrode classification."
  },
  {
    "id": "BaseWeld.WeldFinishEnum Enumeration",
    "name": "BaseWeld.WeldFinishEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldFinishEnum",
    "summary": "The weld finish."
  },
  {
    "id": "BaseWeld.WeldIntermittentTypeEnum Enumeration",
    "name": "BaseWeld.WeldIntermittentTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldIntermittentTypeEnum",
    "summary": "Weld intermittent types."
  },
  {
    "id": "BaseWeld.WeldNDTInspectionEnum Enumeration",
    "name": "BaseWeld.WeldNDTInspectionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldNDTInspectionEnum",
    "summary": "The weld NDT inspection level."
  },
  {
    "id": "BaseWeld.WeldPlacementTypeEnum Enumeration",
    "name": "BaseWeld.WeldPlacementTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldPlacementTypeEnum",
    "summary": "Weld placement types."
  },
  {
    "id": "BaseWeld.WeldPreparationTypeEnum Enumeration",
    "name": "BaseWeld.WeldPreparationTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldPreparationTypeEnum",
    "summary": "Weld preparation types."
  },
  {
    "id": "BaseWeld.WeldProcessTypeEnum Enumeration",
    "name": "BaseWeld.WeldProcessTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldProcessTypeEnum",
    "summary": "The weld process type."
  },
  {
    "id": "BaseWeld.WeldTypeEnum Enumeration",
    "name": "BaseWeld.WeldTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BaseWeld.WeldTypeEnum",
    "summary": "The weld types."
  },
  {
    "id": "Beam.BeamTypeEnum Enumeration",
    "name": "Beam.BeamTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Beam.BeamTypeEnum",
    "summary": "The beam types.\r\n            The strip and pad footings are valid only if the material type of the beam is concrete."
  },
  {
    "id": "BentPlate.BendShape Enumeration",
    "name": "BentPlate.BendShape Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BentPlate.BendShape",
    "summary": "Enumerator to define different possibilities for bend shapes."
  },
  {
    "id": "BentPlateGeometrySolver.OperationStatus Enumeration",
    "name": "BentPlateGeometrySolver.OperationStatus Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BentPlateGeometrySolver.OperationStatus",
    "summary": "Define possible statuses for geometry creation/modification commands."
  },
  {
    "id": "BoltGroup.BoltHoleTypeEnum Enumeration",
    "name": "BoltGroup.BoltHoleTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.BoltHoleTypeEnum",
    "summary": "The special hole type."
  },
  {
    "id": "BoltGroup.BoltPlainHoleTypeEnum Enumeration",
    "name": "BoltGroup.BoltPlainHoleTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.BoltPlainHoleTypeEnum",
    "summary": "The plain hole type."
  },
  {
    "id": "BoltGroup.BoltRotateSlotsEnum Enumeration",
    "name": "BoltGroup.BoltRotateSlotsEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.BoltRotateSlotsEnum",
    "summary": "The rotation of the slots (the holes)."
  },
  {
    "id": "BoltGroup.BoltThreadInMaterialEnum Enumeration",
    "name": "BoltGroup.BoltThreadInMaterialEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.BoltThreadInMaterialEnum",
    "summary": "The thread in the material."
  },
  {
    "id": "BoltGroup.BoltTypeEnum Enumeration",
    "name": "BoltGroup.BoltTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.BoltTypeEnum",
    "summary": "The type of the bolt."
  },
  {
    "id": "BoltGroup.ErrorStatus Enumeration",
    "name": "BoltGroup.ErrorStatus Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BoltGroup.ErrorStatus",
    "summary": "Define possible statuses for geometry creation/modification commands."
  },
  {
    "id": "BooleanPart.BooleanTypeEnum Enumeration",
    "name": "BooleanPart.BooleanTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.BooleanPart.BooleanTypeEnum",
    "summary": "Defines the boolean operation: an add or a cut."
  },
  {
    "id": "Chamfer.ChamferTypeEnum Enumeration",
    "name": "Chamfer.ChamferTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Chamfer.ChamferTypeEnum",
    "summary": "The basic shape type of the chamfer."
  },
  {
    "id": "ChangeData.ChangeSourceTypeEnum Enumeration",
    "name": "ChangeData.ChangeSourceTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ChangeData.ChangeSourceTypeEnum",
    "summary": "The source types of changed event."
  },
  {
    "id": "ChangeData.ChangeTypeEnum Enumeration",
    "name": "ChangeData.ChangeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ChangeData.ChangeTypeEnum",
    "summary": "The types of changed event."
  },
  {
    "id": "CircleRebarGroup.CircleRebarGroupStirrupTypeEnum Enumeration",
    "name": "CircleRebarGroup.CircleRebarGroupStirrupTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.CircleRebarGroup.CircleRebarGroupStirrupTypeEnum",
    "summary": "The different stirrup types."
  },
  {
    "id": "ClashCheckData.ClashTypeEnum Enumeration",
    "name": "ClashCheckData.ClashTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ClashCheckData.ClashTypeEnum",
    "summary": "An enumeration for the different clash types."
  },
  {
    "id": "ContourPlate.ContourPlateTypeEnum Enumeration",
    "name": "ContourPlate.ContourPlateTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ContourPlate.ContourPlateTypeEnum",
    "summary": "The contour plate types."
  },
  {
    "id": "ControlCircle.ControlCircleColorEnum Enumeration",
    "name": "ControlCircle.ControlCircleColorEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ControlCircle.ControlCircleColorEnum",
    "summary": "The different circle colors."
  },
  {
    "id": "ControlLine.ControlLineColorEnum Enumeration",
    "name": "ControlLine.ControlLineColorEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ControlLine.ControlLineColorEnum",
    "summary": "The different line colors."
  },
  {
    "id": "ControlObjectColorEnum Enumeration",
    "name": "ControlObjectColorEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ControlObjectColorEnum",
    "summary": "The different colors used for control objects (ControlLine and ControlCircle have their own)."
  },
  {
    "id": "ControlObjectLineType Enumeration",
    "name": "ControlObjectLineType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ControlObjectLineType",
    "summary": "The line types (the presentation of the line)."
  },
  {
    "id": "EdgeChamfer.ChamferEndTypeEnum Enumeration",
    "name": "EdgeChamfer.ChamferEndTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.EdgeChamfer.ChamferEndTypeEnum",
    "summary": "The end type of the edge chamfer."
  },
  {
    "id": "HierarchicDefinitionTypeEnum Enumeration",
    "name": "HierarchicDefinitionTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.HierarchicDefinitionTypeEnum",
    "summary": "Defines the different types of classification hierarchies."
  },
  {
    "id": "IAssemblable Interface",
    "name": "IAssemblable Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Model.IAssemblable",
    "summary": "The IAssemblable interface dictates which model objects are capabable of belonging to an assembly at the leaf level."
  },
  {
    "id": "IEvents Interface",
    "name": "IEvents Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Model.IEvents",
    "summary": "Interface for the Events class allows the user to register event listeners for Model events.\r\n            This interface allows the Marshaling of the Events class with Trimble.Remoting"
  },
  {
    "id": "IGeometryNode Interface",
    "name": "IGeometryNode Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Model.IGeometryNode",
    "summary": "The IGeometryNode interface represents geometry tree node. This is implemented by concrete classes for the various types of geometry nodes"
  },
  {
    "id": "IGeometryNodeVisitor Interface",
    "name": "IGeometryNodeVisitor Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Model.IGeometryNodeVisitor",
    "summary": "The IGeometryNodeVisitor interface is implemented by classes visiting geometry nodes"
  },
  {
    "id": "InputItem.InputTypeEnum Enumeration",
    "name": "InputItem.InputTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.InputItem.InputTypeEnum",
    "summary": "Defines the type of the input."
  },
  {
    "id": "Load.LoadAttachmentEnum Enumeration",
    "name": "Load.LoadAttachmentEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Load.LoadAttachmentEnum",
    "summary": "The load attachment."
  },
  {
    "id": "Load.LoadPartNamesEnum Enumeration",
    "name": "Load.LoadPartNamesEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Load.LoadPartNamesEnum",
    "summary": "The load part names."
  },
  {
    "id": "Load.LoadSpanningEnum Enumeration",
    "name": "Load.LoadSpanningEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Load.LoadSpanningEnum",
    "summary": "The load spanning."
  },
  {
    "id": "LoadArea.AreaLoadFormEnum Enumeration",
    "name": "LoadArea.AreaLoadFormEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoadArea.AreaLoadFormEnum",
    "summary": "The area load form."
  },
  {
    "id": "LoadGroup.Colors Enumeration",
    "name": "LoadGroup.Colors Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoadGroup.Colors",
    "summary": "The possible display colors for loads in a load group."
  },
  {
    "id": "LoadGroup.LoadGroupDirection Enumeration",
    "name": "LoadGroup.LoadGroupDirection Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoadGroup.LoadGroupDirection",
    "summary": "The possible directions."
  },
  {
    "id": "LoadGroup.LoadGroupType Enumeration",
    "name": "LoadGroup.LoadGroupType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoadGroup.LoadGroupType",
    "summary": "The possible types for load groups."
  },
  {
    "id": "LoadLine.LineLoadFormEnum Enumeration",
    "name": "LoadLine.LineLoadFormEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoadLine.LineLoadFormEnum",
    "summary": "The line load form."
  },
  {
    "id": "LoftedPlate.LoftedPlateFaceTypeEnum Enumeration",
    "name": "LoftedPlate.LoftedPlateFaceTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.LoftedPlate.LoftedPlateFaceTypeEnum",
    "summary": "Lofted plate solid creation face types."
  },
  {
    "id": "ModelObject.ModelObjectEnum Enumeration",
    "name": "ModelObject.ModelObjectEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ModelObject.ModelObjectEnum",
    "summary": "All possible concrete model object subclasses are defined here. This enumeration can be used to\r\n            fetch certain types of objects from the Tekla Structures model."
  },
  {
    "id": "ModelObjectEnumerator.EnumeratorTypeEnum Enumeration",
    "name": "ModelObjectEnumerator.EnumeratorTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ModelObjectEnumerator.EnumeratorTypeEnum",
    "summary": "The types of enumerator available."
  },
  {
    "id": "Part.CastUnitTypeEnum Enumeration",
    "name": "Part.CastUnitTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Part.CastUnitTypeEnum",
    "summary": "The cast unit types."
  },
  {
    "id": "PolyBeam.PolyBeamTypeEnum Enumeration",
    "name": "PolyBeam.PolyBeamTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.PolyBeam.PolyBeamTypeEnum",
    "summary": "The polybeam types."
  },
  {
    "id": "Polymesh.PolymeshCheckerFlags Enumeration",
    "name": "Polymesh.PolymeshCheckerFlags Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Polymesh.PolymeshCheckerFlags",
    "summary": "Polymesh check flags, please refer to PolymeshHealthCheckEnum for the corresponding result values."
  },
  {
    "id": "Polymesh.PolymeshHealthCheckEnum Enumeration",
    "name": "Polymesh.PolymeshHealthCheckEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Polymesh.PolymeshHealthCheckEnum",
    "summary": "Polymesh check error result codes. See the PolymeshCheckerFlags to see how to set the various checks."
  },
  {
    "id": "Position.DepthEnum Enumeration",
    "name": "Position.DepthEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Position.DepthEnum",
    "summary": "The position in the depth sense."
  },
  {
    "id": "Position.PlaneEnum Enumeration",
    "name": "Position.PlaneEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Position.PlaneEnum",
    "summary": "The position in the plane sense."
  },
  {
    "id": "Position.RotationEnum Enumeration",
    "name": "Position.RotationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Position.RotationEnum",
    "summary": "The position in the rotational sense."
  },
  {
    "id": "RebarCranking.CrankedLengthTypeEnum Enumeration",
    "name": "RebarCranking.CrankedLengthTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarCranking.CrankedLengthTypeEnum",
    "summary": "The cranked length type."
  },
  {
    "id": "RebarCranking.CrankingTypeEnum Enumeration",
    "name": "RebarCranking.CrankingTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarCranking.CrankingTypeEnum",
    "summary": "The cranking type."
  },
  {
    "id": "RebarCranking.CrankSideEnum Enumeration",
    "name": "RebarCranking.CrankSideEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarCranking.CrankSideEnum",
    "summary": "The crank side."
  },
  {
    "id": "RebarCrankingNullable.EndCrankingTypeEnum Enumeration",
    "name": "RebarCrankingNullable.EndCrankingTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarCrankingNullable.EndCrankingTypeEnum",
    "summary": "The end cranking type."
  },
  {
    "id": "RebarEndDetailModifier.EndTypeEnum Enumeration",
    "name": "RebarEndDetailModifier.EndTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarEndDetailModifier.EndTypeEnum",
    "summary": "The end type."
  },
  {
    "id": "RebarGroup.RebarGroupStirrupTypeEnum Enumeration",
    "name": "RebarGroup.RebarGroupStirrupTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarGroup.RebarGroupStirrupTypeEnum",
    "summary": "The different stirrup types."
  },
  {
    "id": "RebarGuideline.GuidelineChamferTypeEnum Enumeration",
    "name": "RebarGuideline.GuidelineChamferTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarGuideline.GuidelineChamferTypeEnum",
    "summary": "The guideline chamfer types.\r\n            For use when creating longitudinal bars on the top/bottom face of a flat polybeam."
  },
  {
    "id": "RebarHookData.RebarHookShapeEnum Enumeration",
    "name": "RebarHookData.RebarHookShapeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarHookData.RebarHookShapeEnum",
    "summary": "The different hook shapes."
  },
  {
    "id": "RebarLapping.LappingTypeEnum Enumeration",
    "name": "RebarLapping.LappingTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarLapping.LappingTypeEnum",
    "summary": "The lapping type."
  },
  {
    "id": "RebarLapping.LapPlacementEnum Enumeration",
    "name": "RebarLapping.LapPlacementEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarLapping.LapPlacementEnum",
    "summary": "The placement of the lap relative to the associated RebarLegFace."
  },
  {
    "id": "RebarLapping.LapSideEnum Enumeration",
    "name": "RebarLapping.LapSideEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarLapping.LapSideEnum",
    "summary": "The side of the split that the lap is located."
  },
  {
    "id": "RebarLeg.OriginEnum Enumeration",
    "name": "RebarLeg.OriginEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarLeg.OriginEnum",
    "summary": "Enumerator for different leg origins."
  },
  {
    "id": "RebarLengthAdjustmentDataNullable.LengthAdjustmentTypeEnum Enumeration",
    "name": "RebarLengthAdjustmentDataNullable.LengthAdjustmentTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarLengthAdjustmentDataNullable.LengthAdjustmentTypeEnum",
    "summary": "The length adjustment type."
  },
  {
    "id": "RebarMesh.RebarMeshCrossBarLocationEnum Enumeration",
    "name": "RebarMesh.RebarMeshCrossBarLocationEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarMesh.RebarMeshCrossBarLocationEnum",
    "summary": "The ways to locate the crossing bars."
  },
  {
    "id": "RebarMesh.RebarMeshSpacingMethodEnum Enumeration",
    "name": "RebarMesh.RebarMeshSpacingMethodEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarMesh.RebarMeshSpacingMethodEnum",
    "summary": "The ways to distribute the reinforcing bars with different spacings."
  },
  {
    "id": "RebarMesh.RebarMeshTypeEnum Enumeration",
    "name": "RebarMesh.RebarMeshTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarMesh.RebarMeshTypeEnum",
    "summary": "The different types of reinforcement meshes."
  },
  {
    "id": "RebarPropertyModifier.GroupingTypeEnum Enumeration",
    "name": "RebarPropertyModifier.GroupingTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarPropertyModifier.GroupingTypeEnum",
    "summary": "The grouping type."
  },
  {
    "id": "RebarSpacing.ExactSpacing.Validation Enumeration",
    "name": "RebarSpacing.ExactSpacing.Validation Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacing.ExactSpacing.Validation",
    "summary": "Defines values used in validation of exact spacing elements."
  },
  {
    "id": "RebarSpacing.ExcludeTypeEnum Enumeration",
    "name": "RebarSpacing.ExcludeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacing.ExcludeTypeEnum",
    "summary": "The different ways to exclude reinforcing bars from the spacing."
  },
  {
    "id": "RebarSpacing.OffsetEnum Enumeration",
    "name": "RebarSpacing.OffsetEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacing.OffsetEnum",
    "summary": "The offset distance type."
  },
  {
    "id": "RebarSpacing.SpacingType Enumeration",
    "name": "RebarSpacing.SpacingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacing.SpacingType",
    "summary": "Defines the different spacing types."
  },
  {
    "id": "RebarSpacingZone.LengthEnum Enumeration",
    "name": "RebarSpacingZone.LengthEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacingZone.LengthEnum",
    "summary": "The length type."
  },
  {
    "id": "RebarSpacingZone.SpacingEnum Enumeration",
    "name": "RebarSpacingZone.SpacingEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSpacingZone.SpacingEnum",
    "summary": "The spacing type."
  },
  {
    "id": "RebarSplice.RebarSpliceBarPositionsEnum Enumeration",
    "name": "RebarSplice.RebarSpliceBarPositionsEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSplice.RebarSpliceBarPositionsEnum",
    "summary": "The bar group positions in the splice."
  },
  {
    "id": "RebarSplice.RebarSpliceTypeEnum Enumeration",
    "name": "RebarSplice.RebarSpliceTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSplice.RebarSpliceTypeEnum",
    "summary": "The splice types."
  },
  {
    "id": "RebarSplitter.SplitTypeEnum Enumeration",
    "name": "RebarSplitter.SplitTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSplitter.SplitTypeEnum",
    "summary": "The split type."
  },
  {
    "id": "RebarSplitter.StaggerTypeEnum Enumeration",
    "name": "RebarSplitter.StaggerTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.RebarSplitter.StaggerTypeEnum",
    "summary": "The side of the split that the additional offset (stagger) is located."
  },
  {
    "id": "ReferenceModel.VisibilityEnum Enumeration",
    "name": "ReferenceModel.VisibilityEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.ReferenceModel.VisibilityEnum",
    "summary": "The visibility type."
  },
  {
    "id": "Reinforcement.RebarGeometryOptionEnum Enumeration",
    "name": "Reinforcement.RebarGeometryOptionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Reinforcement.RebarGeometryOptionEnum",
    "summary": "Options for the function GetRebarGeometries."
  },
  {
    "id": "Reinforcement.RebarGeometrySimplificationTypeEnum Enumeration",
    "name": "Reinforcement.RebarGeometrySimplificationTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Reinforcement.RebarGeometrySimplificationTypeEnum",
    "summary": "The rebar geometry simplification type."
  },
  {
    "id": "Reinforcement.RebarOffsetTypeEnum Enumeration",
    "name": "Reinforcement.RebarOffsetTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Reinforcement.RebarOffsetTypeEnum",
    "summary": "The different types of offsets."
  },
  {
    "id": "Solid.SolidCreationTypeEnum Enumeration",
    "name": "Solid.SolidCreationTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Solid.SolidCreationTypeEnum",
    "summary": "The creation type of the solid."
  },
  {
    "id": "SpiralBeam.ErrorStatus Enumeration",
    "name": "SpiralBeam.ErrorStatus Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.SpiralBeam.ErrorStatus",
    "summary": "Define possible statuses for geometry creation/modification commands."
  },
  {
    "id": "SurfaceTreatment.SurfaceColorEnum Enumeration",
    "name": "SurfaceTreatment.SurfaceColorEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.SurfaceTreatment.SurfaceColorEnum",
    "summary": "The different surfacing colors."
  },
  {
    "id": "SurfaceTreatment.SurfaceTypeEnum Enumeration",
    "name": "SurfaceTreatment.SurfaceTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.SurfaceTreatment.SurfaceTypeEnum",
    "summary": "The different surfacing types."
  },
  {
    "id": "TaskDependency.DependencyTypeEnum Enumeration",
    "name": "TaskDependency.DependencyTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.TaskDependency.DependencyTypeEnum",
    "summary": "The task dependency types."
  },
  {
    "id": "Weld.WeldPositionEnum Enumeration",
    "name": "Weld.WeldPositionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Weld.WeldPositionEnum",
    "summary": "The weld position."
  },
  {
    "id": "ReferenceModelObjectAttribute.AttributeTypeEnum Enumeration",
    "name": "ReferenceModelObjectAttribute.AttributeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Collaboration.ReferenceModelObjectAttribute.AttributeTypeEnum",
    "summary": "All the reference model object attribute types."
  },
  {
    "id": "Operation.ExportBasePoint Enumeration",
    "name": "Operation.ExportBasePoint Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Operations.Operation.ExportBasePoint",
    "summary": "Export base point"
  },
  {
    "id": "Operation.IFCExportViewTypeEnum Enumeration",
    "name": "Operation.IFCExportViewTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Operations.Operation.IFCExportViewTypeEnum",
    "summary": "View configuration type for IFC export"
  },
  {
    "id": "Operation.MISExportTypeEnum Enumeration",
    "name": "Operation.MISExportTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Operations.Operation.MISExportTypeEnum",
    "summary": "The MIS export types."
  },
  {
    "id": "Operation.ShapeMetadataResult Enumeration",
    "name": "Operation.ShapeMetadataResult Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Operations.Operation.ShapeMetadataResult",
    "summary": "The result type of the shape metadata operations. If you alter this, check if\r\n            you need to change ShapeMetadataResult_e on the Tekla Structures core side"
  },
  {
    "id": "Operation.UnselectedModeEnum Enumeration",
    "name": "Operation.UnselectedModeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Operations.Operation.UnselectedModeEnum",
    "summary": "Specifies what should do to unselected parts."
  },
  {
    "id": "GraphicPolyLine.LineType Enumeration",
    "name": "GraphicPolyLine.LineType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.GraphicPolyLine.LineType",
    "summary": "The appearance of the line. For instance solid, dashed or dotted."
  },
  {
    "id": "Picker.PickObjectEnum Enumeration",
    "name": "Picker.PickObjectEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.Picker.PickObjectEnum",
    "summary": "The possible model object pick types for a single object."
  },
  {
    "id": "Picker.PickObjectsEnum Enumeration",
    "name": "Picker.PickObjectsEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.Picker.PickObjectsEnum",
    "summary": "The possible model object pick types for many objects."
  },
  {
    "id": "Picker.PickPointEnum Enumeration",
    "name": "Picker.PickPointEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.Picker.PickPointEnum",
    "summary": "The possible point pick types."
  },
  {
    "id": "TemporaryTransparency Enumeration",
    "name": "TemporaryTransparency Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.TemporaryTransparency",
    "summary": "The possible temporary transparencies. Used to temporarily change transparency\r\n            of a model object to visualize some state in the model."
  },
  {
    "id": "View.DisplayOrientationType Enumeration",
    "name": "View.DisplayOrientationType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.View.DisplayOrientationType",
    "summary": "The view plane types.\r\n            The plane type can be changed."
  },
  {
    "id": "View.ViewProjectionType Enumeration",
    "name": "View.ViewProjectionType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.View.ViewProjectionType",
    "summary": "The view projection types.\r\n            The projection type can be read but not changed."
  },
  {
    "id": "View.ViewRenderingType Enumeration",
    "name": "View.ViewRenderingType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.UI.View.ViewRenderingType",
    "summary": "The view rendering types.\r\n            Only rendered views can be modified."
  },
  {
    "id": "WeldSeamPositionEnum Enumeration",
    "name": "WeldSeamPositionEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Model.Welding.WeldSeamPositionEnum",
    "summary": "Weld seam position types."
  },
  {
    "id": "ConnectionBase.InputObjectType Enumeration",
    "name": "ConnectionBase.InputObjectType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.ConnectionBase.InputObjectType",
    "summary": "Defines the input object type."
  },
  {
    "id": "ConnectionBase.SeamInputType Enumeration",
    "name": "ConnectionBase.SeamInputType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.ConnectionBase.SeamInputType",
    "summary": "Defines the type of the input."
  },
  {
    "id": "ConnectionBase.SecondaryType Enumeration",
    "name": "ConnectionBase.SecondaryType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.ConnectionBase.SecondaryType",
    "summary": "Defines how many secondaries a connection can have."
  },
  {
    "id": "CustomPartBase.CustomPartInputType Enumeration",
    "name": "CustomPartBase.CustomPartInputType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.CustomPartBase.CustomPartInputType",
    "summary": "Defines the type of the input."
  },
  {
    "id": "CustomPartBase.CustomPartPositioningType Enumeration",
    "name": "CustomPartBase.CustomPartPositioningType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.CustomPartBase.CustomPartPositioningType",
    "summary": "Defines the type of the positioning."
  },
  {
    "id": "DrawingPluginBase.InputDefinition.InputTypes Enumeration",
    "name": "DrawingPluginBase.InputDefinition.InputTypes Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.DrawingPluginBase.InputDefinition.InputTypes",
    "summary": "The possible input types for a drawing plug-in."
  },
  {
    "id": "DrawingPluginBase.UpdateMode Enumeration",
    "name": "DrawingPluginBase.UpdateMode Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.DrawingPluginBase.UpdateMode",
    "summary": "Defines the update mode of the drawing plug-in.\r\n            The update mode tells the system when the plug-in is executed."
  },
  {
    "id": "PluginBase.CoordinateSystemType Enumeration",
    "name": "PluginBase.CoordinateSystemType Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.PluginBase.CoordinateSystemType",
    "summary": "Defines the coordinate system type for model plug-ins which are using points as an input."
  },
  {
    "id": "PluginBase.InputDefinition.InputTypeEnum Enumeration",
    "name": "PluginBase.InputDefinition.InputTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.PluginBase.InputDefinition.InputTypeEnum",
    "summary": "The possible input types for a plug-in."
  },
  {
    "id": "PluginBase.InputObjectDependency Enumeration",
    "name": "PluginBase.InputObjectDependency Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.PluginBase.InputObjectDependency",
    "summary": "Defines the input object dependency type for model plug-ins."
  },
  {
    "id": "PluginBase.SymbolVisibility Enumeration",
    "name": "PluginBase.SymbolVisibility Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Plugins.PluginBase.SymbolVisibility",
    "summary": "Defines the symbol visibility for model plug-ins in model views."
  },
  {
    "id": "Edge.EdgeTypeEnum Enumeration",
    "name": "Edge.EdgeTypeEnum Enumeration",
    "type": "enum",
    "namespace": "Tekla.Structures.Solid.Edge.EdgeTypeEnum",
    "summary": "The type of the edge."
  },
  {
    "id": "ISolid Interface",
    "name": "ISolid Interface",
    "type": "interface",
    "namespace": "Tekla.Structures.Solid.ISolid",
    "summary": "The ISolid interface represents a physical object in the model or a drawing created by a part instance.\r\n            The solid instance can be used to query the actual geometry of the part."
  },
  {
    "id": "Assertion Constructor ",
    "name": "Assertion Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Assertion.#ctor",
    "summary": "Initializes a new instance of the Assertion class."
  },
  {
    "id": "DetailedMessage Property ",
    "name": "Assertion.DetailedMessage Property",
    "type": "property",
    "namespace": "Tekla.Structures.Assertion.DetailedMessage",
    "summary": "Gets the detailed message provided by the assertion."
  },
  {
    "id": "Message Property ",
    "name": "Assertion.Message Property",
    "type": "property",
    "namespace": "Tekla.Structures.Assertion.Message",
    "summary": "Gets the message provided by the assertion."
  },
  {
    "id": "MethodName Property ",
    "name": "Assertion.MethodName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Assertion.MethodName",
    "summary": "Gets the name of the method the assertion failed in."
  },
  {
    "id": "Equals Method ",
    "name": "Assertion.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Assertion.Equals",
    "summary": "The equals."
  },
  {
    "id": "GetHashCode Method ",
    "name": "Assertion.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Assertion.GetHashCode",
    "summary": "Gets a hash code for this instance.\r\n            Calculated as recommended at http://msdn.microsoft.com/en-us/library/system.object.gethashcode.aspx"
  },
  {
    "id": "ToString Method ",
    "name": "Assertion.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Assertion.ToString",
    "summary": "The tostring."
  },
  {
    "id": "ClashCheckOptions Constructor ",
    "name": "ClashCheckOptions Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.ClashCheckOptions.#ctor",
    "summary": "Initializes a new instance of the ClashCheckOptions class"
  },
  {
    "id": "BoltHeadDiameter Property ",
    "name": "ClashCheckOptions.BoltHeadDiameter Property",
    "type": "property",
    "namespace": "Tekla.Structures.ClashCheckOptions.BoltHeadDiameter",
    "summary": "The bolt head diameter."
  },
  {
    "id": "NutThickness Property ",
    "name": "ClashCheckOptions.NutThickness Property",
    "type": "property",
    "namespace": "Tekla.Structures.ClashCheckOptions.NutThickness",
    "summary": "The nut thickness."
  },
  {
    "id": "ComponentOptions Constructor ",
    "name": "ComponentOptions Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.ComponentOptions.#ctor",
    "summary": "Initializes a new instance of the ComponentOptions class"
  },
  {
    "id": "AssemblyLoosePartPositionPrefix Property ",
    "name": "ComponentOptions.AssemblyLoosePartPositionPrefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.AssemblyLoosePartPositionPrefix",
    "summary": "The assembly loose position prefix."
  },
  {
    "id": "AssemblyLoosePartStartNumber Property ",
    "name": "ComponentOptions.AssemblyLoosePartStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.AssemblyLoosePartStartNumber",
    "summary": "The assembly loose part number."
  },
  {
    "id": "BoltEdgeDistanceFactor Property ",
    "name": "ComponentOptions.BoltEdgeDistanceFactor Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.BoltEdgeDistanceFactor",
    "summary": "The factor of bolt edge distance."
  },
  {
    "id": "BoltEdgeDistanceReference Property ",
    "name": "ComponentOptions.BoltEdgeDistanceReference Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.BoltEdgeDistanceReference",
    "summary": "The bolt edge distance reference."
  },
  {
    "id": "BoltSize Property ",
    "name": "ComponentOptions.BoltSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.BoltSize",
    "summary": "The bolt size."
  },
  {
    "id": "BoltStandard Property ",
    "name": "ComponentOptions.BoltStandard Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.BoltStandard",
    "summary": "The bolt standard."
  },
  {
    "id": "FoldedPlateProfileName Property ",
    "name": "ComponentOptions.FoldedPlateProfileName Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.FoldedPlateProfileName",
    "summary": "The folded plate profile name."
  },
  {
    "id": "LoosePartPositionPrefix Property ",
    "name": "ComponentOptions.LoosePartPositionPrefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.LoosePartPositionPrefix",
    "summary": "The loose part position prefix."
  },
  {
    "id": "LoosePartStartNumber Property ",
    "name": "ComponentOptions.LoosePartStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.LoosePartStartNumber",
    "summary": "The loose part start number."
  },
  {
    "id": "PartMaterial Property ",
    "name": "ComponentOptions.PartMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PartMaterial",
    "summary": "The part material."
  },
  {
    "id": "PartWeldedToPrimaryPositionPrefix Property ",
    "name": "ComponentOptions.PartWeldedToPrimaryPositionPrefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PartWeldedToPrimaryPositionPrefix",
    "summary": "The part welded to primary position prefix."
  },
  {
    "id": "PartWeldedToPrimaryStartNumber Property ",
    "name": "ComponentOptions.PartWeldedToPrimaryStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PartWeldedToPrimaryStartNumber",
    "summary": "The part welded to primary start number."
  },
  {
    "id": "PartWeldedToSecondaryPositionPrefix Property ",
    "name": "ComponentOptions.PartWeldedToSecondaryPositionPrefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PartWeldedToSecondaryPositionPrefix",
    "summary": "The part welded to secondary position prefix."
  },
  {
    "id": "PartWeldedToSecondaryStartNumber Property ",
    "name": "ComponentOptions.PartWeldedToSecondaryStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PartWeldedToSecondaryStartNumber",
    "summary": "The part welded to secondary start number."
  },
  {
    "id": "PlateProfileName Property ",
    "name": "ComponentOptions.PlateProfileName Property",
    "type": "property",
    "namespace": "Tekla.Structures.ComponentOptions.PlateProfileName",
    "summary": "The plate profile name."
  },
  {
    "id": "Identifier Constructor ",
    "name": "Identifier Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Identifier.#ctor",
    "summary": "Constructs an empty identifier."
  },
  {
    "id": "Identifier Constructor ",
    "name": "Identifier Constructor",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Constructs an empty identifier."
  },
  {
    "id": "Identifier Constructor (Guid)",
    "name": "Identifier Constructor (Guid)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Constructs an identifier with the given GUID."
  },
  {
    "id": "Identifier Constructor (Int32)",
    "name": "Identifier Constructor (Int32)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Constructs an identifier with the given ID."
  },
  {
    "id": "Identifier Constructor (String)",
    "name": "Identifier Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Constructs an identifier with the given GUID string."
  },
  {
    "id": "GUID Property ",
    "name": "Identifier.GUID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Identifier.GUID",
    "summary": "The object's globally unique identifier.\r\n            If the GUID value is set manually, the ID is initialized to 0 and the identification is done based on the GUID."
  },
  {
    "id": "ID Property ",
    "name": "Identifier.ID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Identifier.ID",
    "summary": "The identifier number.\r\n            If the ID value is set manually, the GUID is initialized to Guid.Empty and the identification is done based on the ID."
  },
  {
    "id": "ID2 Property ",
    "name": "Identifier.ID2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Identifier.ID2",
    "summary": "The sub identifier number.\r\n            If the subID value is set manually, the GUID is initialized to Guid.Empty and the identification is done based on the ID."
  },
  {
    "id": "Equals Method ",
    "name": "Identifier.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Identifier.Equals",
    "summary": "Compares the identifier with another object instance."
  },
  {
    "id": "Equals Method (Object)",
    "name": "Identifier.Equals Method (Object)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Compares the identifier with another object instance."
  },
  {
    "id": "Equals Method (Identifier)",
    "name": "Identifier.Equals Method (Identifier)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Compares the identifier with another identifier instance."
  },
  {
    "id": "GetHashCode Method ",
    "name": "Identifier.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Identifier.GetHashCode",
    "summary": "Gets the hash number of the identifier."
  },
  {
    "id": "IsValid Method ",
    "name": "Identifier.IsValid Method",
    "type": "method",
    "namespace": "Tekla.Structures.Identifier.IsValid",
    "summary": "Returns true if the identifier seems to be valid.\r\n            The validation is done based on the ID or GUID property."
  },
  {
    "id": "ToString Method ",
    "name": "Identifier.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Identifier.ToString",
    "summary": "Returns the integer ID as a string."
  },
  {
    "id": "ModuleManager Constructor ",
    "name": "ModuleManager Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.ModuleManager.#ctor",
    "summary": "Initializes a new instance of the ModuleManager class"
  },
  {
    "id": "AnalysisAndDesign Property ",
    "name": "ModuleManager.AnalysisAndDesign Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.AnalysisAndDesign",
    "summary": "Indicates whether the Analysis and Design management is enabled."
  },
  {
    "id": "CIPModeling Property ",
    "name": "ModuleManager.CIPModeling Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.CIPModeling",
    "summary": "Indicates whether the CIP modeling is enabled."
  },
  {
    "id": "ConcreteDetailing Property ",
    "name": "ModuleManager.ConcreteDetailing Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.ConcreteDetailing",
    "summary": "Indicates whether the concrete detailing is enabled."
  },
  {
    "id": "Configuration Property ",
    "name": "ModuleManager.Configuration Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.Configuration",
    "summary": "The currently running configuration of Tekla Structures."
  },
  {
    "id": "LoadModeling Property ",
    "name": "ModuleManager.LoadModeling Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.LoadModeling",
    "summary": "Indicates whether the load modeling is enabled."
  },
  {
    "id": "MultimaterialModeling Property ",
    "name": "ModuleManager.MultimaterialModeling Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.MultimaterialModeling",
    "summary": "Indicates whether the multimaterial modeling is enabled."
  },
  {
    "id": "RebarModeling Property ",
    "name": "ModuleManager.RebarModeling Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.RebarModeling",
    "summary": "Indicates whether the rebar modeling is enabled."
  },
  {
    "id": "SteelDetailing Property ",
    "name": "ModuleManager.SteelDetailing Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.SteelDetailing",
    "summary": "Indicates whether the steel detailing is enabled."
  },
  {
    "id": "TaskManagement Property ",
    "name": "ModuleManager.TaskManagement Property",
    "type": "property",
    "namespace": "Tekla.Structures.ModuleManager.TaskManagement",
    "summary": "Indicates whether the task management is enabled."
  },
  {
    "id": "TeklaStructuresFiles Constructor ",
    "name": "TeklaStructuresFiles Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresFiles.#ctor",
    "summary": "Initializes a new instance of the TeklaStructuresFiles class."
  },
  {
    "id": "PropertyFileDirectories Property ",
    "name": "TeklaStructuresFiles.PropertyFileDirectories Property",
    "type": "property",
    "namespace": "Tekla.Structures.TeklaStructuresFiles.PropertyFileDirectories",
    "summary": "The directories where to look for property files."
  },
  {
    "id": "GetAttributeFile Method ",
    "name": "TeklaStructuresFiles.GetAttributeFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresFiles.GetAttributeFile",
    "summary": "Gets a file info representing the first match in the standard property file directories."
  },
  {
    "id": "GetAttributeFile Method (String)",
    "name": "TeklaStructuresFiles.GetAttributeFile Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Gets a file info representing the first match in the standard property file directories."
  },
  {
    "id": "GetAttributeFile Method (List(String), String)",
    "name": "TeklaStructuresFiles.GetAttributeFile Method (List(String), String)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Gets a file info representing the first match in the search directories."
  },
  {
    "id": "GetFileDictionaryByExtension Method ",
    "name": "TeklaStructuresFiles.GetFileDictionaryByExtension Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresFiles.GetFileDictionaryByExtension",
    "summary": "Retrieves a dictionary of file names and their corresponding paths from multiple directories."
  },
  {
    "id": "GetMultiDirectoryFileList Method ",
    "name": "TeklaStructuresFiles.GetMultiDirectoryFileList Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresFiles.GetMultiDirectoryFileList",
    "summary": "Gets a list of files with the given extension from the default search directories."
  },
  {
    "id": "TeklaStructuresInfo Constructor ",
    "name": "TeklaStructuresInfo Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.#ctor",
    "summary": "Initializes a new instance of the TeklaStructuresInfo class"
  },
  {
    "id": "GetBuildNumber Method ",
    "name": "TeklaStructuresInfo.GetBuildNumber Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetBuildNumber",
    "summary": "Returns the Tekla Structures build number."
  },
  {
    "id": "GetCommonAppDataFolder Method ",
    "name": "TeklaStructuresInfo.GetCommonAppDataFolder Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetCommonAppDataFolder",
    "summary": "Returns (XSDATADIR)environments installation folder of the Tekla Structures as string."
  },
  {
    "id": "GetCopyRightText Method ",
    "name": "TeklaStructuresInfo.GetCopyRightText Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetCopyRightText",
    "summary": "Returns the Tekla Structures copyright text as string."
  },
  {
    "id": "GetCurrentProgramVersion Method ",
    "name": "TeklaStructuresInfo.GetCurrentProgramVersion Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetCurrentProgramVersion",
    "summary": "Returns the current Tekla Structures version."
  },
  {
    "id": "GetCurrentUser Method ",
    "name": "TeklaStructuresInfo.GetCurrentUser Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetCurrentUser",
    "summary": "Returns the current Tekla Structures user."
  },
  {
    "id": "GetFullTSRegistryKeyText Method ",
    "name": "TeklaStructuresInfo.GetFullTSRegistryKeyText Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetFullTSRegistryKeyText",
    "summary": "Returns full registry key of the Tekla Structures as string."
  },
  {
    "id": "GetLocalAppDataFolder Method ",
    "name": "TeklaStructuresInfo.GetLocalAppDataFolder Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetLocalAppDataFolder",
    "summary": "Returns (XSUSERDATADIR) user's local appdata folder of the Tekla Structures as string."
  },
  {
    "id": "GetPluginsFolder Method ",
    "name": "TeklaStructuresInfo.GetPluginsFolder Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetPluginsFolder",
    "summary": "Returns main TS plugins folder, not extensions folder"
  },
  {
    "id": "GetRevisionDate Method ",
    "name": "TeklaStructuresInfo.GetRevisionDate Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresInfo.GetRevisionDate",
    "summary": "Returns the Tekla Structures revision date as string."
  },
  {
    "id": "TeklaStructuresSettings Constructor ",
    "name": "TeklaStructuresSettings Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.#ctor",
    "summary": "Initializes a new instance of the TeklaStructuresSettings class"
  },
  {
    "id": "GetAdvancedOption Method ",
    "name": "TeklaStructuresSettings.GetAdvancedOption Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.GetAdvancedOption",
    "summary": "Returns the value of an advanced option variable."
  },
  {
    "id": "GetAdvancedOption Method (String, Boolean)",
    "name": "TeklaStructuresSettings.GetAdvancedOption Method (String, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of an advanced option variable."
  },
  {
    "id": "GetAdvancedOption Method (String, Double)",
    "name": "TeklaStructuresSettings.GetAdvancedOption Method (String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of an advanced option variable."
  },
  {
    "id": "GetAdvancedOption Method (String, Int32)",
    "name": "TeklaStructuresSettings.GetAdvancedOption Method (String, Int32)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of an advanced option variable."
  },
  {
    "id": "GetAdvancedOption Method (String, String)",
    "name": "TeklaStructuresSettings.GetAdvancedOption Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of an advanced option variable."
  },
  {
    "id": "GetAdvancedOptionPaths Method ",
    "name": "TeklaStructuresSettings.GetAdvancedOptionPaths Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.GetAdvancedOptionPaths",
    "summary": "Gets the value of an advanced option as a list of valid paths.\r\n            Strings with path separator ; are split into separate paths and any blank paths (containing only white space) are ignored.\r\n            Paths do not need to exist but must use valid characters and format.\r\n            Note: All valid paths are returned even when invalid paths are encountered."
  },
  {
    "id": "GetOptions Method ",
    "name": "TeklaStructuresSettings.GetOptions Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.GetOptions",
    "summary": "Returns the value of the clash check options."
  },
  {
    "id": "GetOptions Method (ClashCheckOptions)",
    "name": "TeklaStructuresSettings.GetOptions Method (ClashCheckOptions)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of the clash check options."
  },
  {
    "id": "GetOptions Method (ComponentOptions)",
    "name": "TeklaStructuresSettings.GetOptions Method (ComponentOptions)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Returns the value of the component options."
  },
  {
    "id": "IsPourEnabled Method ",
    "name": "TeklaStructuresSettings.IsPourEnabled Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.IsPourEnabled",
    "summary": "Determines whether pour management is enabled."
  },
  {
    "id": "IsToolOptionOn Method ",
    "name": "TeklaStructuresSettings.IsToolOptionOn Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.IsToolOptionOn",
    "summary": "Determines whether select switch is on."
  },
  {
    "id": "SetOptions Method ",
    "name": "TeklaStructuresSettings.SetOptions Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresSettings.SetOptions",
    "summary": "Sets the clash check options."
  },
  {
    "id": "SetOptions Method (ClashCheckOptions)",
    "name": "TeklaStructuresSettings.SetOptions Method (ClashCheckOptions)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Sets the clash check options."
  },
  {
    "id": "SetOptions Method (ComponentOptions)",
    "name": "TeklaStructuresSettings.SetOptions Method (ComponentOptions)",
    "type": "method",
    "namespace": "Tekla.Structures",
    "summary": "Sets the component options."
  },
  {
    "id": "Add Method ",
    "name": "TeklaStructuresVariables.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresVariables.Add",
    "summary": "Adds a variable to the list."
  },
  {
    "id": "ContainsVariable Method ",
    "name": "TeklaStructuresVariables.ContainsVariable Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresVariables.ContainsVariable",
    "summary": "Gets a key."
  },
  {
    "id": "Get Method ",
    "name": "TeklaStructuresVariables.Get Method",
    "type": "method",
    "namespace": "Tekla.Structures.TeklaStructuresVariables.Get",
    "summary": "Gets a key."
  },
  {
    "id": "Analysis Constructor ",
    "name": "Analysis Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Analysis.#ctor",
    "summary": "Initializes a new instance of the Analysis class."
  },
  {
    "id": "GetAnalysisObjectSelector Method ",
    "name": "Analysis.GetAnalysisObjectSelector Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Analysis.GetAnalysisObjectSelector",
    "summary": "Returns the analysis object selector."
  },
  {
    "id": "GetConnectionStatus Method ",
    "name": "Analysis.GetConnectionStatus Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Analysis.GetConnectionStatus",
    "summary": "Checks the connection status of the Tekla Structures process."
  },
  {
    "id": "AnalysisArea Constructor ",
    "name": "AnalysisArea Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.#ctor",
    "summary": "Initializes a new instance of the AnalysisArea class."
  },
  {
    "id": "AnalysisDesignCode Property ",
    "name": "AnalysisArea.AnalysisDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.AnalysisDesignCode",
    "summary": "Gets or sets the design code of the analysis area."
  },
  {
    "id": "AnalysisType Property ",
    "name": "AnalysisArea.AnalysisType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.AnalysisType",
    "summary": "Gets or sets the analysis type of the analysis area."
  },
  {
    "id": "Area Property ",
    "name": "AnalysisArea.Area Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Area",
    "summary": "Gets or sets the area polygon of the analysis area."
  },
  {
    "id": "AreaHoles Property ",
    "name": "AnalysisArea.AreaHoles Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.AreaHoles",
    "summary": "Gets or sets the area holes of the analysis area."
  },
  {
    "id": "InnerPositions Property ",
    "name": "AnalysisArea.InnerPositions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.InnerPositions",
    "summary": "Gets or sets the inner positions of the analysis area."
  },
  {
    "id": "Label Property ",
    "name": "AnalysisArea.Label Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Label",
    "summary": "Gets or sets the label of the analysis area."
  },
  {
    "id": "Material Property ",
    "name": "AnalysisArea.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Material",
    "summary": "Gets or sets the material of the analysis area."
  },
  {
    "id": "Profile Property ",
    "name": "AnalysisArea.Profile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Profile",
    "summary": "Gets or sets the profile of the analysis area."
  },
  {
    "id": "RigidDiaphragm Property ",
    "name": "AnalysisArea.RigidDiaphragm Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.RigidDiaphragm",
    "summary": "Gets or sets the rigid diaphragm of the analysis area."
  },
  {
    "id": "Thickness Property ",
    "name": "AnalysisArea.Thickness Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Thickness",
    "summary": "Gets or sets the thickness of the analysis area."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisArea.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Delete",
    "summary": "Deletes an analysis area.\r\n            Method is not implemented yet."
  },
  {
    "id": "GetAreaHoles Method ",
    "name": "AnalysisArea.GetAreaHoles Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.GetAreaHoles",
    "summary": "Gets the area holes of the analysis area."
  },
  {
    "id": "GetInnerPositions Method ",
    "name": "AnalysisArea.GetInnerPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.GetInnerPositions",
    "summary": "Gets the inner positions of the analysis area."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisArea.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Modify",
    "summary": "Modifies an analysis area.\r\n            Method is not implemented yet."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisArea.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisArea.Select",
    "summary": "Selects an analysis area.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "AnalysisAreaPolygon Constructor ",
    "name": "AnalysisAreaPolygon Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.#ctor",
    "summary": "Creates a new instance of the AnalysisAreaPolygon class."
  },
  {
    "id": "Edges Property ",
    "name": "AnalysisAreaPolygon.Edges Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.Edges",
    "summary": "The edges of the area polygon."
  },
  {
    "id": "Positions Property ",
    "name": "AnalysisAreaPolygon.Positions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.Positions",
    "summary": "The positions of the area polygon."
  },
  {
    "id": "Add Method ",
    "name": "AnalysisAreaPolygon.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.Add",
    "summary": "Adds a position to the analysis area polygon.\r\n            Also adds an edge."
  },
  {
    "id": "GetEdges Method ",
    "name": "AnalysisAreaPolygon.GetEdges Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.GetEdges",
    "summary": "Gets the edges of the area polygon."
  },
  {
    "id": "GetPositions Method ",
    "name": "AnalysisAreaPolygon.GetPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.GetPositions",
    "summary": "Gets the positions of the area polygon."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisAreaPolygon.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.Insert",
    "summary": "Inserts an analysis area polygon.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisAreaPolygon.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisAreaPolygon.Select",
    "summary": "Selects an analysis area polygon.\r\n            The AnalysisObjectType has to be set."
  },
  {
    "id": "AnalysisBar Constructor ",
    "name": "AnalysisBar Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.#ctor",
    "summary": "Initializes a new instance of the AnalysisBar class."
  },
  {
    "id": "AnalysisDesignCode Property ",
    "name": "AnalysisBar.AnalysisDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.AnalysisDesignCode",
    "summary": "Gets or sets the analysis design code of the analysis bar."
  },
  {
    "id": "AnalysisType Property ",
    "name": "AnalysisBar.AnalysisType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.AnalysisType",
    "summary": "Gets or sets the analysis type of the analysis bar."
  },
  {
    "id": "CardinalPoint Property ",
    "name": "AnalysisBar.CardinalPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.CardinalPoint",
    "summary": "Gets or sets the cardinal point of the analysis bar."
  },
  {
    "id": "Composite Property ",
    "name": "AnalysisBar.Composite Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Composite",
    "summary": "Gets or sets the composite beam of the analysis bar."
  },
  {
    "id": "Curvature Property ",
    "name": "AnalysisBar.Curvature Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Curvature",
    "summary": "Gets or sets the curvature of the analysis bar."
  },
  {
    "id": "Label Property ",
    "name": "AnalysisBar.Label Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Label",
    "summary": "Gets or sets the label of the analysis bar."
  },
  {
    "id": "Material Property ",
    "name": "AnalysisBar.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Material",
    "summary": "Gets or sets the material of the analysis bar."
  },
  {
    "id": "Members Property ",
    "name": "AnalysisBar.Members Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Members",
    "summary": "Gets the members of the analysis bar."
  },
  {
    "id": "Positions Property ",
    "name": "AnalysisBar.Positions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Positions",
    "summary": "Gets the positions of the analysis bar."
  },
  {
    "id": "ProfileEnd Property ",
    "name": "AnalysisBar.ProfileEnd Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.ProfileEnd",
    "summary": "Gets or sets the end profile of the analysis bar."
  },
  {
    "id": "ProfileStart Property ",
    "name": "AnalysisBar.ProfileStart Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.ProfileStart",
    "summary": "Gets or sets the start profile of the analysis bar."
  },
  {
    "id": "Add Method ",
    "name": "AnalysisBar.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Add",
    "summary": "Adds a position to the analysis bar."
  },
  {
    "id": "Add Method (AnalysisPosition)",
    "name": "AnalysisBar.Add Method (AnalysisPosition)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Adds a position to the analysis bar."
  },
  {
    "id": "Add Method (AnalysisPosition, AnalysisMember)",
    "name": "AnalysisBar.Add Method (AnalysisPosition, AnalysisMember)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Adds a position and member to the analysis bar."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisBar.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Delete",
    "summary": "Deletes an analysis bar.\r\n            The method is not implemented."
  },
  {
    "id": "GetMembers Method ",
    "name": "AnalysisBar.GetMembers Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.GetMembers",
    "summary": "Gets the members of the analysis bar."
  },
  {
    "id": "GetPositions Method ",
    "name": "AnalysisBar.GetPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.GetPositions",
    "summary": "Gets the positions of the analysis bar."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisBar.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Modify",
    "summary": "Modifies an analysis bar.\r\n            The method is not implemented."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisBar.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBar.Select",
    "summary": "Selects an analysis bar.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "AnalysisBeamEnd Constructor ",
    "name": "AnalysisBeamEnd Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisBeamEnd.#ctor",
    "summary": "Initializes a new instance of the AnalysisBeamEnd class."
  },
  {
    "id": "Connectivity Property ",
    "name": "AnalysisBeamEnd.Connectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBeamEnd.Connectivity",
    "summary": "Gets or sets the connectivity at the beam end."
  },
  {
    "id": "Eccentricity Property ",
    "name": "AnalysisBeamEnd.Eccentricity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBeamEnd.Eccentricity",
    "summary": "Gets or sets the eccentricity at the beam end (in the member's local coordinate system)."
  },
  {
    "id": "Profile Property ",
    "name": "AnalysisBeamEnd.Profile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisBeamEnd.Profile",
    "summary": "Gets or sets the profile at the beam end."
  },
  {
    "id": "AnalysisCompositeBeam Constructor ",
    "name": "AnalysisCompositeBeam Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.#ctor",
    "summary": "Initializes a new instance of the AnalysisCompositeBeam class"
  },
  {
    "id": "Composite Property ",
    "name": "AnalysisCompositeBeam.Composite Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.Composite",
    "summary": "Indicates whether the beam is composite."
  },
  {
    "id": "ConcreteStrength Property ",
    "name": "AnalysisCompositeBeam.ConcreteStrength Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.ConcreteStrength",
    "summary": "The strength of the concrete of the analysis composite beam."
  },
  {
    "id": "RibDirection Property ",
    "name": "AnalysisCompositeBeam.RibDirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.RibDirection",
    "summary": "The direction of the rib of the analysis composite beam (in the global coordinate system)."
  },
  {
    "id": "RibHeight Property ",
    "name": "AnalysisCompositeBeam.RibHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.RibHeight",
    "summary": "The height of the rib of the analysis composite beam."
  },
  {
    "id": "RibWidth Property ",
    "name": "AnalysisCompositeBeam.RibWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.RibWidth",
    "summary": "The width of the rib of the analysis composite beam."
  },
  {
    "id": "SlabMaterial Property ",
    "name": "AnalysisCompositeBeam.SlabMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.SlabMaterial",
    "summary": "The slab material of the analysis composite beam."
  },
  {
    "id": "SlabThickness Property ",
    "name": "AnalysisCompositeBeam.SlabThickness Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.SlabThickness",
    "summary": "The thickness of the slab of the analysis composite beam."
  },
  {
    "id": "SlabWidthLeft Property ",
    "name": "AnalysisCompositeBeam.SlabWidthLeft Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.SlabWidthLeft",
    "summary": "The left width of the slab of the analysis composite beam."
  },
  {
    "id": "SlabWidthRight Property ",
    "name": "AnalysisCompositeBeam.SlabWidthRight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.SlabWidthRight",
    "summary": "The right width of the slab of the analysis composite beam."
  },
  {
    "id": "StudDiameter Property ",
    "name": "AnalysisCompositeBeam.StudDiameter Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.StudDiameter",
    "summary": "The diameter of the stud of the analysis composite beam."
  },
  {
    "id": "StudLength Property ",
    "name": "AnalysisCompositeBeam.StudLength Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCompositeBeam.StudLength",
    "summary": "The length of the stud of the analysis composite beam."
  },
  {
    "id": "AnalysisConnectivity Constructor ",
    "name": "AnalysisConnectivity Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity.#ctor",
    "summary": "Initializes a new instance of the AnalysisConnectivity class"
  },
  {
    "id": "Connectivity Property ",
    "name": "AnalysisConnectivity.Connectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity.Connectivity",
    "summary": "The connectivity type of the analysis connectivity."
  },
  {
    "id": "Spring Property ",
    "name": "AnalysisConnectivity.Spring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisConnectivity.Spring",
    "summary": "The spring values of the analysis connectivity."
  },
  {
    "id": "AnalysisCrossSection Constructor ",
    "name": "AnalysisCrossSection Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.#ctor",
    "summary": "Creates a new instance of an analysis cross section."
  },
  {
    "id": "A Property ",
    "name": "AnalysisCrossSection.A Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.A",
    "summary": "The cross section area (m2) of the analysis cross section."
  },
  {
    "id": "AnalysisSubSections Property ",
    "name": "AnalysisCrossSection.AnalysisSubSections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.AnalysisSubSections",
    "summary": "The subsections of the analysis cross section."
  },
  {
    "id": "Avy Property ",
    "name": "AnalysisCrossSection.Avy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Avy",
    "summary": "The shear area for loads parallel to the Y-axis (m2) of the analysis cross section."
  },
  {
    "id": "Avz Property ",
    "name": "AnalysisCrossSection.Avz Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Avz",
    "summary": "The shear area for loads parallel to the Z-axis (m2) of the analysis cross section."
  },
  {
    "id": "Calculated Property ",
    "name": "AnalysisCrossSection.Calculated Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Calculated",
    "summary": "Indicates whether section values have been calculated."
  },
  {
    "id": "G Property ",
    "name": "AnalysisCrossSection.G Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.G",
    "summary": "The mass per unit of length (kg/m) of the analysis cross section."
  },
  {
    "id": "It Property ",
    "name": "AnalysisCrossSection.It Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.It",
    "summary": "The torsion moment (m4) of the analysis cross section."
  },
  {
    "id": "Iw Property ",
    "name": "AnalysisCrossSection.Iw Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Iw",
    "summary": "The warping constant (m6) of the analysis cross section."
  },
  {
    "id": "Iy Property ",
    "name": "AnalysisCrossSection.Iy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Iy",
    "summary": "The radius of gyration about the Y-axis (m) of the analysis cross section."
  },
  {
    "id": "Iyy Property ",
    "name": "AnalysisCrossSection.Iyy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Iyy",
    "summary": "The moment of inertia about the Y-axis (m4) of the analysis cross section."
  },
  {
    "id": "Iz Property ",
    "name": "AnalysisCrossSection.Iz Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Iz",
    "summary": "The radius of gyration about the Z-axis (m) of the analysis cross section."
  },
  {
    "id": "Izz Property ",
    "name": "AnalysisCrossSection.Izz Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Izz",
    "summary": "The moment of inertia about the Z-axis (m4) of the analysis cross section."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisCrossSection.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Name",
    "summary": "The name of the analysis cross section."
  },
  {
    "id": "Wplyy Property ",
    "name": "AnalysisCrossSection.Wplyy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Wplyy",
    "summary": "The plastic modulus about the Y-axis (m3) of the analysis cross section."
  },
  {
    "id": "Wplzz Property ",
    "name": "AnalysisCrossSection.Wplzz Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Wplzz",
    "summary": "The plastic modulus about the Z-axis (m3) of the analysis cross section."
  },
  {
    "id": "Wyy Property ",
    "name": "AnalysisCrossSection.Wyy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Wyy",
    "summary": "The elastic modulus about the Y-axis (m3) of the analysis cross section."
  },
  {
    "id": "Wzz Property ",
    "name": "AnalysisCrossSection.Wzz Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Wzz",
    "summary": "The elastic modulus about the Z-axis (m3) of the analysis cross section."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisCrossSection.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Delete",
    "summary": "Deletes an analysis cross section.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "GetCrossSectionGroup Method ",
    "name": "AnalysisCrossSection.GetCrossSectionGroup Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.GetCrossSectionGroup",
    "summary": "Gets the cross section group."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisCrossSection.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Insert",
    "summary": "Inserts an analysis cross section.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisCrossSection.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCrossSection.Select",
    "summary": "Selects an analysis cross section.\r\n            The AnalysisModelName and ID/Name have to be set."
  },
  {
    "id": "AnalysisCurvature Constructor ",
    "name": "AnalysisCurvature Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisCurvature.#ctor",
    "summary": "Initializes a new instance of the AnalysisCurvature class"
  },
  {
    "id": "Radius Property ",
    "name": "AnalysisCurvature.Radius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCurvature.Radius",
    "summary": "The radius of the beam curvature."
  },
  {
    "id": "RadiusDirection Property ",
    "name": "AnalysisCurvature.RadiusDirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisCurvature.RadiusDirection",
    "summary": "The radius direction of the beam curvature."
  },
  {
    "id": "AnalysisDecomposedAreaLoad Constructor ",
    "name": "AnalysisDecomposedAreaLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedAreaLoad class"
  },
  {
    "id": "Direction Property ",
    "name": "AnalysisDecomposedAreaLoad.Direction Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad.Direction",
    "summary": "The direction of the decomposed area load."
  },
  {
    "id": "Magnitudes Property ",
    "name": "AnalysisDecomposedAreaLoad.Magnitudes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad.Magnitudes",
    "summary": "The magnitudes of the decomposed area load."
  },
  {
    "id": "Positions Property ",
    "name": "AnalysisDecomposedAreaLoad.Positions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad.Positions",
    "summary": "The positions of the decomposed area load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedAreaLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedAreaLoad.Select",
    "summary": "Selects an analysis decomposed area load."
  },
  {
    "id": "AnalysisDecomposedBarLoad Constructor ",
    "name": "AnalysisDecomposedBarLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedBarLoad class"
  },
  {
    "id": "CSCode Property ",
    "name": "AnalysisDecomposedBarLoad.CSCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.CSCode",
    "summary": "The CS code of the decomposed bar load."
  },
  {
    "id": "EndDistance Property ",
    "name": "AnalysisDecomposedBarLoad.EndDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.EndDistance",
    "summary": "The end distance of the decomposed bar load."
  },
  {
    "id": "EndValue Property ",
    "name": "AnalysisDecomposedBarLoad.EndValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.EndValue",
    "summary": "The end value of the decomposed bar load."
  },
  {
    "id": "StartDistance Property ",
    "name": "AnalysisDecomposedBarLoad.StartDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.StartDistance",
    "summary": "The start distance of the decomposed bar load."
  },
  {
    "id": "StartValue Property ",
    "name": "AnalysisDecomposedBarLoad.StartValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.StartValue",
    "summary": "The start value of the decomposed bar load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedBarLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedBarLoad.Select",
    "summary": "Selects an analysis decomposed bar load."
  },
  {
    "id": "AnalysisDecomposedLoad Constructor ",
    "name": "AnalysisDecomposedLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedLoad class."
  },
  {
    "id": "AnalysisLoadType Property ",
    "name": "AnalysisDecomposedLoad.AnalysisLoadType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.AnalysisLoadType",
    "summary": "Gets or sets the type of the analysis decomposed load."
  },
  {
    "id": "ModelLoadGroupID Property ",
    "name": "AnalysisDecomposedLoad.ModelLoadGroupID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.ModelLoadGroupID",
    "summary": "Gets or sets the identifier of the load group."
  },
  {
    "id": "ModelLoadID Property ",
    "name": "AnalysisDecomposedLoad.ModelLoadID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.ModelLoadID",
    "summary": "Gets or sets the identifier of the model load."
  },
  {
    "id": "ObjectAttachedToID Property ",
    "name": "AnalysisDecomposedLoad.ObjectAttachedToID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.ObjectAttachedToID",
    "summary": "Gets or sets the identifier of the object the load is attached to."
  },
  {
    "id": "ObjectAttachedToType Property ",
    "name": "AnalysisDecomposedLoad.ObjectAttachedToType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedLoad.ObjectAttachedToType",
    "summary": "Gets or sets the type of the object the load is attached to."
  },
  {
    "id": "AnalysisDecomposedMemberLoad Constructor ",
    "name": "AnalysisDecomposedMemberLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedMemberLoad class."
  },
  {
    "id": "CSCode Property ",
    "name": "AnalysisDecomposedMemberLoad.CSCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.CSCode",
    "summary": "Gets or sets the CS code of the decomposed member load."
  },
  {
    "id": "EndDistance Property ",
    "name": "AnalysisDecomposedMemberLoad.EndDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.EndDistance",
    "summary": "Gets or sets the end distance of the decomposed member load."
  },
  {
    "id": "EndValue Property ",
    "name": "AnalysisDecomposedMemberLoad.EndValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.EndValue",
    "summary": "Gets or sets the end value of the decomposed member load."
  },
  {
    "id": "StartDistance Property ",
    "name": "AnalysisDecomposedMemberLoad.StartDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.StartDistance",
    "summary": "Gets or sets the start distance of the decomposed member load."
  },
  {
    "id": "StartValue Property ",
    "name": "AnalysisDecomposedMemberLoad.StartValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.StartValue",
    "summary": "Gets or sets the start value of the decomposed member load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedMemberLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedMemberLoad.Select",
    "summary": "Selects the analysis decomposed member load."
  },
  {
    "id": "AnalysisDecomposedNodeLoad Constructor ",
    "name": "AnalysisDecomposedNodeLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedNodeLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedNodeLoad class."
  },
  {
    "id": "F Property ",
    "name": "AnalysisDecomposedNodeLoad.F Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedNodeLoad.F",
    "summary": "Gets or sets the force of the analysis decomposed node load."
  },
  {
    "id": "M Property ",
    "name": "AnalysisDecomposedNodeLoad.M Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedNodeLoad.M",
    "summary": "Gets or sets the moment of the analysis decomposed node load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedNodeLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedNodeLoad.Select",
    "summary": "Selects an analysis decomposed node load."
  },
  {
    "id": "AnalysisDecomposedSelfweightLoad Constructor ",
    "name": "AnalysisDecomposedSelfweightLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedSelfweightLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedSelfweightLoad class"
  },
  {
    "id": "Directions Property ",
    "name": "AnalysisDecomposedSelfweightLoad.Directions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedSelfweightLoad.Directions",
    "summary": "The directions of the decomposed selfweight load."
  },
  {
    "id": "Factors Property ",
    "name": "AnalysisDecomposedSelfweightLoad.Factors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedSelfweightLoad.Factors",
    "summary": "The factors of the decomposed selfweight load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedSelfweightLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedSelfweightLoad.Select",
    "summary": "Selects an analysis decomposed selfweight load."
  },
  {
    "id": "AnalysisDecomposedTemperatureLoad Constructor ",
    "name": "AnalysisDecomposedTemperatureLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisDecomposedTemperatureLoad class"
  },
  {
    "id": "AxialTemperatureDifference Property ",
    "name": "AnalysisDecomposedTemperatureLoad.AxialTemperatureDifference Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.AxialTemperatureDifference",
    "summary": "The axial temperature difference of the decomposed temperature load."
  },
  {
    "id": "HorizontalTemperatureDifference Property ",
    "name": "AnalysisDecomposedTemperatureLoad.HorizontalTemperatureDifference Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.HorizontalTemperatureDifference",
    "summary": "The horizontal temperature difference of the decomposed temperature load."
  },
  {
    "id": "Strain Property ",
    "name": "AnalysisDecomposedTemperatureLoad.Strain Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.Strain",
    "summary": "The strain of the decomposed temperature load."
  },
  {
    "id": "VerticalTemperatureDifference Property ",
    "name": "AnalysisDecomposedTemperatureLoad.VerticalTemperatureDifference Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.VerticalTemperatureDifference",
    "summary": "The vertical temperature difference of the decomposed temperature load."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDecomposedTemperatureLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDecomposedTemperatureLoad.Select",
    "summary": "Selects an analysis decomposed temperature load."
  },
  {
    "id": "AnalysisDeltaZ Constructor ",
    "name": "AnalysisDeltaZ Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDeltaZ.#ctor",
    "summary": "Creates a new instance of an analysis delta Z."
  },
  {
    "id": "Bottom Property ",
    "name": "AnalysisDeltaZ.Bottom Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDeltaZ.Bottom",
    "summary": "The delta Z at the bottom."
  },
  {
    "id": "Top Property ",
    "name": "AnalysisDeltaZ.Top Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDeltaZ.Top",
    "summary": "The delta Z at the top."
  },
  {
    "id": "AnalysisDesignCode Constructor ",
    "name": "AnalysisDesignCode Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode.#ctor",
    "summary": "Initializes a new instance of the AnalysisDesignCode class"
  },
  {
    "id": "DesignParameters Property ",
    "name": "AnalysisDesignCode.DesignParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode.DesignParameters",
    "summary": "Gets or sets the design parameters of the analysis design code."
  },
  {
    "id": "ID Property ",
    "name": "AnalysisDesignCode.ID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode.ID",
    "summary": "Gets or sets the identifier of the analysis design code."
  },
  {
    "id": "MaterialType Property ",
    "name": "AnalysisDesignCode.MaterialType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode.MaterialType",
    "summary": "Gets the material type of the analysis analysis design code."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisDesignCode.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignCode.Name",
    "summary": "Gets the name of the analysis design code."
  },
  {
    "id": "AnalysisDesignParameter Constructor ",
    "name": "AnalysisDesignParameter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameter.#ctor",
    "summary": "Initializes a new instance of the AnalysisDesignParameter class."
  },
  {
    "id": "AnalysisDesignParameter Constructor (Int32)",
    "name": "AnalysisDesignParameter Constructor (Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Initializes a new instance of the AnalysisDesignParameter class."
  },
  {
    "id": "AnalysisDesignParameter Constructor (String, Int32, Identifier, Double)",
    "name": "AnalysisDesignParameter Constructor (String, Int32, Identifier, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Initializes a new instance of the AnalysisDesignParameter class."
  },
  {
    "id": "Value Property ",
    "name": "AnalysisDesignParameter.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameter.Value",
    "summary": "Gets or sets the value of the analysis design parameter."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisDesignParameter.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameter.Modify",
    "summary": "Modifies an analysis design parameter.\r\n            The ID has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDesignParameter.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameter.Select",
    "summary": "Selects an analysis design parameter."
  },
  {
    "id": "IsGeneral Property ",
    "name": "AnalysisDesignParameterBase.IsGeneral Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterBase.IsGeneral",
    "summary": "Gets or sets a value indicating whether the design parameter is general."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisDesignParameterBase.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterBase.Name",
    "summary": "Gets or sets the name of the analysis design parameter."
  },
  {
    "id": "Unit Property ",
    "name": "AnalysisDesignParameterBase.Unit Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterBase.Unit",
    "summary": "Gets or sets the unit of the analysis design parameter."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisDesignParameterBase.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterBase.Modify",
    "summary": "Modifies an analysis design parameter at the database.\r\n            Inserts if parameter does not exist."
  },
  {
    "id": "AnalysisDesignParameterMulti Constructor ",
    "name": "AnalysisDesignParameterMulti Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.#ctor",
    "summary": "Initializes a new instance of the AnalysisDesignParameterMulti class."
  },
  {
    "id": "AnalysisDesignParameterMulti Constructor (Int32)",
    "name": "AnalysisDesignParameterMulti Constructor (Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Initializes a new instance of the AnalysisDesignParameterMulti class."
  },
  {
    "id": "AnalysisDesignParameterMulti Constructor (String, Int32, Identifier)",
    "name": "AnalysisDesignParameterMulti Constructor (String, Int32, Identifier)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Initializes a new instance of the AnalysisDesignParameterMulti class."
  },
  {
    "id": "MultiValueCount Property ",
    "name": "AnalysisDesignParameterMulti.MultiValueCount Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.MultiValueCount",
    "summary": "Gets the multi value count of the analysis design parameter."
  },
  {
    "id": "GetValue Method ",
    "name": "AnalysisDesignParameterMulti.GetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.GetValue",
    "summary": "Gets the value specified by the index of the analysis design parameter."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisDesignParameterMulti.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.Modify",
    "summary": "Modifies an analysis design parameter.\r\n            The ID has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisDesignParameterMulti.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.Select",
    "summary": "Selects an analysis design parameter."
  },
  {
    "id": "SetValue Method ",
    "name": "AnalysisDesignParameterMulti.SetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignParameterMulti.SetValue",
    "summary": "Sets the value specified by the index of the analysis design parameter."
  },
  {
    "id": "AnalysisDesignSettings Constructor ",
    "name": "AnalysisDesignSettings Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.#ctor",
    "summary": "Creates a new analysis design settings instance."
  },
  {
    "id": "ConcreteDesignCode Property ",
    "name": "AnalysisDesignSettings.ConcreteDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.ConcreteDesignCode",
    "summary": "The concrete design code."
  },
  {
    "id": "ConcreteDesignMethod Property ",
    "name": "AnalysisDesignSettings.ConcreteDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.ConcreteDesignMethod",
    "summary": "The concrete design method."
  },
  {
    "id": "SteelDesignCode Property ",
    "name": "AnalysisDesignSettings.SteelDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.SteelDesignCode",
    "summary": "The steel design code."
  },
  {
    "id": "SteelDesignMethod Property ",
    "name": "AnalysisDesignSettings.SteelDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.SteelDesignMethod",
    "summary": "The steel design method."
  },
  {
    "id": "TimberDesignCode Property ",
    "name": "AnalysisDesignSettings.TimberDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.TimberDesignCode",
    "summary": "The timber design code."
  },
  {
    "id": "TimberDesignMethod Property ",
    "name": "AnalysisDesignSettings.TimberDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisDesignSettings.TimberDesignMethod",
    "summary": "The timber design method."
  },
  {
    "id": "AnalysisEccentricity Constructor ",
    "name": "AnalysisEccentricity Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEccentricity.#ctor",
    "summary": "Creates a new analysis eccentricity instance."
  },
  {
    "id": "End Property ",
    "name": "AnalysisEccentricity.End Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisEccentricity.End",
    "summary": "The eccentricity at the end."
  },
  {
    "id": "Start Property ",
    "name": "AnalysisEccentricity.Start Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisEccentricity.Start",
    "summary": "The eccentricity at the start."
  },
  {
    "id": "AnalysisEdge Constructor ",
    "name": "AnalysisEdge Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.#ctor",
    "summary": "Creates a new instance of the AnalysisEdge class."
  },
  {
    "id": "Connectivity Property ",
    "name": "AnalysisEdge.Connectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.Connectivity",
    "summary": "The connectivity of the analysis edge."
  },
  {
    "id": "Radius Property ",
    "name": "AnalysisEdge.Radius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.Radius",
    "summary": "The radius of the analysis edge."
  },
  {
    "id": "SplitPositions Property ",
    "name": "AnalysisEdge.SplitPositions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.SplitPositions",
    "summary": "The split positions of the analysis edge."
  },
  {
    "id": "AddSplit Method ",
    "name": "AnalysisEdge.AddSplit Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.AddSplit",
    "summary": "Adds a split position to the analysis edge."
  },
  {
    "id": "CopyData Method ",
    "name": "AnalysisEdge.CopyData Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.CopyData",
    "summary": "Copies data from another analysis edge."
  },
  {
    "id": "GetSplitPositions Method ",
    "name": "AnalysisEdge.GetSplitPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.GetSplitPositions",
    "summary": "Gets the split positions of the analysis edge."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisEdge.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.Modify",
    "summary": "Modifies an analysis edge.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisEdge.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisEdge.Select",
    "summary": "Selects an analysis edge."
  },
  {
    "id": "AnalysisFace Constructor ",
    "name": "AnalysisFace Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisFace.#ctor",
    "summary": "Initializes a new instance of the AnalysisFace class"
  },
  {
    "id": "Positions Property ",
    "name": "AnalysisFace.Positions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisFace.Positions",
    "summary": "The positions of the analysis face."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisFace.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisFace.Select",
    "summary": "Selects an analysis face."
  },
  {
    "id": "AnalysisLabel Constructor ",
    "name": "AnalysisLabel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLabel.#ctor",
    "summary": "Initializes a new instance of the AnalysisLabel class"
  },
  {
    "id": "Number Property ",
    "name": "AnalysisLabel.Number Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLabel.Number",
    "summary": "The number of the analysis label."
  },
  {
    "id": "Prefix Property ",
    "name": "AnalysisLabel.Prefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLabel.Prefix",
    "summary": "The prefix of the analysis label."
  },
  {
    "id": "AnalysisLoadCombination Constructor ",
    "name": "AnalysisLoadCombination Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.#ctor",
    "summary": "Initializes a new instance of the AnalysisLoadCombination class."
  },
  {
    "id": "GroupIDs Property ",
    "name": "AnalysisLoadCombination.GroupIDs Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.GroupIDs",
    "summary": "Gets or sets the identifiers of the groups of the analysis load combination."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisLoadCombination.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Name",
    "summary": "Gets or sets the name of the analysis load combination."
  },
  {
    "id": "PartialSafetyFactors Property ",
    "name": "AnalysisLoadCombination.PartialSafetyFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.PartialSafetyFactors",
    "summary": "Gets or sets the partial safety factors of the analysis load combination."
  },
  {
    "id": "ReductionFactors Property ",
    "name": "AnalysisLoadCombination.ReductionFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.ReductionFactors",
    "summary": "Gets or sets the reduction factors of the analysis load combination."
  },
  {
    "id": "ScalingFactors Property ",
    "name": "AnalysisLoadCombination.ScalingFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.ScalingFactors",
    "summary": "Gets or sets the scaling factors of the analysis load combination."
  },
  {
    "id": "Type Property ",
    "name": "AnalysisLoadCombination.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Type",
    "summary": "Gets or sets the combination type of the analysis load combination."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisLoadCombination.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Delete",
    "summary": "Deletes an analysis load combination.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisLoadCombination.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Insert",
    "summary": "Inserts an analysis load combination.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisLoadCombination.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Modify",
    "summary": "Modifies an analysis load combination.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisLoadCombination.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.Select",
    "summary": "Selects an analysis load combination.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "SetLoads Method ",
    "name": "AnalysisLoadCombination.SetLoads Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadCombination.SetLoads",
    "summary": "Sets the loads."
  },
  {
    "id": "AnalysisLoadGroup Constructor ",
    "name": "AnalysisLoadGroup Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.#ctor",
    "summary": "Initializes a new instance of the AnalysisLoadGroup class."
  },
  {
    "id": "Compatible Property ",
    "name": "AnalysisLoadGroup.Compatible Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Compatible",
    "summary": "Gets or sets a value indicating whether the load group is compatible."
  },
  {
    "id": "CompatibleNumber Property ",
    "name": "AnalysisLoadGroup.CompatibleNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.CompatibleNumber",
    "summary": "Gets or sets the load group compatible number."
  },
  {
    "id": "Direction Property ",
    "name": "AnalysisLoadGroup.Direction Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Direction",
    "summary": "Gets or sets the direction of the load group."
  },
  {
    "id": "Incompatible Property ",
    "name": "AnalysisLoadGroup.Incompatible Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Incompatible",
    "summary": "Gets or sets a value indicating whether the load group is incompatible."
  },
  {
    "id": "IncompatibleNumber Property ",
    "name": "AnalysisLoadGroup.IncompatibleNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.IncompatibleNumber",
    "summary": "Gets or sets the load group incompatible number."
  },
  {
    "id": "LoadGroupID Property ",
    "name": "AnalysisLoadGroup.LoadGroupID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.LoadGroupID",
    "summary": "Gets or sets the identifier of the load group."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisLoadGroup.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Name",
    "summary": "Gets or sets the name of the load group."
  },
  {
    "id": "Type Property ",
    "name": "AnalysisLoadGroup.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Type",
    "summary": "Gets or sets the type of the load group."
  },
  {
    "id": "GetTypeName Method ",
    "name": "AnalysisLoadGroup.GetTypeName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.GetTypeName",
    "summary": "Get load group type name, translated to current language."
  },
  {
    "id": "IsEmpty Method ",
    "name": "AnalysisLoadGroup.IsEmpty Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.IsEmpty",
    "summary": "Check if load group is empty (no loading exists)."
  },
  {
    "id": "IsSelfWeight Method ",
    "name": "AnalysisLoadGroup.IsSelfWeight Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.IsSelfWeight",
    "summary": "Check if load group is self weight load group."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisLoadGroup.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLoadGroup.Select",
    "summary": "Selects an AnalysisLoadGroup.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisLocalCoordinateSystem Constructor ",
    "name": "AnalysisLocalCoordinateSystem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisLocalCoordinateSystem.#ctor",
    "summary": "Creates a new analysis local coordinate system instance."
  },
  {
    "id": "LocalX Property ",
    "name": "AnalysisLocalCoordinateSystem.LocalX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLocalCoordinateSystem.LocalX",
    "summary": "The local X direction."
  },
  {
    "id": "LocalY Property ",
    "name": "AnalysisLocalCoordinateSystem.LocalY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisLocalCoordinateSystem.LocalY",
    "summary": "The local Y direction."
  },
  {
    "id": "AnalysisMaterial Constructor ",
    "name": "AnalysisMaterial Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.#ctor",
    "summary": "Initializes a new instance of the AnalysisMaterial class."
  },
  {
    "id": "DampingFactor Property ",
    "name": "AnalysisMaterial.DampingFactor Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.DampingFactor",
    "summary": "Gets or sets the damping factor of the material."
  },
  {
    "id": "Density Property ",
    "name": "AnalysisMaterial.Density Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.Density",
    "summary": "Gets or sets the density of the material."
  },
  {
    "id": "MaterialType Property ",
    "name": "AnalysisMaterial.MaterialType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.MaterialType",
    "summary": "Gets or sets tThe type of the material."
  },
  {
    "id": "ModulusOfElasticity Property ",
    "name": "AnalysisMaterial.ModulusOfElasticity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.ModulusOfElasticity",
    "summary": "Gets or sets the modulus of elasticity of the analysis material."
  },
  {
    "id": "Name Property ",
    "name": "AnalysisMaterial.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.Name",
    "summary": "Gets or sets the name of the analysis material."
  },
  {
    "id": "PoissonsRatio Property ",
    "name": "AnalysisMaterial.PoissonsRatio Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.PoissonsRatio",
    "summary": "Gets or sets the Poisson's ratio of the analysis material."
  },
  {
    "id": "ThermalDilatation Property ",
    "name": "AnalysisMaterial.ThermalDilatation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.ThermalDilatation",
    "summary": "Gets or sets the thermal dilatation of the analysis material."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisMaterial.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMaterial.Select",
    "summary": "Selects an analysis material.\r\n            The AnalysisModelName and Name have to be set."
  },
  {
    "id": "AnalysisMember Constructor ",
    "name": "AnalysisMember Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.#ctor",
    "summary": "Initializes a new instance of the AnalysisMember class."
  },
  {
    "id": "AnalysisDesignCode Property ",
    "name": "AnalysisMember.AnalysisDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.AnalysisDesignCode",
    "summary": "Gets or sets the analysis design code of the member."
  },
  {
    "id": "Composite Property ",
    "name": "AnalysisMember.Composite Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Composite",
    "summary": "Gets or sets the composite settings of the member."
  },
  {
    "id": "Curvature Property ",
    "name": "AnalysisMember.Curvature Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Curvature",
    "summary": "Gets or sets the beam curvature of the member."
  },
  {
    "id": "End Property ",
    "name": "AnalysisMember.End Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.End",
    "summary": "Gets or sets the analysis beam end settings at the end of the member."
  },
  {
    "id": "Label Property ",
    "name": "AnalysisMember.Label Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Label",
    "summary": "Gets or sets the label of the analysis member."
  },
  {
    "id": "Material Property ",
    "name": "AnalysisMember.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Material",
    "summary": "Gets or sets the material of the analysis member."
  },
  {
    "id": "Start Property ",
    "name": "AnalysisMember.Start Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Start",
    "summary": "Gets or sets the analysis beam end settings at the start of the member."
  },
  {
    "id": "CopyData Method ",
    "name": "AnalysisMember.CopyData Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.CopyData",
    "summary": "Copies data from another analysis member."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisMember.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Modify",
    "summary": "Modifies an analysis member.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisMember.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisMember.Select",
    "summary": "Selects an analysis member.\r\n            The AnalysisModelName and ID have to be set."
  },
  {
    "id": "AnalysisModel Constructor ",
    "name": "AnalysisModel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.#ctor",
    "summary": "Initializes a new instance of the AnalysisModel class."
  },
  {
    "id": "AnalysisConnectivityRules Property ",
    "name": "AnalysisModel.AnalysisConnectivityRules Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisConnectivityRules",
    "summary": "Gets or sets the analysis model connectivity rules."
  },
  {
    "id": "AnalysisEngine Property ",
    "name": "AnalysisModel.AnalysisEngine Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisEngine",
    "summary": "Gets or sets the analysis engine of the analysis model."
  },
  {
    "id": "AnalysisLoadCombinations Property ",
    "name": "AnalysisModel.AnalysisLoadCombinations Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisLoadCombinations",
    "summary": "Gets the analysis load combinations of the analysis model."
  },
  {
    "id": "AnalysisLoadGroups Property ",
    "name": "AnalysisModel.AnalysisLoadGroups Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisLoadGroups",
    "summary": "Gets the analysis load groups of the analysis model."
  },
  {
    "id": "AnalysisMethod Property ",
    "name": "AnalysisModel.AnalysisMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisMethod",
    "summary": "Gets or sets the analysis method of the analysis model."
  },
  {
    "id": "AnalysisModelDesignProperties Property ",
    "name": "AnalysisModel.AnalysisModelDesignProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelDesignProperties",
    "summary": "Gets or sets the analysis model design properties."
  },
  {
    "id": "AnalysisModelJobProperties Property ",
    "name": "AnalysisModel.AnalysisModelJobProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelJobProperties",
    "summary": "Gets or sets the analysis model job properties."
  },
  {
    "id": "AnalysisModelModalAnalysisProperties Property ",
    "name": "AnalysisModel.AnalysisModelModalAnalysisProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelModalAnalysisProperties",
    "summary": "Gets or sets the analysis model modal analysis properties."
  },
  {
    "id": "AnalysisModelOutputProperties Property ",
    "name": "AnalysisModel.AnalysisModelOutputProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelOutputProperties",
    "summary": "Gets or sets the analysis model output properties."
  },
  {
    "id": "AnalysisModelSeismicProperties Property ",
    "name": "AnalysisModel.AnalysisModelSeismicProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelSeismicProperties",
    "summary": "Gets or sets the analysis model seismic properties."
  },
  {
    "id": "AnalysisModelSpectrumProperties Property ",
    "name": "AnalysisModel.AnalysisModelSpectrumProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisModelSpectrumProperties",
    "summary": "Gets or sets the analysis model spectrum properties"
  },
  {
    "id": "AnalysisNodeLinks Property ",
    "name": "AnalysisModel.AnalysisNodeLinks Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisNodeLinks",
    "summary": "Gets the analysis node links of the analysis model."
  },
  {
    "id": "AnalysisNodes Property ",
    "name": "AnalysisModel.AnalysisNodes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisNodes",
    "summary": "Gets the analysis nodes of the analysis model."
  },
  {
    "id": "AnalysisParts Property ",
    "name": "AnalysisModel.AnalysisParts Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisParts",
    "summary": "Gets the analysis parts of the analysis model."
  },
  {
    "id": "AnalysisRigidDiaphragms Property ",
    "name": "AnalysisModel.AnalysisRigidDiaphragms Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AnalysisRigidDiaphragms",
    "summary": "Gets the analysis rigid diaphragms of the analysis model."
  },
  {
    "id": "AutodetectSecondaries Property ",
    "name": "AnalysisModel.AutodetectSecondaries Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.AutodetectSecondaries",
    "summary": "Gets or sets a value indicating whether bracing members are detected automatically."
  },
  {
    "id": "BracingFilterName Property ",
    "name": "AnalysisModel.BracingFilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.BracingFilterName",
    "summary": "Gets or sets the bracing filter name."
  },
  {
    "id": "ConstructionMethod Property ",
    "name": "AnalysisModel.ConstructionMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ConstructionMethod",
    "summary": "Gets or sets the construction method of the analysis model."
  },
  {
    "id": "FilterName Property ",
    "name": "AnalysisModel.FilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.FilterName",
    "summary": "Gets or sets the filter name of the analysis model."
  },
  {
    "id": "IncludeImperfections Property ",
    "name": "AnalysisModel.IncludeImperfections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.IncludeImperfections",
    "summary": "Gets or sets a value indicating whether imperfections are to be included."
  },
  {
    "id": "MemberAxislocation Property ",
    "name": "AnalysisModel.MemberAxislocation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.MemberAxislocation",
    "summary": "Gets or sets the axis location of the members."
  },
  {
    "id": "MemberEndReleaseMethodByJoint Property ",
    "name": "AnalysisModel.MemberEndReleaseMethodByJoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.MemberEndReleaseMethodByJoint",
    "summary": "Gets or sets a value indicating whether the end releases are set by joint properties."
  },
  {
    "id": "ModelUpdateModificationIdentifier Property ",
    "name": "AnalysisModel.ModelUpdateModificationIdentifier Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ModelUpdateModificationIdentifier",
    "summary": "Gets or sets the identifier of the model update modification."
  },
  {
    "id": "NodePositionTolerance Property ",
    "name": "AnalysisModel.NodePositionTolerance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.NodePositionTolerance",
    "summary": "Gets or sets the node position tolerance of the analysis model."
  },
  {
    "id": "NumberOfIterations Property ",
    "name": "AnalysisModel.NumberOfIterations Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.NumberOfIterations",
    "summary": "Gets or sets the number of iterations of the analysis model."
  },
  {
    "id": "PhysicalFreezed Property ",
    "name": "AnalysisModel.PhysicalFreezed Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.PhysicalFreezed",
    "summary": "Gets or sets a value indicating whether the physical objects are frozen."
  },
  {
    "id": "PhysicalFrozen Property ",
    "name": "AnalysisModel.PhysicalFrozen Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.PhysicalFrozen",
    "summary": "Gets or sets a value indicating whether the physical objects are frozen."
  },
  {
    "id": "RelativeAccuracy Property ",
    "name": "AnalysisModel.RelativeAccuracy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.RelativeAccuracy",
    "summary": "Gets or sets the relative accuracy of the analysis model."
  },
  {
    "id": "ResultsFreezed Property ",
    "name": "AnalysisModel.ResultsFreezed Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ResultsFreezed",
    "summary": "Gets or sets a value indicating whether the results are frozen."
  },
  {
    "id": "ResultsFrozen Property ",
    "name": "AnalysisModel.ResultsFrozen Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ResultsFrozen",
    "summary": "Gets or sets a value indicating whether the results are frozen."
  },
  {
    "id": "ResultsModificationIdentifier Property ",
    "name": "AnalysisModel.ResultsModificationIdentifier Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ResultsModificationIdentifier",
    "summary": "Gets or sets the results modification identifier."
  },
  {
    "id": "ResultsTime Property ",
    "name": "AnalysisModel.ResultsTime Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.ResultsTime",
    "summary": "Gets or sets the results time."
  },
  {
    "id": "SecondaryFilterName Property ",
    "name": "AnalysisModel.SecondaryFilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.SecondaryFilterName",
    "summary": "Gets or sets the bracing filter name."
  },
  {
    "id": "SecondaryKeepAxis Property ",
    "name": "AnalysisModel.SecondaryKeepAxis Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.SecondaryKeepAxis",
    "summary": "Gets or sets the secondary keep axis settings.\r\n            Not used, bracing/secondary members always have KEEP_AXIS_NO initially."
  },
  {
    "id": "SecondaryMemberFilterName Property ",
    "name": "AnalysisModel.SecondaryMemberFilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.SecondaryMemberFilterName",
    "summary": "Gets or sets the secondary member filter name."
  },
  {
    "id": "SnapDistance Property ",
    "name": "AnalysisModel.SnapDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.SnapDistance",
    "summary": "Gets or sets the snap distance of the analysis model."
  },
  {
    "id": "UseModelMerge Property ",
    "name": "AnalysisModel.UseModelMerge Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.UseModelMerge",
    "summary": "Gets or sets a value indicating whether model merge is used."
  },
  {
    "id": "UseTrueCurvedMembers Property ",
    "name": "AnalysisModel.UseTrueCurvedMembers Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.UseTrueCurvedMembers",
    "summary": "Gets or sets a value indicating whether members are true curved."
  },
  {
    "id": "UseTwinProfiles Property ",
    "name": "AnalysisModel.UseTwinProfiles Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.UseTwinProfiles",
    "summary": "Gets or sets a value indicating whether twin profiles are used."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisModel.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.Delete",
    "summary": "Deletes an analysis model.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "GetIssues Method ",
    "name": "AnalysisModel.GetIssues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.GetIssues",
    "summary": "Get analysis model issues."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisModel.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.Insert",
    "summary": "Inserts a new analysis model into the Tekla Structures model.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisModel.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.Modify",
    "summary": "Modifies an analysis model.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisModel.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModel.Select",
    "summary": "Selects an analysis model. Updates the model.\r\n            The AnalysisModelName or ID has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisModel.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Selects an analysis model. Updates the model.\r\n            The AnalysisModelName or ID has to be set."
  },
  {
    "id": "Select Method (Boolean)",
    "name": "AnalysisModel.Select Method (Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Selects an analysis model.\r\n            The AnalysisModelName or ID has to be set."
  },
  {
    "id": "AnalysisModelAnalysisProperties Constructor ",
    "name": "AnalysisModelAnalysisProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties.#ctor",
    "summary": "Creates a new analysis model analysis properties instance."
  },
  {
    "id": "AccuracyOfIterations Property ",
    "name": "AnalysisModelAnalysisProperties.AccuracyOfIterations Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties.AccuracyOfIterations",
    "summary": "The accuracy of the iterations."
  },
  {
    "id": "AnalysisMethod Property ",
    "name": "AnalysisModelAnalysisProperties.AnalysisMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties.AnalysisMethod",
    "summary": "The analysis method."
  },
  {
    "id": "MaxIterations Property ",
    "name": "AnalysisModelAnalysisProperties.MaxIterations Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelAnalysisProperties.MaxIterations",
    "summary": "The maximum number of iterations."
  },
  {
    "id": "AnalysisModelConnectivityRule Constructor ",
    "name": "AnalysisModelConnectivityRule Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelConnectivityRule class"
  },
  {
    "id": "Group1 Property ",
    "name": "AnalysisModelConnectivityRule.Group1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Group1",
    "summary": "The group name 1 of the connectivity rule."
  },
  {
    "id": "Group2 Property ",
    "name": "AnalysisModelConnectivityRule.Group2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Group2",
    "summary": "The group name 2 of the connectivity rule."
  },
  {
    "id": "Linkage1 Property ",
    "name": "AnalysisModelConnectivityRule.Linkage1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Linkage1",
    "summary": "The linkage 1 of the connectivity rule."
  },
  {
    "id": "Linkage2 Property ",
    "name": "AnalysisModelConnectivityRule.Linkage2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Linkage2",
    "summary": "The linkage 2 of the connectivity rule."
  },
  {
    "id": "MagneticDistance Property ",
    "name": "AnalysisModelConnectivityRule.MagneticDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.MagneticDistance",
    "summary": "The magnetic distance of the connectivity rule."
  },
  {
    "id": "Status Property ",
    "name": "AnalysisModelConnectivityRule.Status Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Status",
    "summary": "The status of the connectivity rule."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisModelConnectivityRule.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelConnectivityRule.Select",
    "summary": "Selects an analysis connectivity rule.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisModelDesignProperties Constructor ",
    "name": "AnalysisModelDesignProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelDesignProperties class"
  },
  {
    "id": "ConcreteDesign Property ",
    "name": "AnalysisModelDesignProperties.ConcreteDesign Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.ConcreteDesign",
    "summary": "The concrete code used."
  },
  {
    "id": "ConcreteDesignMethod Property ",
    "name": "AnalysisModelDesignProperties.ConcreteDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.ConcreteDesignMethod",
    "summary": "The concrete design method."
  },
  {
    "id": "SteelDesign Property ",
    "name": "AnalysisModelDesignProperties.SteelDesign Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.SteelDesign",
    "summary": "The steel code used."
  },
  {
    "id": "SteelDesignMethod Property ",
    "name": "AnalysisModelDesignProperties.SteelDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.SteelDesignMethod",
    "summary": "The steel design method."
  },
  {
    "id": "TimberDesign Property ",
    "name": "AnalysisModelDesignProperties.TimberDesign Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.TimberDesign",
    "summary": "The timber code used."
  },
  {
    "id": "TimberDesignMethod Property ",
    "name": "AnalysisModelDesignProperties.TimberDesignMethod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelDesignProperties.TimberDesignMethod",
    "summary": "The timber design method."
  },
  {
    "id": "AnalysisModelGeneralProperties Constructor ",
    "name": "AnalysisModelGeneralProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.#ctor",
    "summary": "Creates a new analysis model general properties instance."
  },
  {
    "id": "AnalysisEngineName Property ",
    "name": "AnalysisModelGeneralProperties.AnalysisEngineName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.AnalysisEngineName",
    "summary": "The name of the analysis engine."
  },
  {
    "id": "ExtendedClashCheck Property ",
    "name": "AnalysisModelGeneralProperties.ExtendedClashCheck Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ExtendedClashCheck",
    "summary": "Defines whether the extended clash check is used."
  },
  {
    "id": "FilterName Property ",
    "name": "AnalysisModelGeneralProperties.FilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.FilterName",
    "summary": "The name of the filter."
  },
  {
    "id": "MemberAxisLocation Property ",
    "name": "AnalysisModelGeneralProperties.MemberAxisLocation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.MemberAxisLocation",
    "summary": "The location of the member axis."
  },
  {
    "id": "MemberEndReleaseMethodByConnection Property ",
    "name": "AnalysisModelGeneralProperties.MemberEndReleaseMethodByConnection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.MemberEndReleaseMethodByConnection",
    "summary": "Defines whether the support conditions of connections or parts are used."
  },
  {
    "id": "ModalAnalysisModel Property ",
    "name": "AnalysisModelGeneralProperties.ModalAnalysisModel Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ModalAnalysisModel",
    "summary": "Defines whether the modal analysis properties are used instead of the static load combinations."
  },
  {
    "id": "ModelCreationType Property ",
    "name": "AnalysisModelGeneralProperties.ModelCreationType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ModelCreationType",
    "summary": "The model creation type."
  },
  {
    "id": "ModelMerging Property ",
    "name": "AnalysisModelGeneralProperties.ModelMerging Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ModelMerging",
    "summary": "Defines whether the model merging is used."
  },
  {
    "id": "ModelName Property ",
    "name": "AnalysisModelGeneralProperties.ModelName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.ModelName",
    "summary": "The name of the model."
  },
  {
    "id": "NodeDefinition Property ",
    "name": "AnalysisModelGeneralProperties.NodeDefinition Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelGeneralProperties.NodeDefinition",
    "summary": "Defines how the nodes and node positions are defined."
  },
  {
    "id": "AnalysisModelHandler Constructor ",
    "name": "AnalysisModelHandler Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelHandler class"
  },
  {
    "id": "AddLoad Method ",
    "name": "AnalysisModelHandler.AddLoad Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.AddLoad",
    "summary": "Adds a load to the analysis model.\r\n            The ConstructionMethod must be SELECTED_PARTS, SELECTED_PARTS_AND_LOADS or FLOOR_BY_SELECTED_PARTS_AND_LOADS."
  },
  {
    "id": "AddPart Method ",
    "name": "AnalysisModelHandler.AddPart Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.AddPart",
    "summary": "Adds a part to the analysis model.\r\n            The ConstructionMethod must be SELECTED_PARTS, SELECTED_PARTS_AND_LOADS or FLOOR_BY_SELECTED_PARTS_AND_LOADS."
  },
  {
    "id": "GetActiveModel Method ",
    "name": "AnalysisModelHandler.GetActiveModel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.GetActiveModel",
    "summary": "Gets the active model."
  },
  {
    "id": "RemoveLoad Method ",
    "name": "AnalysisModelHandler.RemoveLoad Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.RemoveLoad",
    "summary": "Removes a load from the analysis model.\r\n            The ConstructionMethod must be SELECTED_PARTS, SELECTED_PARTS_AND_LOADS or FLOOR_BY_SELECTED_PARTS_AND_LOADS."
  },
  {
    "id": "RemovePart Method ",
    "name": "AnalysisModelHandler.RemovePart Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.RemovePart",
    "summary": "Removes a part from the analysis model.\r\n            The ConstructionMethod must be SELECTED_PARTS, SELECTED_PARTS_AND_LOADS or FLOOR_BY_SELECTED_PARTS_AND_LOADS."
  },
  {
    "id": "SetActiveModel Method ",
    "name": "AnalysisModelHandler.SetActiveModel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelHandler.SetActiveModel",
    "summary": "Sets the active model.\r\n            The AnalysisModelName or ID has to be set."
  },
  {
    "id": "AnalysisModelIssue Constructor ",
    "name": "AnalysisModelIssue Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelIssue class"
  },
  {
    "id": "AnalysisObjects Property ",
    "name": "AnalysisModelIssue.AnalysisObjects Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.AnalysisObjects",
    "summary": "Gets or sets the analysis objects of the issue"
  },
  {
    "id": "Description Property ",
    "name": "AnalysisModelIssue.Description Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.Description",
    "summary": "Gets or sets the description of the issue, translated to the current language"
  },
  {
    "id": "Details Property ",
    "name": "AnalysisModelIssue.Details Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.Details",
    "summary": "Gets or sets the details of the issue, translated to the current language"
  },
  {
    "id": "ModelObjects Property ",
    "name": "AnalysisModelIssue.ModelObjects Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.ModelObjects",
    "summary": "Gets or sets the model objects of the issue"
  },
  {
    "id": "Positions Property ",
    "name": "AnalysisModelIssue.Positions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.Positions",
    "summary": "Gets or sets the positions of the issue"
  },
  {
    "id": "Severity Property ",
    "name": "AnalysisModelIssue.Severity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.Severity",
    "summary": "Gets or sets the issue severity"
  },
  {
    "id": "Type Property ",
    "name": "AnalysisModelIssue.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelIssue.Type",
    "summary": "Gets or sets the issue type"
  },
  {
    "id": "AnalysisModelJobProperties Constructor ",
    "name": "AnalysisModelJobProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelJobProperties class"
  },
  {
    "id": "ApprovedDate Property ",
    "name": "AnalysisModelJobProperties.ApprovedDate Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.ApprovedDate",
    "summary": "The date of the approval."
  },
  {
    "id": "ApprovedName Property ",
    "name": "AnalysisModelJobProperties.ApprovedName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.ApprovedName",
    "summary": "The name of approver."
  },
  {
    "id": "CheckerDate Property ",
    "name": "AnalysisModelJobProperties.CheckerDate Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.CheckerDate",
    "summary": "The date of the checking."
  },
  {
    "id": "CheckerName Property ",
    "name": "AnalysisModelJobProperties.CheckerName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.CheckerName",
    "summary": "The name of the checker."
  },
  {
    "id": "ClientName Property ",
    "name": "AnalysisModelJobProperties.ClientName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.ClientName",
    "summary": "The name of the client."
  },
  {
    "id": "EngineerDate Property ",
    "name": "AnalysisModelJobProperties.EngineerDate Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.EngineerDate",
    "summary": "The date of the engineering."
  },
  {
    "id": "EngineerName Property ",
    "name": "AnalysisModelJobProperties.EngineerName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.EngineerName",
    "summary": "The name of the engineer."
  },
  {
    "id": "JobComment Property ",
    "name": "AnalysisModelJobProperties.JobComment Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.JobComment",
    "summary": "The comment of the job."
  },
  {
    "id": "JobName Property ",
    "name": "AnalysisModelJobProperties.JobName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.JobName",
    "summary": "The name of the job."
  },
  {
    "id": "JobNumber Property ",
    "name": "AnalysisModelJobProperties.JobNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.JobNumber",
    "summary": "The number of the job."
  },
  {
    "id": "PartNumber Property ",
    "name": "AnalysisModelJobProperties.PartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.PartNumber",
    "summary": "The number of the part."
  },
  {
    "id": "ReferenceNumber Property ",
    "name": "AnalysisModelJobProperties.ReferenceNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelJobProperties.ReferenceNumber",
    "summary": "The reference number."
  },
  {
    "id": "AnalysisModelLoad Constructor ",
    "name": "AnalysisModelLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelLoad.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelLoad class"
  },
  {
    "id": "Select Method ",
    "name": "AnalysisModelLoad.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelLoad.Select",
    "summary": "Selects an analysis node.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisModelModalAnalysisProperties Constructor ",
    "name": "AnalysisModelModalAnalysisProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelModalAnalysisProperties class"
  },
  {
    "id": "ModalAnalysisIncludeSelfWeightMass Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisIncludeSelfWeightMass Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisIncludeSelfWeightMass",
    "summary": "Indicates whether selfweight mass is included in the modal analysis."
  },
  {
    "id": "ModalAnalysisMassLoadGroupDirections Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupDirections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupDirections",
    "summary": "The mass load group directions of the modal analysis."
  },
  {
    "id": "ModalAnalysisMassLoadGroupFactors Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupFactors",
    "summary": "The mass load group factors of the modal analysis."
  },
  {
    "id": "ModalAnalysisMassLoadGroupIds Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupIds Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisMassLoadGroupIds",
    "summary": "The mass load group indentifier of the modal analysis."
  },
  {
    "id": "ModalAnalysisMaxFrequency Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisMaxFrequency Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisMaxFrequency",
    "summary": "The modal analysis maximum frequence."
  },
  {
    "id": "ModalAnalysisModeCount Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisModeCount Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisModeCount",
    "summary": "The modal analysis mode count."
  },
  {
    "id": "ModalAnalysisModel Property ",
    "name": "AnalysisModelModalAnalysisProperties.ModalAnalysisModel Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelModalAnalysisProperties.ModalAnalysisModel",
    "summary": "Indicates whether a modal analysis model is used."
  },
  {
    "id": "AnalysisModelOutputProperties Constructor ",
    "name": "AnalysisModelOutputProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelOutputProperties class"
  },
  {
    "id": "OutputAnalysisResults Property ",
    "name": "AnalysisModelOutputProperties.OutputAnalysisResults Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputAnalysisResults",
    "summary": "Indicates whether the analysis results are created."
  },
  {
    "id": "OutputElementForces Property ",
    "name": "AnalysisModelOutputProperties.OutputElementForces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputElementForces",
    "summary": "Indicates whether the element forces are created."
  },
  {
    "id": "OutputElementInformation Property ",
    "name": "AnalysisModelOutputProperties.OutputElementInformation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputElementInformation",
    "summary": "Indicates whether the element information is created."
  },
  {
    "id": "OutputElementJointStresses Property ",
    "name": "AnalysisModelOutputProperties.OutputElementJointStresses Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputElementJointStresses",
    "summary": "Indicates whether the element joint stresses are created."
  },
  {
    "id": "OutputElementJointStressesSolid Property ",
    "name": "AnalysisModelOutputProperties.OutputElementJointStressesSolid Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputElementJointStressesSolid",
    "summary": "Indicates whether the element joint stresses solid is created."
  },
  {
    "id": "OutputEntireSteelTable Property ",
    "name": "AnalysisModelOutputProperties.OutputEntireSteelTable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputEntireSteelTable",
    "summary": "Indicates whether the entire steel table is created."
  },
  {
    "id": "OutputJointCoordinates Property ",
    "name": "AnalysisModelOutputProperties.OutputJointCoordinates Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputJointCoordinates",
    "summary": "Indicates whether the joint coordinates are created."
  },
  {
    "id": "OutputJointDisplacements Property ",
    "name": "AnalysisModelOutputProperties.OutputJointDisplacements Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputJointDisplacements",
    "summary": "Indicates whether the joint displacements are created."
  },
  {
    "id": "OutputMaterialProperties Property ",
    "name": "AnalysisModelOutputProperties.OutputMaterialProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMaterialProperties",
    "summary": "Indicates whether the material properties are created."
  },
  {
    "id": "OutputMemberForces Property ",
    "name": "AnalysisModelOutputProperties.OutputMemberForces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMemberForces",
    "summary": "Indicates whether the member forces are created."
  },
  {
    "id": "OutputMemberInformation Property ",
    "name": "AnalysisModelOutputProperties.OutputMemberInformation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMemberInformation",
    "summary": "Indicates whether the member information is created."
  },
  {
    "id": "OutputMemberProperties Property ",
    "name": "AnalysisModelOutputProperties.OutputMemberProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMemberProperties",
    "summary": "Indicates whether the member properties are created."
  },
  {
    "id": "OutputMemberSectionForces Property ",
    "name": "AnalysisModelOutputProperties.OutputMemberSectionForces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMemberSectionForces",
    "summary": "Indicates whether the member section forces are created."
  },
  {
    "id": "OutputMemberStresses Property ",
    "name": "AnalysisModelOutputProperties.OutputMemberStresses Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputMemberStresses",
    "summary": "Indicates whether the member stresses are created."
  },
  {
    "id": "OutputModeShapes Property ",
    "name": "AnalysisModelOutputProperties.OutputModeShapes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputModeShapes",
    "summary": "Indicates whether the mode shapes are created."
  },
  {
    "id": "OutputStoryDrift Property ",
    "name": "AnalysisModelOutputProperties.OutputStoryDrift Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputStoryDrift",
    "summary": "Indicates whether the story drift is created."
  },
  {
    "id": "OutputSupportInformation Property ",
    "name": "AnalysisModelOutputProperties.OutputSupportInformation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputSupportInformation",
    "summary": "Indicates whether the support information is created."
  },
  {
    "id": "OutputSupportReactions Property ",
    "name": "AnalysisModelOutputProperties.OutputSupportReactions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelOutputProperties.OutputSupportReactions",
    "summary": "Indicates whether the supported reactions are created."
  },
  {
    "id": "AnalysisModelSeismicProperties Constructor ",
    "name": "AnalysisModelSeismicProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelSeismicProperties class"
  },
  {
    "id": "SeismicIncludeSelfWeightMass Property ",
    "name": "AnalysisModelSeismicProperties.SeismicIncludeSelfWeightMass Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties.SeismicIncludeSelfWeightMass",
    "summary": "Indicates whether the selfweight is included."
  },
  {
    "id": "SeismicMassLoadGroupFactors Property ",
    "name": "AnalysisModelSeismicProperties.SeismicMassLoadGroupFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties.SeismicMassLoadGroupFactors",
    "summary": "The factors of the mass load group."
  },
  {
    "id": "SeismicMassLoadGroupIds Property ",
    "name": "AnalysisModelSeismicProperties.SeismicMassLoadGroupIds Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties.SeismicMassLoadGroupIds",
    "summary": "The identifier of the mass load group."
  },
  {
    "id": "SeismicParameters Property ",
    "name": "AnalysisModelSeismicProperties.SeismicParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSeismicProperties.SeismicParameters",
    "summary": "The seismic parameters."
  },
  {
    "id": "AnalysisModelSpectrumProperties Constructor ",
    "name": "AnalysisModelSpectrumProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisModelSpectrumProperties class"
  },
  {
    "id": "SpectrumAcceleration Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumAcceleration Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumAcceleration",
    "summary": "The list of the accelerations of the spectrum."
  },
  {
    "id": "SpectrumASCEf1 Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumASCEf1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumASCEf1",
    "summary": "The ASCEf1 value of the spectrum."
  },
  {
    "id": "SpectrumASCEf2 Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumASCEf2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumASCEf2",
    "summary": "The ASCEf2 value of the spectrum."
  },
  {
    "id": "SpectrumCombination Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumCombination Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumCombination",
    "summary": "The spectrum combination."
  },
  {
    "id": "SpectrumCompositeDampingRatioX Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioX",
    "summary": "The list of the composite damping rations in the X direction of the spectrum."
  },
  {
    "id": "SpectrumCompositeDampingRatioY Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioY",
    "summary": "The list of the composite damping rations in the Y direction of the spectrum."
  },
  {
    "id": "SpectrumCompositeDampingRatioZ Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumCompositeDampingRatioZ",
    "summary": "The list of the composite damping rations in the Z direction of the spectrum."
  },
  {
    "id": "SpectrumDampingFactor Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumDampingFactor Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumDampingFactor",
    "summary": "The damping factor of the spectrum."
  },
  {
    "id": "SpectrumDampingPointID Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumDampingPointID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumDampingPointID",
    "summary": "The list of the damping point identifiers of the spectrum."
  },
  {
    "id": "SpectrumDampingType Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumDampingType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumDampingType",
    "summary": "The type of the spectrum damping."
  },
  {
    "id": "SpectrumInterpolation Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumInterpolation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumInterpolation",
    "summary": "The interpolation of the spectrum."
  },
  {
    "id": "SpectrumMaximumDampingRatio Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumMaximumDampingRatio Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumMaximumDampingRatio",
    "summary": "The maximum damping ratio of the spectrum."
  },
  {
    "id": "SpectrumMinimumDampingRatio Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumMinimumDampingRatio Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumMinimumDampingRatio",
    "summary": "The minimum damping ratio of the spectrum."
  },
  {
    "id": "SpectrumMissingMass Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumMissingMass Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumMissingMass",
    "summary": "The missing mass of the spectrum."
  },
  {
    "id": "SpectrumMissingMassEnable Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumMissingMassEnable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumMissingMassEnable",
    "summary": "Indicates whether the missing mass of the spectrum is enabled."
  },
  {
    "id": "SpectrumModalDampingRatio Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumModalDampingRatio Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumModalDampingRatio",
    "summary": "The list of the modal damping ratios of the spectrum."
  },
  {
    "id": "SpectrumModalDampingRatioEnable Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumModalDampingRatioEnable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumModalDampingRatioEnable",
    "summary": "Indicates whether the damping ratio of the spectrum is enabled."
  },
  {
    "id": "SpectrumModeCount Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumModeCount Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumModeCount",
    "summary": "The count of the spectrum mode."
  },
  {
    "id": "SpectrumPeriod Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumPeriod Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumPeriod",
    "summary": "The list of the periods of the spectrum."
  },
  {
    "id": "SpectrumScale Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumScale Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumScale",
    "summary": "The scale of the spectrum."
  },
  {
    "id": "SpectrumType Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumType",
    "summary": "The type of the spectrum."
  },
  {
    "id": "SpectrumXdirection Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumXdirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumXdirection",
    "summary": "The X direction of the spectrum."
  },
  {
    "id": "SpectrumXdirectionEnable Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumXdirectionEnable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumXdirectionEnable",
    "summary": "Indicates whether the X direction of the spectrum is enabled."
  },
  {
    "id": "SpectrumYdirection Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumYdirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumYdirection",
    "summary": "The Y direction of the spectrum."
  },
  {
    "id": "SpectrumYdirectionEnable Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumYdirectionEnable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumYdirectionEnable",
    "summary": "Indicates whether the Y direction of the spectrum is enabled."
  },
  {
    "id": "SpectrumZdirection Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumZdirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumZdirection",
    "summary": "The Z direction of the spectrum."
  },
  {
    "id": "SpectrumZdirectionEnable Property ",
    "name": "AnalysisModelSpectrumProperties.SpectrumZdirectionEnable Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisModelSpectrumProperties.SpectrumZdirectionEnable",
    "summary": "Indicates whether the Z direction of the spectrum is enabled."
  },
  {
    "id": "AnalysisNode Constructor ",
    "name": "AnalysisNode Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.#ctor",
    "summary": "Initializes a new instance of the AnalysisNode class."
  },
  {
    "id": "CoordinateSystem Property ",
    "name": "AnalysisNode.CoordinateSystem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.CoordinateSystem",
    "summary": "The coordinate system of the analysis node."
  },
  {
    "id": "IsUserNode Property ",
    "name": "AnalysisNode.IsUserNode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.IsUserNode",
    "summary": "Indicates whether the analysis node is a user node."
  },
  {
    "id": "IsUserSupport Property ",
    "name": "AnalysisNode.IsUserSupport Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.IsUserSupport",
    "summary": "Indicates whether the analysis node has a user node."
  },
  {
    "id": "Label Property ",
    "name": "AnalysisNode.Label Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Label",
    "summary": "The label of the analysis node."
  },
  {
    "id": "Position Property ",
    "name": "AnalysisNode.Position Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Position",
    "summary": "The position of the analysis node (in the global coordinate system)."
  },
  {
    "id": "Support Property ",
    "name": "AnalysisNode.Support Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Support",
    "summary": "The support of the analysis node."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisNode.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Delete",
    "summary": "Deletes an analysis node.\r\n            The ID has to be set."
  },
  {
    "id": "GetAnalysisNodeLinks Method ",
    "name": "AnalysisNode.GetAnalysisNodeLinks Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.GetAnalysisNodeLinks",
    "summary": "Get analysis nodelinks connected to node."
  },
  {
    "id": "GetAnalysisParts Method ",
    "name": "AnalysisNode.GetAnalysisParts Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.GetAnalysisParts",
    "summary": "Get analysis parts connected to node."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisNode.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Insert",
    "summary": "Inserts an analysis node.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisNode.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Modify",
    "summary": "Modifies an analysis node.\r\n            The ID has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisNode.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNode.Select",
    "summary": "Selects an analysis node.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisNodeLink Constructor ",
    "name": "AnalysisNodeLink Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.#ctor",
    "summary": "Initializes a new instance of the AnalysisNodeLink class."
  },
  {
    "id": "CoordinateSystem Property ",
    "name": "AnalysisNodeLink.CoordinateSystem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.CoordinateSystem",
    "summary": "The coordinate system of the analysis node link."
  },
  {
    "id": "Disabled Property ",
    "name": "AnalysisNodeLink.Disabled Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.Disabled",
    "summary": "Indicates whether the analysis node link is disabled."
  },
  {
    "id": "EndConnectivity Property ",
    "name": "AnalysisNodeLink.EndConnectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.EndConnectivity",
    "summary": "The end connectivity of the analysis node link."
  },
  {
    "id": "EndNode Property ",
    "name": "AnalysisNodeLink.EndNode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.EndNode",
    "summary": "The end node."
  },
  {
    "id": "IsUserConnectivity Property ",
    "name": "AnalysisNodeLink.IsUserConnectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.IsUserConnectivity",
    "summary": "Indicates whether the analysis node has a user defined connectivity."
  },
  {
    "id": "IsUserNodeLink Property ",
    "name": "AnalysisNodeLink.IsUserNodeLink Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.IsUserNodeLink",
    "summary": "Indicates whether the analysis node is a user node link."
  },
  {
    "id": "OwnerPartIDs Property ",
    "name": "AnalysisNodeLink.OwnerPartIDs Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.OwnerPartIDs",
    "summary": "The list of the identifiers of the owner parts."
  },
  {
    "id": "StartConnectivity Property ",
    "name": "AnalysisNodeLink.StartConnectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.StartConnectivity",
    "summary": "The start connectivity of the analysis node link."
  },
  {
    "id": "StartNode Property ",
    "name": "AnalysisNodeLink.StartNode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.StartNode",
    "summary": "The start node."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisNodeLink.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.Delete",
    "summary": "Deletes a user analysis node link.\r\n            The ID has to be set."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisNodeLink.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.Insert",
    "summary": "Inserts a user analysis node link.\r\n            The AnalysisModelName has to be set.\r\n            The StartNodeID has to be set.\r\n            The EndNodeID has to be set."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisNodeLink.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.Modify",
    "summary": "Modifies an analysis node link.\r\n            The ID has to be set."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisNodeLink.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisNodeLink.Select",
    "summary": "Selects an analysis node link.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisObject Constructor ",
    "name": "AnalysisObject Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.#ctor",
    "summary": "Initializes a new instance of the AnalysisObject class."
  },
  {
    "id": "AnalysisModelName Property ",
    "name": "AnalysisObject.AnalysisModelName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.AnalysisModelName",
    "summary": "Gets or sets the analysis model name."
  },
  {
    "id": "AnalysisObjectType Property ",
    "name": "AnalysisObject.AnalysisObjectType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.AnalysisObjectType",
    "summary": "Gets or sets the type of the analysis object."
  },
  {
    "id": "FatherObject2ID Property ",
    "name": "AnalysisObject.FatherObject2ID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.FatherObject2ID",
    "summary": "Gets or sets the identifier of the father part."
  },
  {
    "id": "FatherObject2Type Property ",
    "name": "AnalysisObject.FatherObject2Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.FatherObject2Type",
    "summary": "Gets or sets the type of the father object."
  },
  {
    "id": "FatherObjectID Property ",
    "name": "AnalysisObject.FatherObjectID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.FatherObjectID",
    "summary": "Gets or sets the identifier of the father part."
  },
  {
    "id": "FatherObjectType Property ",
    "name": "AnalysisObject.FatherObjectType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.FatherObjectType",
    "summary": "Gets or sets the type of the father object."
  },
  {
    "id": "ID Property ",
    "name": "AnalysisObject.ID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.ID",
    "summary": "Gets or sets the identifier of the analysis object."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisObject.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObject.Select",
    "summary": "Selects an analysis object from the database."
  },
  {
    "id": "Current Property ",
    "name": "AnalysisObjectEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.Current",
    "summary": "Gets the current analysis object in the enumerator."
  },
  {
    "id": "CurrentItem Property ",
    "name": "AnalysisObjectEnumerator.CurrentItem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.CurrentItem",
    "summary": "Gets or sets the index of the current item."
  },
  {
    "id": "CurrentSelected Property ",
    "name": "AnalysisObjectEnumerator.CurrentSelected Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.CurrentSelected",
    "summary": "Gets or sets the currently selected item."
  },
  {
    "id": "SelectInstances Property ",
    "name": "AnalysisObjectEnumerator.SelectInstances Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.SelectInstances",
    "summary": "Gets or sets a value indicating whether the instance's Select() is called when the \"Current\" item is asked from the enumerator.\r\n            The user can set this to \"false\" if no members are ever asked from the instance. This is the case\r\n            when e.g. asking only a report property from this identifier. WARNING: normally the user should not change this value."
  },
  {
    "id": "GetEnumerator Method ",
    "name": "AnalysisObjectEnumerator.GetEnumerator Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.GetEnumerator",
    "summary": "Returns a pointer to the existing instance of the class.\r\n            This allows the usage of the foreach statement with AnalysisObjectEnumerator."
  },
  {
    "id": "GetSize Method ",
    "name": "AnalysisObjectEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "AnalysisObjectEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Refresh Method ",
    "name": "AnalysisObjectEnumerator.Refresh Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.Refresh",
    "summary": "Refreshes the enumerator with latest data at database."
  },
  {
    "id": "Reset Method ",
    "name": "AnalysisObjectEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "GetAllObjects Method ",
    "name": "AnalysisObjectSelector.GetAllObjects Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectSelector.GetAllObjects",
    "summary": "Returns an enumerator of all the model objects in the current model.\r\n            NOT YET IMPLEMENTED."
  },
  {
    "id": "GetAllObjectsWithType Method ",
    "name": "AnalysisObjectSelector.GetAllObjectsWithType Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectSelector.GetAllObjectsWithType",
    "summary": "Returns an enumerator of all the model objects in the current model with the given type."
  },
  {
    "id": "GetAnalysisModels Method ",
    "name": "AnalysisObjectSelector.GetAnalysisModels Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectSelector.GetAnalysisModels",
    "summary": "Returns an enumerator of all the analysis model objects."
  },
  {
    "id": "GetSelectedObjects Method ",
    "name": "AnalysisObjectSelector.GetSelectedObjects Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisObjectSelector.GetSelectedObjects",
    "summary": "Returns an enumerator of all the selected model objects in the current model.\r\n            NOT YET IMPLEMENTED."
  },
  {
    "id": "AnalysisPart Constructor ",
    "name": "AnalysisPart Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.#ctor",
    "summary": "Initializes a new instance of the AnalysisPart class."
  },
  {
    "id": "AnalysisAreas Property ",
    "name": "AnalysisPart.AnalysisAreas Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisAreas",
    "summary": "The analysis areas of the analysis part."
  },
  {
    "id": "AnalysisBars Property ",
    "name": "AnalysisPart.AnalysisBars Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisBars",
    "summary": "The analysis bars of the analysis part."
  },
  {
    "id": "AnalysisDesignCode Property ",
    "name": "AnalysisPart.AnalysisDesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisDesignCode",
    "summary": "The analysis design code of the analysis part."
  },
  {
    "id": "AnalysisPartAnalysisProperties Property ",
    "name": "AnalysisPart.AnalysisPartAnalysisProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartAnalysisProperties",
    "summary": "The analysis part analysis properties."
  },
  {
    "id": "AnalysisPartAreaAttributes Property ",
    "name": "AnalysisPart.AnalysisPartAreaAttributes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartAreaAttributes",
    "summary": "The analysis part area attributes."
  },
  {
    "id": "AnalysisPartBarAttributes Property ",
    "name": "AnalysisPart.AnalysisPartBarAttributes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartBarAttributes",
    "summary": "The analysis part bar attributes."
  },
  {
    "id": "AnalysisPartCompositeProperties Property ",
    "name": "AnalysisPart.AnalysisPartCompositeProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartCompositeProperties",
    "summary": "The analysis part composite properties."
  },
  {
    "id": "AnalysisPartLoadingProperties Property ",
    "name": "AnalysisPart.AnalysisPartLoadingProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartLoadingProperties",
    "summary": "The analysis part loading properties."
  },
  {
    "id": "AnalysisPartPositionProperties Property ",
    "name": "AnalysisPart.AnalysisPartPositionProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartPositionProperties",
    "summary": "The analysis part position properties."
  },
  {
    "id": "AnalysisPartSpanningProperties Property ",
    "name": "AnalysisPart.AnalysisPartSpanningProperties Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisPartSpanningProperties",
    "summary": "The analysis part spanning properties."
  },
  {
    "id": "AnalysisType Property ",
    "name": "AnalysisPart.AnalysisType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisType",
    "summary": "The analysis type of the analysis part."
  },
  {
    "id": "AnalysisVolumes Property ",
    "name": "AnalysisPart.AnalysisVolumes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.AnalysisVolumes",
    "summary": "The analysis volumes of the analysis part."
  },
  {
    "id": "CoordinateSystem Property ",
    "name": "AnalysisPart.CoordinateSystem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.CoordinateSystem",
    "summary": "The coordinate system of the analysis part."
  },
  {
    "id": "Curvature Property ",
    "name": "AnalysisPart.Curvature Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Curvature",
    "summary": "The curvature of the analysis part."
  },
  {
    "id": "LoadBearingOrder Property ",
    "name": "AnalysisPart.LoadBearingOrder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.LoadBearingOrder",
    "summary": "The load bearing order."
  },
  {
    "id": "Material Property ",
    "name": "AnalysisPart.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Material",
    "summary": "The material of the analysis part."
  },
  {
    "id": "OverrideProfile Property ",
    "name": "AnalysisPart.OverrideProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.OverrideProfile",
    "summary": "The override profile of the analysis part.\r\n            In case of tapered profile, only the name is available,\r\n            and more details are available in the start/end properties of the analysis members."
  },
  {
    "id": "PartID Property ",
    "name": "AnalysisPart.PartID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.PartID",
    "summary": "The identifier of the physical part."
  },
  {
    "id": "PartName Property ",
    "name": "AnalysisPart.PartName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.PartName",
    "summary": "The name of the physical part."
  },
  {
    "id": "PartType Property ",
    "name": "AnalysisPart.PartType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.PartType",
    "summary": "The type of the physical part."
  },
  {
    "id": "Profile Property ",
    "name": "AnalysisPart.Profile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Profile",
    "summary": "The profile of the analysis part. Note: OverrideProfile may exist to replace this.\r\n            In case of tapered profile, only the name is available, ID is 0 and values are not returned.\r\n            More details are available in the start/end properties of the analysis members."
  },
  {
    "id": "SnapDistance Property ",
    "name": "AnalysisPart.SnapDistance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.SnapDistance",
    "summary": "The snap distance. Use 0.0 for manual connectivity, positive value for automatic connectivity."
  },
  {
    "id": "UpDirection Property ",
    "name": "AnalysisPart.UpDirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.UpDirection",
    "summary": "The up direction of the analysis part (in the global coordinate system).\r\n            The axis vector (connecting member end nodes) and the up direction vector define the local XY plane of the member.\r\n            The local Z can be calculated as localZ = localX x UpDirection (cross product),\r\n            and after this localY = localZ x localX (cross product)."
  },
  {
    "id": "Add Method ",
    "name": "AnalysisPart.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Add",
    "summary": "Adds an analysis area to the analysis part."
  },
  {
    "id": "Add Method (AnalysisArea)",
    "name": "AnalysisPart.Add Method (AnalysisArea)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Adds an analysis area to the analysis part."
  },
  {
    "id": "Add Method (AnalysisBar)",
    "name": "AnalysisPart.Add Method (AnalysisBar)",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis",
    "summary": "Adds an analysis bar to the analysis part."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisPart.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Delete",
    "summary": "Deletes an analysis part.\r\n            The method is not implemented."
  },
  {
    "id": "DeleteAnalysisPart Method ",
    "name": "AnalysisPart.DeleteAnalysisPart Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.DeleteAnalysisPart",
    "summary": "Deletes the analysis part by ID."
  },
  {
    "id": "GetAnalysisAreas Method ",
    "name": "AnalysisPart.GetAnalysisAreas Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.GetAnalysisAreas",
    "summary": "Gets the analysis areas of the analysis part."
  },
  {
    "id": "GetAnalysisBars Method ",
    "name": "AnalysisPart.GetAnalysisBars Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.GetAnalysisBars",
    "summary": "Gets the analysis bars of the analysis part."
  },
  {
    "id": "GetAnalysisVolumes Method ",
    "name": "AnalysisPart.GetAnalysisVolumes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.GetAnalysisVolumes",
    "summary": "Gets the analysis volumes of the analysis part."
  },
  {
    "id": "GetMainParts Method ",
    "name": "AnalysisPart.GetMainParts Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.GetMainParts",
    "summary": "Get the main analysis parts of this analysis part.\r\n            There are no main analysis parts if this is not a sub analysis part."
  },
  {
    "id": "GetSubParts Method ",
    "name": "AnalysisPart.GetSubParts Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.GetSubParts",
    "summary": "Get the sub analysis parts of this analysis part.\r\n            There are no sub analysis parts if this is not a main analysis part."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisPart.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Insert",
    "summary": "Inserts a new analysis part into the Tekla Structures model.\r\n            The AnalysisModelName has to be set."
  },
  {
    "id": "IsMainPart Method ",
    "name": "AnalysisPart.IsMainPart Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.IsMainPart",
    "summary": "Check if this analysis part is a main analysis part (has sub analysis parts)."
  },
  {
    "id": "IsSubPart Method ",
    "name": "AnalysisPart.IsSubPart Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.IsSubPart",
    "summary": "Check if this analysis part is a sub analysis part."
  },
  {
    "id": "Modify Method ",
    "name": "AnalysisPart.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Modify",
    "summary": "Modifies an analysis part.\r\n            The ID, or the PartID and the AnalysisModelName, has to be set."
  },
  {
    "id": "MovePosition Method ",
    "name": "AnalysisPart.MovePosition Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.MovePosition",
    "summary": "Move analysis position."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisPart.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPart.Select",
    "summary": "Selects an analysis part.\r\n            The ID, or the PartID and the AnalysisModelName, has to be set."
  },
  {
    "id": "AnalysisPartAnalysisProperties Constructor ",
    "name": "AnalysisPartAnalysisProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartAnalysisProperties class"
  },
  {
    "id": "AnalysisClass Property ",
    "name": "AnalysisPartAnalysisProperties.AnalysisClass Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.AnalysisClass",
    "summary": "The analysis class of the analysis part."
  },
  {
    "id": "BuiltupMode Property ",
    "name": "AnalysisPartAnalysisProperties.BuiltupMode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.BuiltupMode",
    "summary": "The builtup mode of the analysis part."
  },
  {
    "id": "DesignGroup Property ",
    "name": "AnalysisPartAnalysisProperties.DesignGroup Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.DesignGroup",
    "summary": "The design group of the analysis part."
  },
  {
    "id": "PhysicalFreezed Property ",
    "name": "AnalysisPartAnalysisProperties.PhysicalFreezed Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAnalysisProperties.PhysicalFreezed",
    "summary": "Indicates whether the physical part has been freezed."
  },
  {
    "id": "AnalysisPartAreaAttributes Constructor ",
    "name": "AnalysisPartAreaAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartAreaAttributes class"
  },
  {
    "id": "AreaElementSizeHoles Property ",
    "name": "AnalysisPartAreaAttributes.AreaElementSizeHoles Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaElementSizeHoles",
    "summary": "Gets or sets the area element size holes."
  },
  {
    "id": "AreaElementSizeX Property ",
    "name": "AnalysisPartAreaAttributes.AreaElementSizeX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaElementSizeX",
    "summary": "Gets or sets the area element size X."
  },
  {
    "id": "AreaElementSizeY Property ",
    "name": "AnalysisPartAreaAttributes.AreaElementSizeY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaElementSizeY",
    "summary": "Gets or sets the area element size Y."
  },
  {
    "id": "AreaElementType Property ",
    "name": "AnalysisPartAreaAttributes.AreaElementType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaElementType",
    "summary": "Gets or sets the area element type."
  },
  {
    "id": "AreaRotationXY Property ",
    "name": "AnalysisPartAreaAttributes.AreaRotationXY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaRotationXY",
    "summary": "Gets or sets the area rotation XY."
  },
  {
    "id": "AreaStartNumber Property ",
    "name": "AnalysisPartAreaAttributes.AreaStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaStartNumber",
    "summary": "Gets or sets the start number of the area."
  },
  {
    "id": "AreaSupport Property ",
    "name": "AnalysisPartAreaAttributes.AreaSupport Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaSupport",
    "summary": "Gets or sets the area support."
  },
  {
    "id": "AreaSupportType Property ",
    "name": "AnalysisPartAreaAttributes.AreaSupportType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.AreaSupportType",
    "summary": "Gets or sets the area support type."
  },
  {
    "id": "MinimumAreaHoleSize Property ",
    "name": "AnalysisPartAreaAttributes.MinimumAreaHoleSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.MinimumAreaHoleSize",
    "summary": "Gets or sets the minimum area hole size."
  },
  {
    "id": "RigidDiaphragmFilterName Property ",
    "name": "AnalysisPartAreaAttributes.RigidDiaphragmFilterName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.RigidDiaphragmFilterName",
    "summary": "Gets or sets the filter name of the rigid diaphragm."
  },
  {
    "id": "UseSimpleArea Property ",
    "name": "AnalysisPartAreaAttributes.UseSimpleArea Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartAreaAttributes.UseSimpleArea",
    "summary": "Gets or sets a value indicating whether simple areas are used."
  },
  {
    "id": "AnalysisPartBarAttributes Constructor ",
    "name": "AnalysisPartBarAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartBarAttributes class"
  },
  {
    "id": "BarEndCondition Property ",
    "name": "AnalysisPartBarAttributes.BarEndCondition Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.BarEndCondition",
    "summary": "The bar end condition."
  },
  {
    "id": "BarStartCondition Property ",
    "name": "AnalysisPartBarAttributes.BarStartCondition Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.BarStartCondition",
    "summary": "The bar start condition."
  },
  {
    "id": "BarStartNumber Property ",
    "name": "AnalysisPartBarAttributes.BarStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.BarStartNumber",
    "summary": "The start number of the bar."
  },
  {
    "id": "ForceStraightSegments Property ",
    "name": "AnalysisPartBarAttributes.ForceStraightSegments Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.ForceStraightSegments",
    "summary": "The straight force segments."
  },
  {
    "id": "MemberStartNumber Property ",
    "name": "AnalysisPartBarAttributes.MemberStartNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.MemberStartNumber",
    "summary": "The start number of the member."
  },
  {
    "id": "OverrideProfileName Property ",
    "name": "AnalysisPartBarAttributes.OverrideProfileName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.OverrideProfileName",
    "summary": "The override profile name."
  },
  {
    "id": "SplitDistances Property ",
    "name": "AnalysisPartBarAttributes.SplitDistances Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.SplitDistances",
    "summary": "The split distances."
  },
  {
    "id": "SplitNodeCount Property ",
    "name": "AnalysisPartBarAttributes.SplitNodeCount Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartBarAttributes.SplitNodeCount",
    "summary": "The count of the split node."
  },
  {
    "id": "AnalysisPartCompositeProperties Constructor ",
    "name": "AnalysisPartCompositeProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartCompositeProperties class"
  },
  {
    "id": "CompositeBeamSlabMaterial Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamSlabMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamSlabMaterial",
    "summary": "The composite beam slab material."
  },
  {
    "id": "CompositeBeamSlabThickness Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamSlabThickness Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamSlabThickness",
    "summary": "The composite beam slab thickness."
  },
  {
    "id": "CompositeBeamType Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamType",
    "summary": "The composite beam type."
  },
  {
    "id": "CompositeBeamWidthFromSpanFactor Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthFromSpanFactor Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthFromSpanFactor",
    "summary": "The composite beam width from span factor."
  },
  {
    "id": "CompositeBeamWidthLeft Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthLeft Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthLeft",
    "summary": "The composite beam width left."
  },
  {
    "id": "CompositeBeamWidthModeLeft Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthModeLeft Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthModeLeft",
    "summary": "The composite beam width mode left."
  },
  {
    "id": "CompositeBeamWidthModeRight Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthModeRight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthModeRight",
    "summary": "The composite beam width mode right."
  },
  {
    "id": "CompositeBeamWidthRight Property ",
    "name": "AnalysisPartCompositeProperties.CompositeBeamWidthRight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartCompositeProperties.CompositeBeamWidthRight",
    "summary": "The composite beam width right."
  },
  {
    "id": "AnalysisPartEnd Constructor ",
    "name": "AnalysisPartEnd Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartEnd class"
  },
  {
    "id": "Condition Property ",
    "name": "AnalysisPartEnd.Condition Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.Condition",
    "summary": "The condition of the part end."
  },
  {
    "id": "Connectivity Property ",
    "name": "AnalysisPartEnd.Connectivity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.Connectivity",
    "summary": "The connectivity of the part end."
  },
  {
    "id": "Eccentricity Property ",
    "name": "AnalysisPartEnd.Eccentricity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.Eccentricity",
    "summary": "The eccentricity of the part end (in the local coordinate system)."
  },
  {
    "id": "EccentricityMode Property ",
    "name": "AnalysisPartEnd.EccentricityMode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.EccentricityMode",
    "summary": "The eccentricity mode of the part end."
  },
  {
    "id": "Support Property ",
    "name": "AnalysisPartEnd.Support Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.Support",
    "summary": "The support of the part end."
  },
  {
    "id": "SupportCoordSystem Property ",
    "name": "AnalysisPartEnd.SupportCoordSystem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartEnd.SupportCoordSystem",
    "summary": "The coordinate system of the support."
  },
  {
    "id": "AnalysisPartLoadingProperties Constructor ",
    "name": "AnalysisPartLoadingProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartLoadingProperties class"
  },
  {
    "id": "LoadGenerationAutoCreateFixedSupports Property ",
    "name": "AnalysisPartLoadingProperties.LoadGenerationAutoCreateFixedSupports Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.LoadGenerationAutoCreateFixedSupports",
    "summary": "Indicates whether fixed supports are automatically created."
  },
  {
    "id": "LoadGenerationGroupIdentifierFactors Property ",
    "name": "AnalysisPartLoadingProperties.LoadGenerationGroupIdentifierFactors Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.LoadGenerationGroupIdentifierFactors",
    "summary": "The load generation group identifier factors."
  },
  {
    "id": "LoadGenerationPartNames Property ",
    "name": "AnalysisPartLoadingProperties.LoadGenerationPartNames Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.LoadGenerationPartNames",
    "summary": "The load generation part names."
  },
  {
    "id": "LoadGenerationPartNamesInclude Property ",
    "name": "AnalysisPartLoadingProperties.LoadGenerationPartNamesInclude Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.LoadGenerationPartNamesInclude",
    "summary": "Indicates whether part names are included in the load generation."
  },
  {
    "id": "LoadGenerationSelfWeight Property ",
    "name": "AnalysisPartLoadingProperties.LoadGenerationSelfWeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartLoadingProperties.LoadGenerationSelfWeight",
    "summary": "Indicates whether the selfweight load is generated."
  },
  {
    "id": "AnalysisPartPositionProperties Constructor ",
    "name": "AnalysisPartPositionProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartPositionProperties class"
  },
  {
    "id": "AxisCoordinateX Property ",
    "name": "AnalysisPartPositionProperties.AxisCoordinateX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisCoordinateX",
    "summary": "The axis coordinate in the X direction."
  },
  {
    "id": "AxisCoordinateY Property ",
    "name": "AnalysisPartPositionProperties.AxisCoordinateY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisCoordinateY",
    "summary": "The axis coordinate in the Y direction."
  },
  {
    "id": "AxisCoordinateZ Property ",
    "name": "AnalysisPartPositionProperties.AxisCoordinateZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisCoordinateZ",
    "summary": "The axis coordinate in the Z direction."
  },
  {
    "id": "AxisLocation Property ",
    "name": "AnalysisPartPositionProperties.AxisLocation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisLocation",
    "summary": "The axis location of the analysis part."
  },
  {
    "id": "AxisModifierX Property ",
    "name": "AnalysisPartPositionProperties.AxisModifierX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisModifierX",
    "summary": "The axis modifier in the X direction."
  },
  {
    "id": "AxisModifierY Property ",
    "name": "AnalysisPartPositionProperties.AxisModifierY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisModifierY",
    "summary": "The axis modifier in the Y direction."
  },
  {
    "id": "AxisModifierZ Property ",
    "name": "AnalysisPartPositionProperties.AxisModifierZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisModifierZ",
    "summary": "The axis modifier in the Z direction."
  },
  {
    "id": "AxisOffset Property ",
    "name": "AnalysisPartPositionProperties.AxisOffset Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.AxisOffset",
    "summary": "The axis offset of the analysis part (in the global coordinate system)."
  },
  {
    "id": "KeepAxis Property ",
    "name": "AnalysisPartPositionProperties.KeepAxis Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.KeepAxis",
    "summary": "The keep axis setting of the analysis part."
  },
  {
    "id": "LongitudinalOffsetMode Property ",
    "name": "AnalysisPartPositionProperties.LongitudinalOffsetMode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartPositionProperties.LongitudinalOffsetMode",
    "summary": "The longitudinal offset mode."
  },
  {
    "id": "AnalysisPartSpanningProperties Constructor ",
    "name": "AnalysisPartSpanningProperties Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartSpanningProperties.#ctor",
    "summary": "Initializes a new instance of the AnalysisPartSpanningProperties class"
  },
  {
    "id": "SpanningDirection Property ",
    "name": "AnalysisPartSpanningProperties.SpanningDirection Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartSpanningProperties.SpanningDirection",
    "summary": "The spanning direction (in the global coordinate system)."
  },
  {
    "id": "SpanningType Property ",
    "name": "AnalysisPartSpanningProperties.SpanningType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPartSpanningProperties.SpanningType",
    "summary": "The spanning type."
  },
  {
    "id": "AnalysisPosition Constructor ",
    "name": "AnalysisPosition Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition.#ctor",
    "summary": "Initializes a new instance of the AnalysisPosition class"
  },
  {
    "id": "Node Property ",
    "name": "AnalysisPosition.Node Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition.Node",
    "summary": "The node of the position."
  },
  {
    "id": "Type Property ",
    "name": "AnalysisPosition.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition.Type",
    "summary": "The type of the position."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisPosition.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisPosition.Select",
    "summary": "Selects an analysis position."
  },
  {
    "id": "AnalysisRestraintData Constructor ",
    "name": "AnalysisRestraintData Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.#ctor",
    "summary": "Creates a new instance of an analysis restraint data."
  },
  {
    "id": "LocalCoordinateSystem Property ",
    "name": "AnalysisRestraintData.LocalCoordinateSystem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.LocalCoordinateSystem",
    "summary": "The local coordinate system."
  },
  {
    "id": "ReleaseType Property ",
    "name": "AnalysisRestraintData.ReleaseType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.ReleaseType",
    "summary": "The release type."
  },
  {
    "id": "RxSpring Property ",
    "name": "AnalysisRestraintData.RxSpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RxSpring",
    "summary": "The rotation in the X-axis direction (Nmm/rad)."
  },
  {
    "id": "RxType Property ",
    "name": "AnalysisRestraintData.RxType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RxType",
    "summary": "The restraint type for the rotation in the X-axis direction."
  },
  {
    "id": "RySpring Property ",
    "name": "AnalysisRestraintData.RySpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RySpring",
    "summary": "The rotation in the Y-axis direction (Nmm/rad)."
  },
  {
    "id": "RyType Property ",
    "name": "AnalysisRestraintData.RyType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RyType",
    "summary": "The restraint type for the rotation in the Y-axis direction."
  },
  {
    "id": "RzSpring Property ",
    "name": "AnalysisRestraintData.RzSpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RzSpring",
    "summary": "The rotation in the Z-axis direction (Nmm/rad)."
  },
  {
    "id": "RzType Property ",
    "name": "AnalysisRestraintData.RzType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.RzType",
    "summary": "The restraint type for the rotation in the Z-axis direction."
  },
  {
    "id": "Supported Property ",
    "name": "AnalysisRestraintData.Supported Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.Supported",
    "summary": "The support condition."
  },
  {
    "id": "UxSpring Property ",
    "name": "AnalysisRestraintData.UxSpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UxSpring",
    "summary": "The displacement in the X-axis direction (N/mm)."
  },
  {
    "id": "UxType Property ",
    "name": "AnalysisRestraintData.UxType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UxType",
    "summary": "The restraint type for the displacement in the X-axis direction."
  },
  {
    "id": "UySpring Property ",
    "name": "AnalysisRestraintData.UySpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UySpring",
    "summary": "The displacement in the Y-axis direction (N/mm)."
  },
  {
    "id": "UyType Property ",
    "name": "AnalysisRestraintData.UyType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UyType",
    "summary": "The restraint type for the displacement in the Y-axis direction."
  },
  {
    "id": "UzSpring Property ",
    "name": "AnalysisRestraintData.UzSpring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UzSpring",
    "summary": "The displacement in the Z-axis direction (N/mm)."
  },
  {
    "id": "UzType Property ",
    "name": "AnalysisRestraintData.UzType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraintData.UzType",
    "summary": "The restraint type for the displacement in the Z-axis direction."
  },
  {
    "id": "AnalysisRestraints Constructor ",
    "name": "AnalysisRestraints Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraints.#ctor",
    "summary": "Creates a new analysis restraints instance."
  },
  {
    "id": "End Property ",
    "name": "AnalysisRestraints.End Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraints.End",
    "summary": "Data related to the second part end."
  },
  {
    "id": "Start Property ",
    "name": "AnalysisRestraints.Start Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRestraints.Start",
    "summary": "Data related to the first part end."
  },
  {
    "id": "AnalysisResult Constructor ",
    "name": "AnalysisResult Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.#ctor",
    "summary": "Creates a new analysis result instance."
  },
  {
    "id": "LoadCase Property ",
    "name": "AnalysisResult.LoadCase Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCase",
    "summary": "The load case.\r\n            The real load cases have positive values 1, 2, 3, ...\r\n            For min/max queries LoadCaseForMinMaxEnum can be used."
  },
  {
    "id": "LoadCaseInfo Property ",
    "name": "AnalysisResult.LoadCaseInfo Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCaseInfo",
    "summary": "The load case info (optional, max length 128)."
  },
  {
    "id": "LoadCaseName Property ",
    "name": "AnalysisResult.LoadCaseName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCaseName",
    "summary": "The load case name (max length 64)."
  },
  {
    "id": "LoadCaseType Property ",
    "name": "AnalysisResult.LoadCaseType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.LoadCaseType",
    "summary": "The load case type."
  },
  {
    "id": "ModId Property ",
    "name": "AnalysisResult.ModId Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ModId",
    "summary": "The time stamp of the result."
  },
  {
    "id": "ObjectId Property ",
    "name": "AnalysisResult.ObjectId Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ObjectId",
    "summary": "The identifier of the object.\r\n            If ObjectType is OBJECT_TYPE_PART, ObjectId is (physical) part ID.\r\n            If ObjectType is OBJECT_TYPE_MEMBER, ObjectId is the bar number when analysis bars are used in integration,\r\n            otherwise ObjectId is the member number.\r\n            If ObjectType is OBJECT_TYPE_AREA, ObjectId is the area number."
  },
  {
    "id": "ObjectType Property ",
    "name": "AnalysisResult.ObjectType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ObjectType",
    "summary": "The object type. In result query the only supported type is the physical member (the part)."
  },
  {
    "id": "Position Property ",
    "name": "AnalysisResult.Position Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.Position",
    "summary": "The position on the part's START/END/..."
  },
  {
    "id": "PositionCoordX Property ",
    "name": "AnalysisResult.PositionCoordX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.PositionCoordX",
    "summary": "Global coordinate X (mm) when inserting result.\r\n            Local (part) coordinate X (mm) when getting results."
  },
  {
    "id": "PositionCoordY Property ",
    "name": "AnalysisResult.PositionCoordY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.PositionCoordY",
    "summary": "Global coordinate Y (mm) when inserting result.\r\n            Local (part) coordinate Y (mm) when getting results."
  },
  {
    "id": "PositionCoordZ Property ",
    "name": "AnalysisResult.PositionCoordZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.PositionCoordZ",
    "summary": "Global coordinate Z (mm) when inserting result.\r\n            Local (part) coordinate Z (mm) when getting results."
  },
  {
    "id": "PositionTolerance Property ",
    "name": "AnalysisResult.PositionTolerance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.PositionTolerance",
    "summary": "The position's coordinate tolerance."
  },
  {
    "id": "Value Property ",
    "name": "AnalysisResult.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.Value",
    "summary": "The result value."
  },
  {
    "id": "ValueType Property ",
    "name": "AnalysisResult.ValueType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.ValueType",
    "summary": "The result value type."
  },
  {
    "id": "Delete Method ",
    "name": "AnalysisResult.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.Delete",
    "summary": "Delete analysis results by the given key."
  },
  {
    "id": "DeleteAll Method ",
    "name": "AnalysisResult.DeleteAll Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.DeleteAll",
    "summary": "Delete all analysis results."
  },
  {
    "id": "DeleteLoadcase Method ",
    "name": "AnalysisResult.DeleteLoadcase Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.DeleteLoadcase",
    "summary": "Delete analysis results by load case."
  },
  {
    "id": "GetResultObjectIds Method ",
    "name": "AnalysisResult.GetResultObjectIds Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.GetResultObjectIds",
    "summary": "Get ID numbers of objects with results."
  },
  {
    "id": "GetResults Method ",
    "name": "AnalysisResult.GetResults Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.GetResults",
    "summary": "Get analysis results."
  },
  {
    "id": "Insert Method ",
    "name": "AnalysisResult.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.Insert",
    "summary": "Insert analysis result. Results are always stored to physical parts.\r\n            When OBJECT_TYPE_MEMBER or OBJECT_TYPE_AREA is used the analysis model must be active.\r\n            All results for given part must be inserted within one commit (CommitChanges),\r\n            older results of this part are removed automatically."
  },
  {
    "id": "QueryAnalysisResult Method ",
    "name": "AnalysisResult.QueryAnalysisResult Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResult.QueryAnalysisResult",
    "summary": "Queries an analysis result."
  },
  {
    "id": "AnalysisResultPositions Constructor ",
    "name": "AnalysisResultPositions Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.#ctor",
    "summary": "Creates a new analysis result positions instance."
  },
  {
    "id": "aPositions Property ",
    "name": "AnalysisResultPositions.aPositions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.aPositions",
    "summary": "The position types."
  },
  {
    "id": "aPositionsX Property ",
    "name": "AnalysisResultPositions.aPositionsX Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.aPositionsX",
    "summary": "The X coordinates of the positions."
  },
  {
    "id": "aPositionsY Property ",
    "name": "AnalysisResultPositions.aPositionsY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.aPositionsY",
    "summary": "The Y coordinates of the positions."
  },
  {
    "id": "aPositionsZ Property ",
    "name": "AnalysisResultPositions.aPositionsZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.aPositionsZ",
    "summary": "The Z coordinates of the positions."
  },
  {
    "id": "nPositions Property ",
    "name": "AnalysisResultPositions.nPositions Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.nPositions",
    "summary": "The number of returned positions."
  },
  {
    "id": "ObjectId Property ",
    "name": "AnalysisResultPositions.ObjectId Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.ObjectId",
    "summary": "The identifier of the object."
  },
  {
    "id": "ObjectType Property ",
    "name": "AnalysisResultPositions.ObjectType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.ObjectType",
    "summary": "The object type. In result query the only supported type is the physical member (the part)."
  },
  {
    "id": "GetResultPositions Method ",
    "name": "AnalysisResultPositions.GetResultPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisResultPositions.GetResultPositions",
    "summary": "Gets the analysis result positions."
  },
  {
    "id": "AnalysisRigidDiaphragm Constructor ",
    "name": "AnalysisRigidDiaphragm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.#ctor",
    "summary": "Initializes a new instance of the AnalysisRigidDiaphragm class"
  },
  {
    "id": "ExtremaMaximum Property ",
    "name": "AnalysisRigidDiaphragm.ExtremaMaximum Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.ExtremaMaximum",
    "summary": "The maximum of the extrema (in the global coordinate system)."
  },
  {
    "id": "ExtremaMinimum Property ",
    "name": "AnalysisRigidDiaphragm.ExtremaMinimum Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.ExtremaMinimum",
    "summary": "The minimum of the extrema (in the global coordinate system)."
  },
  {
    "id": "MasterNodeID Property ",
    "name": "AnalysisRigidDiaphragm.MasterNodeID Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.MasterNodeID",
    "summary": "The identifier of the master node."
  },
  {
    "id": "PartIDs Property ",
    "name": "AnalysisRigidDiaphragm.PartIDs Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.PartIDs",
    "summary": "The part identifier."
  },
  {
    "id": "SlaveNodeIDs Property ",
    "name": "AnalysisRigidDiaphragm.SlaveNodeIDs Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.SlaveNodeIDs",
    "summary": "The slave node identifier."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisRigidDiaphragm.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisRigidDiaphragm.Select",
    "summary": "Selects an analysis rigid diaphragm.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisSubSection Constructor ",
    "name": "AnalysisSubSection Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.#ctor",
    "summary": "Initializes a new instance of the AnalysisSubSection class"
  },
  {
    "id": "B Property ",
    "name": "AnalysisSubSection.B Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.B",
    "summary": "The B value."
  },
  {
    "id": "B1 Property ",
    "name": "AnalysisSubSection.B1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.B1",
    "summary": "The B1 value."
  },
  {
    "id": "B2 Property ",
    "name": "AnalysisSubSection.B2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.B2",
    "summary": "The B2 value."
  },
  {
    "id": "B3 Property ",
    "name": "AnalysisSubSection.B3 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.B3",
    "summary": "The B3 value."
  },
  {
    "id": "B4 Property ",
    "name": "AnalysisSubSection.B4 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.B4",
    "summary": "The B4 value."
  },
  {
    "id": "H Property ",
    "name": "AnalysisSubSection.H Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.H",
    "summary": "The H value."
  },
  {
    "id": "H1 Property ",
    "name": "AnalysisSubSection.H1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.H1",
    "summary": "The H1 value."
  },
  {
    "id": "H2 Property ",
    "name": "AnalysisSubSection.H2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.H2",
    "summary": "The H2 value."
  },
  {
    "id": "IsHole Property ",
    "name": "AnalysisSubSection.IsHole Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.IsHole",
    "summary": "Defines whether the subsection is a hole."
  },
  {
    "id": "Material Property ",
    "name": "AnalysisSubSection.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.Material",
    "summary": "The material of the subsection."
  },
  {
    "id": "OffsetAngle Property ",
    "name": "AnalysisSubSection.OffsetAngle Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.OffsetAngle",
    "summary": "The offset angle."
  },
  {
    "id": "OffsetY Property ",
    "name": "AnalysisSubSection.OffsetY Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.OffsetY",
    "summary": "The offset in the direction of the Y-axis."
  },
  {
    "id": "OffsetZ Property ",
    "name": "AnalysisSubSection.OffsetZ Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.OffsetZ",
    "summary": "The offset in the direction of the Z-axis."
  },
  {
    "id": "Points Property ",
    "name": "AnalysisSubSection.Points Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.Points",
    "summary": "The points of the subsection."
  },
  {
    "id": "R1 Property ",
    "name": "AnalysisSubSection.R1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.R1",
    "summary": "The R1 value."
  },
  {
    "id": "R2 Property ",
    "name": "AnalysisSubSection.R2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.R2",
    "summary": "The R2 value."
  },
  {
    "id": "SubType Property ",
    "name": "AnalysisSubSection.SubType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.SubType",
    "summary": "The subtype of the subsection."
  },
  {
    "id": "T1 Property ",
    "name": "AnalysisSubSection.T1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.T1",
    "summary": "The T1 value."
  },
  {
    "id": "T2 Property ",
    "name": "AnalysisSubSection.T2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.T2",
    "summary": "The T2 value."
  },
  {
    "id": "T3 Property ",
    "name": "AnalysisSubSection.T3 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.T3",
    "summary": "The T3 value."
  },
  {
    "id": "T4 Property ",
    "name": "AnalysisSubSection.T4 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.T4",
    "summary": "The T4 value."
  },
  {
    "id": "TF Property ",
    "name": "AnalysisSubSection.TF Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.TF",
    "summary": "The TF value."
  },
  {
    "id": "TW Property ",
    "name": "AnalysisSubSection.TW Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.TW",
    "summary": "The TW value."
  },
  {
    "id": "Type Property ",
    "name": "AnalysisSubSection.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.Type",
    "summary": "The type of the subsection."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisSubSection.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisSubSection.Select",
    "summary": "Selects an analysis subsection.\r\n            The analysis subsection identifier must be set."
  },
  {
    "id": "AnalysisSupport Constructor ",
    "name": "AnalysisSupport Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisSupport.#ctor",
    "summary": "Initializes a new instance of the AnalysisSupport class"
  },
  {
    "id": "Spring Property ",
    "name": "AnalysisSupport.Spring Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSupport.Spring",
    "summary": "The spring values of the connectivity."
  },
  {
    "id": "Support Property ",
    "name": "AnalysisSupport.Support Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisSupport.Support",
    "summary": "The connectivity type of the connectivity."
  },
  {
    "id": "AnalysisVolume Constructor ",
    "name": "AnalysisVolume Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.#ctor",
    "summary": "Initializes a new instance of the AnalysisVolume class"
  },
  {
    "id": "Material Property ",
    "name": "AnalysisVolume.Material Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.Material",
    "summary": "The material of the analysis volume."
  },
  {
    "id": "Profile Property ",
    "name": "AnalysisVolume.Profile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.Profile",
    "summary": "The profile of the analysis volume."
  },
  {
    "id": "Volume Property ",
    "name": "AnalysisVolume.Volume Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.Volume",
    "summary": "The volume item."
  },
  {
    "id": "VolumeHoles Property ",
    "name": "AnalysisVolume.VolumeHoles Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.VolumeHoles",
    "summary": "The volume holes."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisVolume.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolume.Select",
    "summary": "Selects an analysis volume.\r\n            The ID has to be set."
  },
  {
    "id": "AnalysisVolumeItem Constructor ",
    "name": "AnalysisVolumeItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolumeItem.#ctor",
    "summary": "Initializes a new instance of the AnalysisVolumeItem class"
  },
  {
    "id": "Faces Property ",
    "name": "AnalysisVolumeItem.Faces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolumeItem.Faces",
    "summary": "The faces of the analysis volume item."
  },
  {
    "id": "Select Method ",
    "name": "AnalysisVolumeItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.AnalysisVolumeItem.Select",
    "summary": "Selects an analysis volume item.\r\n            The ID has to be set."
  },
  {
    "id": "Operation Constructor ",
    "name": "Operation Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation.#ctor",
    "summary": "Initializes a new instance of the Operation class"
  },
  {
    "id": "MoveAnalysisPartAreaEdge Method ",
    "name": "Operation.MoveAnalysisPartAreaEdge Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation.MoveAnalysisPartAreaEdge",
    "summary": "Moves the analysis part area edge by translation vector.\r\n            Perpendicular offset is calculated from the translation vector."
  },
  {
    "id": "MoveAnalysisPartPosition Method ",
    "name": "Operation.MoveAnalysisPartPosition Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation.MoveAnalysisPartPosition",
    "summary": "Moves the analysis part position by translation vector.\r\n            Only the handle positions can be moved."
  },
  {
    "id": "MoveObject Method ",
    "name": "Operation.MoveObject Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation.MoveObject",
    "summary": "Moves the analysis object by translation vector.\r\n            Supported objects are: AnalysisNode, AnalysisPart."
  },
  {
    "id": "ResetAnalysisPartPositions Method ",
    "name": "Operation.ResetAnalysisPartPositions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.Operations.Operation.ResetAnalysisPartPositions",
    "summary": "Reset analysis part. Removes the offsets applied to node positions.\r\n            The axis offset of the analysis part is not reset."
  },
  {
    "id": "AnalysisObjectPicker Constructor ",
    "name": "AnalysisObjectPicker Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectPicker.#ctor",
    "summary": "Initializes a new instance of the AnalysisObjectPicker class"
  },
  {
    "id": "PickObject Method ",
    "name": "AnalysisObjectPicker.PickObject Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectPicker.PickObject",
    "summary": "Prompts the user to pick object from the model with the given prompt.\r\n            Object is either analysis object or model object."
  },
  {
    "id": "PickObjects Method ",
    "name": "AnalysisObjectPicker.PickObjects Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectPicker.PickObjects",
    "summary": "Prompts the user to pick objects from the model with the given prompt."
  },
  {
    "id": "AnalysisObjectSelector Constructor ",
    "name": "AnalysisObjectSelector Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectSelector.#ctor",
    "summary": "Initializes a new instance of the AnalysisObjectSelector class."
  },
  {
    "id": "GetSelectedObjects Method ",
    "name": "AnalysisObjectSelector.GetSelectedObjects Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectSelector.GetSelectedObjects",
    "summary": "Get the analysis objects selected in model views."
  },
  {
    "id": "SetSelectedObjects Method ",
    "name": "AnalysisObjectSelector.SetSelectedObjects Method",
    "type": "method",
    "namespace": "Tekla.Structures.Analysis.UI.AnalysisObjectSelector.SetSelectedObjects",
    "summary": "Set analysis objects as selected in model views."
  },
  {
    "id": "BoltItem Constructor ",
    "name": "BoltItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.#ctor",
    "summary": "Creates a new bolt item instance."
  },
  {
    "id": "Lengths Property ",
    "name": "BoltItem.Lengths Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.Lengths",
    "summary": "The bolt item's length values."
  },
  {
    "id": "Size Property ",
    "name": "BoltItem.Size Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.Size",
    "summary": "The bolt item's size."
  },
  {
    "id": "Standard Property ",
    "name": "BoltItem.Standard Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.Standard",
    "summary": "The bolt item's grade."
  },
  {
    "id": "Type Property ",
    "name": "BoltItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.Type",
    "summary": "The bolt item's type."
  },
  {
    "id": "ExportBoltStandard Method ",
    "name": "BoltItem.ExportBoltStandard Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltItem.ExportBoltStandard",
    "summary": "Exports the bolt item standard + needed bolt catalog items in *.bass-format to the to given file name. \r\n            If path is not given bolt standard + items are exported to model folder. \r\n            If filename is empty bolt standard name is used as filename."
  },
  {
    "id": "Current Property ",
    "name": "BoltItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltItemEnumerator.Current",
    "summary": "Returns a bolt item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "BoltItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "BoltItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "BoltItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "BoltName Constructor ",
    "name": "BoltName Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.BoltName.#ctor",
    "summary": "Initializes a new instance of the BoltName class"
  },
  {
    "id": "Name Property ",
    "name": "BoltName.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.BoltName.Name",
    "summary": "The bolt item name."
  },
  {
    "id": "CatalogHandler Constructor ",
    "name": "CatalogHandler Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.#ctor",
    "summary": "Creates a new catalog handler instance."
  },
  {
    "id": "ExportProfileItems Method ",
    "name": "CatalogHandler.ExportProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ExportProfileItems",
    "summary": "Exports the profile items in the profile database to given path and file name.\r\n            Currently library profiles, sketch profiles and clb profiles are supported.\r\n            Library profiles are exported to *.lis format.\r\n            Sketch profiles are exported to *.uel format.\r\n            Clb profiles are exported to *.clb format.\r\n            If profiles are not available, export fails.\r\n            If path is empty, export fails.\r\n            If file name is empty, export fails."
  },
  {
    "id": "GetBoltItems Method ",
    "name": "CatalogHandler.GetBoltItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetBoltItems",
    "summary": "Returns an enumerator of all bolt items."
  },
  {
    "id": "GetComponentItems Method ",
    "name": "CatalogHandler.GetComponentItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetComponentItems",
    "summary": "Returns an enumerator of all component items."
  },
  {
    "id": "GetConnectionStatus Method ",
    "name": "CatalogHandler.GetConnectionStatus Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetConnectionStatus",
    "summary": "Returns true if a proper connection to the Tekla Structures process has been established.\r\n            Currently, there's no way to re-establish the connection."
  },
  {
    "id": "GetDrawingItems Method ",
    "name": "CatalogHandler.GetDrawingItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetDrawingItems",
    "summary": "Returns an enumerator of all drawing items."
  },
  {
    "id": "GetLibraryProfileItems Method ",
    "name": "CatalogHandler.GetLibraryProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetLibraryProfileItems",
    "summary": "Returns an enumerator of library profile items."
  },
  {
    "id": "GetMaterialItems Method ",
    "name": "CatalogHandler.GetMaterialItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetMaterialItems",
    "summary": "Returns an enumerator of all material items."
  },
  {
    "id": "GetMaterialMarketSizes Method ",
    "name": "CatalogHandler.GetMaterialMarketSizes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetMaterialMarketSizes",
    "summary": "Returns an enumerator of all material marketsizes.\r\n            Data is read from XS_PROFDB\\marketsizes.dat file."
  },
  {
    "id": "GetMeshItems Method ",
    "name": "CatalogHandler.GetMeshItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetMeshItems",
    "summary": "Returns an enumerator of mesh items."
  },
  {
    "id": "GetParametricProfileItems Method ",
    "name": "CatalogHandler.GetParametricProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetParametricProfileItems",
    "summary": "Returns an enumerator of parametric profile items."
  },
  {
    "id": "GetPrinterItems Method ",
    "name": "CatalogHandler.GetPrinterItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetPrinterItems",
    "summary": "Returns an enumerator of all printer items."
  },
  {
    "id": "GetProfileItems Method ",
    "name": "CatalogHandler.GetProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetProfileItems",
    "summary": "Returns an enumerator of all profile items."
  },
  {
    "id": "GetRebarItems Method ",
    "name": "CatalogHandler.GetRebarItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetRebarItems",
    "summary": "Returns an enumerator of rebar items."
  },
  {
    "id": "GetShapeItems Method ",
    "name": "CatalogHandler.GetShapeItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetShapeItems",
    "summary": "Returns an enumerator of all shape items."
  },
  {
    "id": "GetSteelFinishItems Method ",
    "name": "CatalogHandler.GetSteelFinishItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetSteelFinishItems",
    "summary": "Returns the collection of all steel finish items."
  },
  {
    "id": "GetUserPropertyItems Method ",
    "name": "CatalogHandler.GetUserPropertyItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.GetUserPropertyItems",
    "summary": "Returns an enumerator of all user property items."
  },
  {
    "id": "GetUserPropertyItems Method ",
    "name": "CatalogHandler.GetUserPropertyItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Returns an enumerator of all user property items."
  },
  {
    "id": "GetUserPropertyItems Method (CatalogObjectTypeEnum)",
    "name": "CatalogHandler.GetUserPropertyItems Method (CatalogObjectTypeEnum)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Returns an enumerator of user property items of the given object type."
  },
  {
    "id": "ImportBoltItems Method ",
    "name": "CatalogHandler.ImportBoltItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportBoltItems",
    "summary": "Imports bolt items and their assembly information (*.bass) from folder to bolt assembly catalog and bolt catalog.\r\n             Import overrides the existing bolts in the catalog without any warnings."
  },
  {
    "id": "ImportCustomComponentItems Method ",
    "name": "CatalogHandler.ImportCustomComponentItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportCustomComponentItems",
    "summary": "Imports custom component items (*.uel) from path to component catalog.\r\n             Import overrides the existing custom components in the catalog without any warnings."
  },
  {
    "id": "ImportDrawingItems Method ",
    "name": "CatalogHandler.ImportDrawingItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportDrawingItems",
    "summary": "Imports drawing setting items (*.tsds) from specified folder to model folder.\r\n             Import throws exception if model is not open.\r\n             Import overrides the existing drawing items in the catalog without any warnings."
  },
  {
    "id": "ImportLibraryProfileItems Method ",
    "name": "CatalogHandler.ImportLibraryProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportLibraryProfileItems",
    "summary": "Imports library profile items (*.lis) from folder to profile catalog.\r\n             Import overrides the existing profiles in the catalog without any warnings."
  },
  {
    "id": "ImportMaterialItems Method ",
    "name": "CatalogHandler.ImportMaterialItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportMaterialItems",
    "summary": "Imports material items (*.lis) from folder to material catalog.\r\n             Import overrides the existing materials in the catalog without any warnings."
  },
  {
    "id": "ImportMeshItems Method ",
    "name": "CatalogHandler.ImportMeshItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportMeshItems",
    "summary": "Imports mesh items (*.mexp) from folder to mesh catalog.\r\n             Import overrides the existing mesh item in the catalog without any warnings."
  },
  {
    "id": "ImportParametricProfileItems Method ",
    "name": "CatalogHandler.ImportParametricProfileItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportParametricProfileItems",
    "summary": "Imports parametric profile items (*.uel) from folder to profile catalog.\r\n             Import overrides the existing profiles in the catalog without any warnings."
  },
  {
    "id": "ImportRebarItems Method ",
    "name": "CatalogHandler.ImportRebarItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportRebarItems",
    "summary": "Imports rebar items (*.rexp) from folder to reinforcement catalog.\r\n             Import overrides the existing rebar item in the catalog without any warnings."
  },
  {
    "id": "ImportShapeItems Method ",
    "name": "CatalogHandler.ImportShapeItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportShapeItems",
    "summary": "Imports shape geometry items (*.tsc) from specified folder.\r\n             Import throws exception if model is not open.\r\n             Import overrides the existing shape items in the catalog without any warnings."
  },
  {
    "id": "ImportShapeItemsFromGeometryFiles Method ",
    "name": "CatalogHandler.ImportShapeItemsFromGeometryFiles Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.ImportShapeItemsFromGeometryFiles",
    "summary": "Imports shape geometry items from geometry files in specified folder.\r\n             Import supports following file formats: \".skp\", \".dxf\", \".dwg\", \".step\", \".iges\", \".stp\", \".igs\", \".ifc\", \".dgn\", \".trb\"\r\n             File name is used as shape name.\r\n             Import throws exception if model is not open.\r\n             Import overrides the existing shape items in the catalog without any warnings."
  },
  {
    "id": "SaveProfileDatabase Method ",
    "name": "CatalogHandler.SaveProfileDatabase Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CatalogHandler.SaveProfileDatabase",
    "summary": "Saves the profile database."
  },
  {
    "id": "ComponentItem Constructor ",
    "name": "ComponentItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.#ctor",
    "summary": "Creates a new component item instance."
  },
  {
    "id": "AttributeFileExtension Property ",
    "name": "ComponentItem.AttributeFileExtension Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.AttributeFileExtension",
    "summary": "Gets the attribute file extension of item from the component database."
  },
  {
    "id": "Name Property ",
    "name": "ComponentItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.Name",
    "summary": "The component item's internal name which is used by Tekla Structures in component identification."
  },
  {
    "id": "Number Property ",
    "name": "ComponentItem.Number Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.Number",
    "summary": "The component item's internal number which is used by Tekla Structures in component identification."
  },
  {
    "id": "Type Property ",
    "name": "ComponentItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.Type",
    "summary": "The component item's type."
  },
  {
    "id": "UIName Property ",
    "name": "ComponentItem.UIName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.UIName",
    "summary": "The component item's name which is visible in the Tekla Structures user interface."
  },
  {
    "id": "Export Method ",
    "name": "ComponentItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.Export",
    "summary": "Exports the custom component item in *.uel-format to the to given file name. \r\n            If path is not given custom component is exported to model folder. \r\n            If filename is empty custom component name is used as filename."
  },
  {
    "id": "GetVersion Method ",
    "name": "ComponentItem.GetVersion Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.GetVersion",
    "summary": "Gets the version number of custom component item from the component database."
  },
  {
    "id": "Select Method ",
    "name": "ComponentItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItem.Select",
    "summary": "Selects the component item from the component database. Uses the type if defined for selection"
  },
  {
    "id": "Select Method (String, Int32)",
    "name": "ComponentItem.Select Method (String, Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the component item from the component database. Uses the type if defined for selection"
  },
  {
    "id": "Select Method (String, Int32, ComponentItem.ComponentTypeEnum)",
    "name": "ComponentItem.Select Method (String, Int32, ComponentItem.ComponentTypeEnum)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the component item from the component database."
  },
  {
    "id": "Current Property ",
    "name": "ComponentItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ComponentItemEnumerator.Current",
    "summary": "Returns a component item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "ComponentItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "ComponentItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "ComponentItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ComponentItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "CrossSection Constructor ",
    "name": "CrossSection Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.#ctor",
    "summary": "Creates a new cross section point instance."
  },
  {
    "id": "CrossSection Constructor (String)",
    "name": "CrossSection Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Creates a new cross section point instance."
  },
  {
    "id": "CrossSection Constructor (ProfileName)",
    "name": "CrossSection Constructor (ProfileName)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Creates a new cross section point instance."
  },
  {
    "id": "HighAccuracy Property ",
    "name": "CrossSection.HighAccuracy Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.HighAccuracy",
    "summary": "The contour geometry accuracy."
  },
  {
    "id": "InnerSurfacePoints Property ",
    "name": "CrossSection.InnerSurfacePoints Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.InnerSurfacePoints",
    "summary": "Gets the points for inner surfaces."
  },
  {
    "id": "InnerSurfaces Property ",
    "name": "CrossSection.InnerSurfaces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.InnerSurfaces",
    "summary": "Gets the cross section points for inner surfaces."
  },
  {
    "id": "Length Property ",
    "name": "CrossSection.Length Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.Length",
    "summary": "The total length"
  },
  {
    "id": "Location Property ",
    "name": "CrossSection.Location Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.Location",
    "summary": "The location in relation to length, 0.0 referring to start of the profile"
  },
  {
    "id": "OuterSurface Property ",
    "name": "CrossSection.OuterSurface Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.OuterSurface",
    "summary": "Gets the cross section points for outer surface."
  },
  {
    "id": "OuterSurfacePoints Property ",
    "name": "CrossSection.OuterSurfacePoints Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.OuterSurfacePoints",
    "summary": "Gets the cross section points for outer surface."
  },
  {
    "id": "Profile Property ",
    "name": "CrossSection.Profile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.Profile",
    "summary": "The profile where cross section is asked from"
  },
  {
    "id": "GetInnerContours Method ",
    "name": "CrossSection.GetInnerContours Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.GetInnerContours",
    "summary": "Gets the inner loop geometries as Polycurve."
  },
  {
    "id": "GetOuterContour Method ",
    "name": "CrossSection.GetOuterContour Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.GetOuterContour",
    "summary": "Gets the outer loop geometry as Polycurve."
  },
  {
    "id": "Select Method ",
    "name": "CrossSection.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CrossSection.Select",
    "summary": "Selects the cross section from the profile definition."
  },
  {
    "id": "Select Method (Double, Double)",
    "name": "CrossSection.Select Method (Double, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the cross section from the profile definition."
  },
  {
    "id": "Select Method (Boolean, Double, Double)",
    "name": "CrossSection.Select Method (Boolean, Double, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the cross section from the profile definition."
  },
  {
    "id": "CrossSectionPoint Constructor ",
    "name": "CrossSectionPoint Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.CrossSectionPoint.#ctor",
    "summary": "Creates a new cross section point instance."
  },
  {
    "id": "Chamfer Property ",
    "name": "CrossSectionPoint.Chamfer Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.CrossSectionPoint.Chamfer",
    "summary": "The chamfer for the cross section point."
  },
  {
    "id": "DrawingItem Constructor ",
    "name": "DrawingItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.#ctor",
    "summary": "Creates a new drawing item instance."
  },
  {
    "id": "Files Property ",
    "name": "DrawingItem.Files Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.Files",
    "summary": "The files belonging to drawing item."
  },
  {
    "id": "Name Property ",
    "name": "DrawingItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.Name",
    "summary": "The drawing item's name."
  },
  {
    "id": "Type Property ",
    "name": "DrawingItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.Type",
    "summary": "The files belonging to drawing item."
  },
  {
    "id": "Export Method ",
    "name": "DrawingItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.Export",
    "summary": "Exports the drawing item in the catalog to given file name. \r\n            If path is not given drawing is exported to model folder. \r\n            If filename is empty drawing name is used as filename."
  },
  {
    "id": "Select Method ",
    "name": "DrawingItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItem.Select",
    "summary": "Selects the drawing item in the drawing catalog."
  },
  {
    "id": "Current Property ",
    "name": "DrawingItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.DrawingItemEnumerator.Current",
    "summary": "Returns a drawing item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "DrawingItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "DrawingItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "DrawingItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.DrawingItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "ConvertSourceFile Method ",
    "name": "FabricatorProfilesAndMaterials.ConvertSourceFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.FabricatorProfilesAndMaterials.ConvertSourceFile",
    "summary": "Converts a fabricator profile catalog source file to an XML file that \r\n            contains a list of valid Tekla Structures catalog profiles and materials."
  },
  {
    "id": "FinishItem Constructor ",
    "name": "FinishItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.FinishItem.#ctor",
    "summary": "Creates a new finish item instance."
  },
  {
    "id": "Abbreviation Property ",
    "name": "FinishItem.Abbreviation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.FinishItem.Abbreviation",
    "summary": "The finish abbreviation"
  },
  {
    "id": "Description Property ",
    "name": "FinishItem.Description Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.FinishItem.Description",
    "summary": "The finish description"
  },
  {
    "id": "ToString Method ",
    "name": "FinishItem.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.FinishItem.ToString",
    "summary": "Returns the fully qualified type name of this instance."
  },
  {
    "id": "LibraryProfileItem Constructor ",
    "name": "LibraryProfileItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.#ctor",
    "summary": "Creates a new library profile item instance."
  },
  {
    "id": "aProfileItemAnalysisParameters Property ",
    "name": "LibraryProfileItem.aProfileItemAnalysisParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.aProfileItemAnalysisParameters",
    "summary": "An array list with the profile item analysis parameters."
  },
  {
    "id": "aProfileItemUserParameters Property ",
    "name": "LibraryProfileItem.aProfileItemUserParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.aProfileItemUserParameters",
    "summary": "An array list with the profile item user parameters."
  },
  {
    "id": "ProfileName Property ",
    "name": "LibraryProfileItem.ProfileName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.ProfileName",
    "summary": "The profile item name."
  },
  {
    "id": "Copy Method ",
    "name": "LibraryProfileItem.Copy Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.Copy",
    "summary": "Copy the library profile item in the profile database to item with new name."
  },
  {
    "id": "Delete Method ",
    "name": "LibraryProfileItem.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.Delete",
    "summary": "Deletes the profile item in the profile database."
  },
  {
    "id": "Modify Method ",
    "name": "LibraryProfileItem.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.Modify",
    "summary": "Modifies the profile item in the profile database."
  },
  {
    "id": "Select Method ",
    "name": "LibraryProfileItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.LibraryProfileItem.Select",
    "summary": "Selects the profile item in the profile database."
  },
  {
    "id": "Select Method (String)",
    "name": "LibraryProfileItem.Select Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the profile item in the profile database using the given name."
  },
  {
    "id": "MaterialItem Constructor ",
    "name": "MaterialItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.#ctor",
    "summary": "Creates a new material item instance."
  },
  {
    "id": "AliasName1 Property ",
    "name": "MaterialItem.AliasName1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.AliasName1",
    "summary": "The material item's alias name 1."
  },
  {
    "id": "AliasName2 Property ",
    "name": "MaterialItem.AliasName2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.AliasName2",
    "summary": "The material item's alias name 2."
  },
  {
    "id": "AliasName3 Property ",
    "name": "MaterialItem.AliasName3 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.AliasName3",
    "summary": "The material item's alias name 3."
  },
  {
    "id": "DesignCode Property ",
    "name": "MaterialItem.DesignCode Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.DesignCode",
    "summary": "The design code."
  },
  {
    "id": "MaterialName Property ",
    "name": "MaterialItem.MaterialName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.MaterialName",
    "summary": "The material item's name."
  },
  {
    "id": "ModulusOfElasticity Property ",
    "name": "MaterialItem.ModulusOfElasticity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.ModulusOfElasticity",
    "summary": "Thte modulus of elasticity in unit N/m2."
  },
  {
    "id": "PlateDensity Property ",
    "name": "MaterialItem.PlateDensity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.PlateDensity",
    "summary": "The plate density in unit kg/m3."
  },
  {
    "id": "PoissonsRatio Property ",
    "name": "MaterialItem.PoissonsRatio Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.PoissonsRatio",
    "summary": "The poissons ratio"
  },
  {
    "id": "ProfileDensity Property ",
    "name": "MaterialItem.ProfileDensity Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.ProfileDensity",
    "summary": "The profile density in unit kg/m3."
  },
  {
    "id": "ThermalDilatation Property ",
    "name": "MaterialItem.ThermalDilatation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.ThermalDilatation",
    "summary": "The thermal dilatation in unit 1/K."
  },
  {
    "id": "Type Property ",
    "name": "MaterialItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Type",
    "summary": "The material item's type."
  },
  {
    "id": "Delete Method ",
    "name": "MaterialItem.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Delete",
    "summary": "Delete this material from material database."
  },
  {
    "id": "Export Method ",
    "name": "MaterialItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Export",
    "summary": "Exports the material item in the material database to given file name. \r\n            Materials are exported to *.lis format. \r\n            If path is not given material is exported to model folder. \r\n            If filename is empty material name is used as filename."
  },
  {
    "id": "Insert Method ",
    "name": "MaterialItem.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Insert",
    "summary": "Inserts this material item to material database."
  },
  {
    "id": "MaterialNameMaxLength Method ",
    "name": "MaterialItem.MaterialNameMaxLength Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.MaterialNameMaxLength",
    "summary": "Returns the maximum length a material name can be."
  },
  {
    "id": "Modify Method ",
    "name": "MaterialItem.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Modify",
    "summary": "Modifies the material in material database that has the same name as this instance."
  },
  {
    "id": "Select Method ",
    "name": "MaterialItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItem.Select",
    "summary": "Selects the material item from the database based on the material name and alias name\r\n            in this instance."
  },
  {
    "id": "Select Method ",
    "name": "MaterialItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the material item from the database based on the material name and alias name\r\n            in this instance."
  },
  {
    "id": "Select Method (String)",
    "name": "MaterialItem.Select Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the material item based on the name from the material database.\r\n            The material name can also be an alias name."
  },
  {
    "id": "Current Property ",
    "name": "MaterialItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialItemEnumerator.Current",
    "summary": "Returns a material item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "MaterialItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "MaterialItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "MaterialItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "MarketSizes Property ",
    "name": "MaterialMarketSizesItem.MarketSizes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItem.MarketSizes",
    "summary": "Available MarketSizes for the particular material"
  },
  {
    "id": "MaterialName Property ",
    "name": "MaterialMarketSizesItem.MaterialName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItem.MaterialName",
    "summary": "Material name"
  },
  {
    "id": "Current Property ",
    "name": "MaterialMarketSizesItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItemEnumerator.Current",
    "summary": "Returns a MaterialMarketSizesItem instance with the current index."
  },
  {
    "id": "MoveNext Method ",
    "name": "MaterialMarketSizesItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the MaterialMarketSizesItemEnumerator."
  },
  {
    "id": "Reset Method ",
    "name": "MaterialMarketSizesItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialMarketSizesItemEnumerator.Reset",
    "summary": "Resets the MaterialMarketSizesItemEnumerator to the beginning."
  },
  {
    "id": "MaterialName Constructor ",
    "name": "MaterialName Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MaterialName.#ctor",
    "summary": "Initializes a new instance of the MaterialName class"
  },
  {
    "id": "Name Property ",
    "name": "MaterialName.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MaterialName.Name",
    "summary": "The material item name."
  },
  {
    "id": "MeshItem Constructor ",
    "name": "MeshItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.#ctor",
    "summary": "Creates a new mesh item instance."
  },
  {
    "id": "DiameterCross Property ",
    "name": "MeshItem.DiameterCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.DiameterCross",
    "summary": "The mesh item's cross direction bar size."
  },
  {
    "id": "DiameterLongitudinal Property ",
    "name": "MeshItem.DiameterLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.DiameterLongitudinal",
    "summary": "The mesh item's longitudinal direction bar size."
  },
  {
    "id": "DistanceCross Property ",
    "name": "MeshItem.DistanceCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.DistanceCross",
    "summary": "The mesh item's cross direction distance."
  },
  {
    "id": "DistanceLongitudinal Property ",
    "name": "MeshItem.DistanceLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.DistanceLongitudinal",
    "summary": "The mesh item's longitudinal direction distance."
  },
  {
    "id": "Grade Property ",
    "name": "MeshItem.Grade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Grade",
    "summary": "The mesh item's grade."
  },
  {
    "id": "LeftOverhangCross Property ",
    "name": "MeshItem.LeftOverhangCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.LeftOverhangCross",
    "summary": "The mesh item's cross direction left overhang."
  },
  {
    "id": "LeftOverhangLongitudinal Property ",
    "name": "MeshItem.LeftOverhangLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.LeftOverhangLongitudinal",
    "summary": "The mesh item's longitudinal direction left overhang."
  },
  {
    "id": "Length Property ",
    "name": "MeshItem.Length Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Length",
    "summary": "The mesh item's length."
  },
  {
    "id": "MaximumOverlappingCross Property ",
    "name": "MeshItem.MaximumOverlappingCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.MaximumOverlappingCross",
    "summary": "The mesh item's cross direction maximum overlapping."
  },
  {
    "id": "MaximumOverlappingLongitudinal Property ",
    "name": "MeshItem.MaximumOverlappingLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.MaximumOverlappingLongitudinal",
    "summary": "The mesh item's longitudinal direction maximum overlapping."
  },
  {
    "id": "MinimumOverlappingCross Property ",
    "name": "MeshItem.MinimumOverlappingCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.MinimumOverlappingCross",
    "summary": "The mesh item's cross direction minimum overlapping."
  },
  {
    "id": "MinimumOverlappingLongitudinal Property ",
    "name": "MeshItem.MinimumOverlappingLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.MinimumOverlappingLongitudinal",
    "summary": "The mesh item's longitudinal direction minimum overlapping."
  },
  {
    "id": "Name Property ",
    "name": "MeshItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Name",
    "summary": "The mesh item's name."
  },
  {
    "id": "RightOverhangCross Property ",
    "name": "MeshItem.RightOverhangCross Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.RightOverhangCross",
    "summary": "The mesh item's cross direction right overhang."
  },
  {
    "id": "RightOverhangLongitudinal Property ",
    "name": "MeshItem.RightOverhangLongitudinal Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.RightOverhangLongitudinal",
    "summary": "The mesh item's longitudinal direction right overhang."
  },
  {
    "id": "Width Property ",
    "name": "MeshItem.Width Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Width",
    "summary": "The mesh item's width."
  },
  {
    "id": "Export Method ",
    "name": "MeshItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Export",
    "summary": "Exports the rebar item in the catlog to given file name. \r\n            If path is not given rebar is exported to model folder. \r\n            If filename is empty rebar name is used as filename."
  },
  {
    "id": "Select Method ",
    "name": "MeshItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItem.Select",
    "summary": "Selects the mesh item in the mesh database."
  },
  {
    "id": "Current Property ",
    "name": "MeshItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator.Current",
    "summary": "Returns a mesh item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "MeshItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "MeshItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "MeshItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "SelectMeshItem Method ",
    "name": "MeshItemEnumerator.SelectMeshItem Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.MeshItemEnumerator.SelectMeshItem",
    "summary": "Selects a mesh item in the mesh database with the given name and grade."
  },
  {
    "id": "ParametricProfileItem Constructor ",
    "name": "ParametricProfileItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.#ctor",
    "summary": "Creates a new parametric profile item instance."
  },
  {
    "id": "ProfilePrefix Property ",
    "name": "ParametricProfileItem.ProfilePrefix Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.ProfilePrefix",
    "summary": "The parametric profile item prefix."
  },
  {
    "id": "CreateProfileString Method ",
    "name": "ParametricProfileItem.CreateProfileString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.CreateProfileString",
    "summary": "Gets the parametric profile item prefix and adds parameter values."
  },
  {
    "id": "GetParametricProfilePrefix Method ",
    "name": "ParametricProfileItem.GetParametricProfilePrefix Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.GetParametricProfilePrefix",
    "summary": "Gets the parametric profile item prefix using the given subtype. This can be used\r\n            after retrieving a library profile that has a parametric user-defined type."
  },
  {
    "id": "Select Method ",
    "name": "ParametricProfileItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.Select",
    "summary": "Selects the profile item in the profile database."
  },
  {
    "id": "Select Method (String)",
    "name": "ParametricProfileItem.Select Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the parametric profile item in the profile database using the given name."
  },
  {
    "id": "SelectByPrefix Method ",
    "name": "ParametricProfileItem.SelectByPrefix Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.SelectByPrefix",
    "summary": "Selects the parametric profile item in the profile database using the given prefix."
  },
  {
    "id": "SelectByProfileName Method ",
    "name": "ParametricProfileItem.SelectByProfileName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.SelectByProfileName",
    "summary": "Selects the parametric profile item in the profile database using the given name."
  },
  {
    "id": "SelectByTypeAndSubtype Method ",
    "name": "ParametricProfileItem.SelectByTypeAndSubtype Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ParametricProfileItem.SelectByTypeAndSubtype",
    "summary": "Selects the parametric profile item in the profile database using the given type and subtype."
  },
  {
    "id": "PrinterItem Constructor ",
    "name": "PrinterItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.#ctor",
    "summary": "Creates a new printer item instance."
  },
  {
    "id": "Device Property ",
    "name": "PrinterItem.Device Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.Device",
    "summary": "The actual printer device used in the printing."
  },
  {
    "id": "Extension Property ",
    "name": "PrinterItem.Extension Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.Extension",
    "summary": "The printer item's default file extension which is used when printing to a file."
  },
  {
    "id": "Name Property ",
    "name": "PrinterItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.Name",
    "summary": "The printer item's name which Tekla Structures uses \r\n            to fetch all the item's default properties in the printing process."
  },
  {
    "id": "PrintAreaHeigth Property ",
    "name": "PrinterItem.PrintAreaHeigth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.PrintAreaHeigth",
    "summary": "The printer item's print area height."
  },
  {
    "id": "PrintAreaWidth Property ",
    "name": "PrinterItem.PrintAreaWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItem.PrintAreaWidth",
    "summary": "The printer item's print area width."
  },
  {
    "id": "Current Property ",
    "name": "PrinterItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.PrinterItemEnumerator.Current",
    "summary": "Returns a printer item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "PrinterItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.PrinterItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "PrinterItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.PrinterItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "PrinterItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.PrinterItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "aProfileItemCrossSections Property ",
    "name": "ProfileItem.aProfileItemCrossSections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.aProfileItemCrossSections",
    "summary": "An array list with the profile item cross-sections."
  },
  {
    "id": "aProfileItemParameters Property ",
    "name": "ProfileItem.aProfileItemParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.aProfileItemParameters",
    "summary": "An array list with the profile item parameters."
  },
  {
    "id": "IsCLBProfile Property ",
    "name": "ProfileItem.IsCLBProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsCLBProfile",
    "summary": "Whether the profile is a clb profile."
  },
  {
    "id": "IsHardcodedProfile Property ",
    "name": "ProfileItem.IsHardcodedProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsHardcodedProfile",
    "summary": "Whether the profile is a parametric user-defined hard coded profile."
  },
  {
    "id": "IsMultiCrossSectionUserParametric Property ",
    "name": "ProfileItem.IsMultiCrossSectionUserParametric Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsMultiCrossSectionUserParametric",
    "summary": "Whether the profile is a parametric user-defined multi cross section profile."
  },
  {
    "id": "IsSketchedUserParametric Property ",
    "name": "ProfileItem.IsSketchedUserParametric Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsSketchedUserParametric",
    "summary": "Whether the profile is a parametric user-defined sketched profile."
  },
  {
    "id": "NumberOfCrossSections Property ",
    "name": "ProfileItem.NumberOfCrossSections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.NumberOfCrossSections",
    "summary": "The number of cross sections in the profile item."
  },
  {
    "id": "ParameterString Property ",
    "name": "ProfileItem.ParameterString Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ParameterString",
    "summary": "The profile item parameter string."
  },
  {
    "id": "ProfileItemCrossSections Property ",
    "name": "ProfileItem.ProfileItemCrossSections Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ProfileItemCrossSections",
    "summary": "The list of profile item cross-sections."
  },
  {
    "id": "ProfileItemSubType Property ",
    "name": "ProfileItem.ProfileItemSubType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ProfileItemSubType",
    "summary": "The profile item subtype."
  },
  {
    "id": "ProfileItemType Property ",
    "name": "ProfileItem.ProfileItemType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ProfileItemType",
    "summary": "The profile item type."
  },
  {
    "id": "AddCrossSection Method ",
    "name": "ProfileItem.AddCrossSection Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.AddCrossSection",
    "summary": "Adds the cross section to a profile."
  },
  {
    "id": "DeleteCrossSection Method ",
    "name": "ProfileItem.DeleteCrossSection Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.DeleteCrossSection",
    "summary": "Deletes the cross section of a profile."
  },
  {
    "id": "Export Method ",
    "name": "ProfileItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.Export",
    "summary": "Exports the profile item in the profile database to given file name. \r\n            Currently library profiles, sketch profiles and clb profiles are supported. \r\n            Library profiles are exported to *.lis format.\r\n            Sketch profiles are exported to *.uel format. \r\n            Clb profiles are exported to *.clb format. \r\n            If path is not given profile is exported to model folder. \r\n            If filename is empty profile name or prefix is used as filename."
  },
  {
    "id": "GetCrossSection Method ",
    "name": "ProfileItem.GetCrossSection Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.GetCrossSection",
    "summary": "Returns list of cross section points of inner surfaces from the profile item."
  },
  {
    "id": "GetHighAccuracyCrossSection Method ",
    "name": "ProfileItem.GetHighAccuracyCrossSection Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.GetHighAccuracyCrossSection",
    "summary": "Get cross section with high accuracy."
  },
  {
    "id": "GetProfileItemSubTypes Method ",
    "name": "ProfileItem.GetProfileItemSubTypes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.GetProfileItemSubTypes",
    "summary": "Selects the profile item and updates the sub types in the profile database."
  },
  {
    "id": "GetProfileItemSubTypes Method ",
    "name": "ProfileItem.GetProfileItemSubTypes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the profile item and updates the sub types in the profile database."
  },
  {
    "id": "GetProfileItemSubTypes Method (ProfileItem, ProfileItem.ProfileItemTypeEnum)",
    "name": "ProfileItem.GetProfileItemSubTypes Method (ProfileItem, ProfileItem.ProfileItemTypeEnum)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "summaryM:Tekla.Structures.Catalogs.ProfileItem.GetProfileItemSubTypes(Tekla.Structures.Catalogs.ProfileItem,Tekla.Structures.Catalogs.ProfileItem.ProfileItemTypeEnum)"
  },
  {
    "id": "IsProfileUserDefined Method ",
    "name": "ProfileItem.IsProfileUserDefined Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsProfileUserDefined",
    "summary": "Whether the profile is a fixed user-defined profile."
  },
  {
    "id": "IsProfileUserParametric Method ",
    "name": "ProfileItem.IsProfileUserParametric Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.IsProfileUserParametric",
    "summary": "Whether the profile is a parametric user-defined profile. If so,\r\n            the prefix can be asked by type and subtype."
  },
  {
    "id": "ModifyCrossSection Method ",
    "name": "ProfileItem.ModifyCrossSection Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ModifyCrossSection",
    "summary": "Modifies the cross section of a profile."
  },
  {
    "id": "ModifyProfileItemAnalysisParameter Method ",
    "name": "ProfileItem.ModifyProfileItemAnalysisParameter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ModifyProfileItemAnalysisParameter",
    "summary": "Modify analysis parameter of library profile item.\r\n            Modify is needed for profile item for updating changes to profile database"
  },
  {
    "id": "ModifyProfileItemParameter Method ",
    "name": "ProfileItem.ModifyProfileItemParameter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ModifyProfileItemParameter",
    "summary": "Modify parameter of library profile item.\r\n            Modify is needed for profile item for updating changes to profile database"
  },
  {
    "id": "ModifyProfileItemUserParameter Method ",
    "name": "ProfileItem.ModifyProfileItemUserParameter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.ModifyProfileItemUserParameter",
    "summary": "Modify user parameter of library profile item.\r\n            Modify is needed for profile item for updating changes to profile database"
  },
  {
    "id": "Select Method ",
    "name": "ProfileItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.Select",
    "summary": "Selects the profile item in the profile database."
  },
  {
    "id": "SelectCrossSections Method ",
    "name": "ProfileItem.SelectCrossSections Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.SelectCrossSections",
    "summary": "Selects the profile item cross section in the profile database."
  },
  {
    "id": "SetEquivalentType Method ",
    "name": "ProfileItem.SetEquivalentType Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItem.SetEquivalentType",
    "summary": "Sets the equivalent type for the specified cross section."
  },
  {
    "id": "ProfileItemCrossSection Constructor ",
    "name": "ProfileItemCrossSection Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.#ctor",
    "summary": "Initializes a new instance of the ProfileItemCrossSection class"
  },
  {
    "id": "CrossSectionLocation Property ",
    "name": "ProfileItemCrossSection.CrossSectionLocation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.CrossSectionLocation",
    "summary": "Gets or sets a value of the property CrossSectionLocation."
  },
  {
    "id": "CrossSectionNumber Property ",
    "name": "ProfileItemCrossSection.CrossSectionNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.CrossSectionNumber",
    "summary": "Gets or sets a value of the property CrossSectionNumber."
  },
  {
    "id": "EquivalentType Property ",
    "name": "ProfileItemCrossSection.EquivalentType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.EquivalentType",
    "summary": "Gets or sets a value of the property EquivalentType."
  },
  {
    "id": "Location Property ",
    "name": "ProfileItemCrossSection.Location Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.Location",
    "summary": "Gets or sets a value of the property Location."
  },
  {
    "id": "Number Property ",
    "name": "ProfileItemCrossSection.Number Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.Number",
    "summary": "Gets or sets a value of the property Number."
  },
  {
    "id": "NumberOfProfileItemAnalysisParameters Property ",
    "name": "ProfileItemCrossSection.NumberOfProfileItemAnalysisParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.NumberOfProfileItemAnalysisParameters",
    "summary": "Gets or sets a value of the property NumberOfProfileItemAnalysisParameters."
  },
  {
    "id": "NumberOfProfileItemParameters Property ",
    "name": "ProfileItemCrossSection.NumberOfProfileItemParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.NumberOfProfileItemParameters",
    "summary": "Gets or sets a value of the property NumberOfProfileItemParameters."
  },
  {
    "id": "NumberOfProfileItemUserParameters Property ",
    "name": "ProfileItemCrossSection.NumberOfProfileItemUserParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.NumberOfProfileItemUserParameters",
    "summary": "Gets or sets a value of the property NumberOfProfileItemUserParameters."
  },
  {
    "id": "ProfileItemAnalysisParameters Property ",
    "name": "ProfileItemCrossSection.ProfileItemAnalysisParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.ProfileItemAnalysisParameters",
    "summary": "Gets or sets a value of the property ProfileItemAnalysisParameters."
  },
  {
    "id": "ProfileItemParameters Property ",
    "name": "ProfileItemCrossSection.ProfileItemParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.ProfileItemParameters",
    "summary": "Gets or sets a value of the property ProfileItemParameters."
  },
  {
    "id": "ProfileItemUserParameters Property ",
    "name": "ProfileItemCrossSection.ProfileItemUserParameters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.ProfileItemUserParameters",
    "summary": "Gets or sets a value of the property ProfileItemUserParameters."
  },
  {
    "id": "ProfileSubType Property ",
    "name": "ProfileItemCrossSection.ProfileSubType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.ProfileSubType",
    "summary": "Gets or sets a value of the property ProfileSubType."
  },
  {
    "id": "ProfileType Property ",
    "name": "ProfileItemCrossSection.ProfileType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.ProfileType",
    "summary": "Gets or sets a value of the property ProfileType."
  },
  {
    "id": "AddProfileItemAnalysisParamter Method ",
    "name": "ProfileItemCrossSection.AddProfileItemAnalysisParamter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.AddProfileItemAnalysisParamter",
    "summary": "adds a new profile item analisis parameter."
  },
  {
    "id": "AddProfileItemParamter Method ",
    "name": "ProfileItemCrossSection.AddProfileItemParamter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.AddProfileItemParamter",
    "summary": "adds a new profile item parameter."
  },
  {
    "id": "AddProfileItemUserParamter Method ",
    "name": "ProfileItemCrossSection.AddProfileItemUserParamter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemCrossSection.AddProfileItemUserParamter",
    "summary": "adds a new profile item user parameter."
  },
  {
    "id": "Current Property ",
    "name": "ProfileItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator.Current",
    "summary": "Returns a profile item instance of the current element."
  },
  {
    "id": "SelectInstances Property ",
    "name": "ProfileItemEnumerator.SelectInstances Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator.SelectInstances",
    "summary": "Indicates that the instance Select() is called when the 'Current' item is asked from the enumerator.\r\n            The user can set this to 'false' if no members are ever asked from the instance. This is the case\r\n            when, for example, asking only for the available profile names or when only certain profiles need\r\n            to be selected from the model. Without the selection the 'Current' item contains the profile name\r\n            or the prefix and the profile type. Warning: normally the user should not change this value."
  },
  {
    "id": "GetSize Method ",
    "name": "ProfileItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "ProfileItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "ProfileItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "ProfileItemParameter Constructor ",
    "name": "ProfileItemParameter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.#ctor",
    "summary": "Initializes a new instance of the ProfileItemParameter class"
  },
  {
    "id": "AlblString Property ",
    "name": "ProfileItemParameter.AlblString Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.AlblString",
    "summary": "Gets a translated albl string."
  },
  {
    "id": "CrossSectionNumber Property ",
    "name": "ProfileItemParameter.CrossSectionNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.CrossSectionNumber",
    "summary": "The number of the cross section the parameter belongs to."
  },
  {
    "id": "IntegerValue Property ",
    "name": "ProfileItemParameter.IntegerValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.IntegerValue",
    "summary": "The integer value of the profile item parameter."
  },
  {
    "id": "ParameterUnitType Property ",
    "name": "ProfileItemParameter.ParameterUnitType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.ParameterUnitType",
    "summary": "Defines the parameter unit type."
  },
  {
    "id": "Property Property ",
    "name": "ProfileItemParameter.Property Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.Property",
    "summary": "The description of the profile item parameter. Corresponds to the 'Property' in the \r\n            Tekla Structures profile catalog dialog, and the 'Label in dialog box' in the variable\r\n            dialog in the Sketch Editor."
  },
  {
    "id": "StringValue Property ",
    "name": "ProfileItemParameter.StringValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.StringValue",
    "summary": "The string value of the profile item parameter."
  },
  {
    "id": "Symbol Property ",
    "name": "ProfileItemParameter.Symbol Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.Symbol",
    "summary": "The symbol of the profile item parameter."
  },
  {
    "id": "Value Property ",
    "name": "ProfileItemParameter.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemParameter.Value",
    "summary": "The value of the profile item parameter."
  },
  {
    "id": "ProfileItemSubType Constructor ",
    "name": "ProfileItemSubType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType.#ctor",
    "summary": "Initializes a new instance of the ProfileItemSubType class"
  },
  {
    "id": "BitmapName Property ",
    "name": "ProfileItemSubType.BitmapName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType.BitmapName",
    "summary": "Gets a value of the property BitmapName."
  },
  {
    "id": "Label Property ",
    "name": "ProfileItemSubType.Label Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType.Label",
    "summary": "Gets a value of the property Label."
  },
  {
    "id": "ParameterString Property ",
    "name": "ProfileItemSubType.ParameterString Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType.ParameterString",
    "summary": "Gets a value of the property ParameterString."
  },
  {
    "id": "SubTypeId Property ",
    "name": "ProfileItemSubType.SubTypeId Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileItemSubType.SubTypeId",
    "summary": "Gets a value of the property SubTypeId."
  },
  {
    "id": "ProfileName Constructor ",
    "name": "ProfileName Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ProfileName.#ctor",
    "summary": "Initializes a new instance of the ProfileName class"
  },
  {
    "id": "Name Property ",
    "name": "ProfileName.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ProfileName.Name",
    "summary": "The profile item name."
  },
  {
    "id": "RebarHeaderItem Constructor ",
    "name": "RebarHeaderItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem.#ctor",
    "summary": "Initializes a new instance of the RebarHeaderItem class."
  },
  {
    "id": "Name Property ",
    "name": "RebarHeaderItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem.Name",
    "summary": "Gets or sets the name."
  },
  {
    "id": "PropertyName Property ",
    "name": "RebarHeaderItem.PropertyName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem.PropertyName",
    "summary": "Gets or sets the property name."
  },
  {
    "id": "Type Property ",
    "name": "RebarHeaderItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem.Type",
    "summary": "Gets or sets the type."
  },
  {
    "id": "Units Property ",
    "name": "RebarHeaderItem.Units Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarHeaderItem.Units",
    "summary": "Gets or sets the units."
  },
  {
    "id": "RebarItem Constructor ",
    "name": "RebarItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.#ctor",
    "summary": "Creates a new rebar item instance."
  },
  {
    "id": "ActualDiameter Property ",
    "name": "RebarItem.ActualDiameter Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.ActualDiameter",
    "summary": "The rebar item's actual diameter."
  },
  {
    "id": "BendRadius Property ",
    "name": "RebarItem.BendRadius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.BendRadius",
    "summary": "The rebar item's bending radius."
  },
  {
    "id": "Code Property ",
    "name": "RebarItem.Code Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Code",
    "summary": "The rebar item's code."
  },
  {
    "id": "CrankedLength Property ",
    "name": "RebarItem.CrankedLength Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CrankedLength",
    "summary": "Gets or sets the cranked length."
  },
  {
    "id": "CrankedLengthType Property ",
    "name": "RebarItem.CrankedLengthType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CrankedLengthType",
    "summary": "Gets or sets the cranked length type."
  },
  {
    "id": "CrankExtraOffset Property ",
    "name": "RebarItem.CrankExtraOffset Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CrankExtraOffset",
    "summary": "Gets or sets the crank extra offset."
  },
  {
    "id": "CrankStraightLength Property ",
    "name": "RebarItem.CrankStraightLength Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CrankStraightLength",
    "summary": "Gets or sets the crank straight length."
  },
  {
    "id": "CrossSectionArea Property ",
    "name": "RebarItem.CrossSectionArea Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CrossSectionArea",
    "summary": "The rebar item's cross section area."
  },
  {
    "id": "CurveTolerance Property ",
    "name": "RebarItem.CurveTolerance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.CurveTolerance",
    "summary": "Gets or sets the curve tolerance."
  },
  {
    "id": "ExtraPointShortening Property ",
    "name": "RebarItem.ExtraPointShortening Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.ExtraPointShortening",
    "summary": "Gets or sets the extra point shortening."
  },
  {
    "id": "Grade Property ",
    "name": "RebarItem.Grade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Grade",
    "summary": "The rebar item's grade."
  },
  {
    "id": "HookLength135Degrees Property ",
    "name": "RebarItem.HookLength135Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookLength135Degrees",
    "summary": "The rebar item's hook length for 135 degrees."
  },
  {
    "id": "HookLength180Degrees Property ",
    "name": "RebarItem.HookLength180Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookLength180Degrees",
    "summary": "The rebar item's hook length for 180 degrees."
  },
  {
    "id": "HookLength90Degrees Property ",
    "name": "RebarItem.HookLength90Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookLength90Degrees",
    "summary": "The rebar item's hook length for 90 degrees."
  },
  {
    "id": "HookRadius135Degrees Property ",
    "name": "RebarItem.HookRadius135Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookRadius135Degrees",
    "summary": "The rebar item's hook radius for 135 degrees."
  },
  {
    "id": "HookRadius180Degrees Property ",
    "name": "RebarItem.HookRadius180Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookRadius180Degrees",
    "summary": "The rebar item's hook radius for 180 degrees."
  },
  {
    "id": "HookRadius90Degrees Property ",
    "name": "RebarItem.HookRadius90Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.HookRadius90Degrees",
    "summary": "The rebar item's hook radius for 90 degrees."
  },
  {
    "id": "LapLength Property ",
    "name": "RebarItem.LapLength Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.LapLength",
    "summary": "Gets or sets the lap length."
  },
  {
    "id": "MaxRadiusRequiringBending Property ",
    "name": "RebarItem.MaxRadiusRequiringBending Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.MaxRadiusRequiringBending",
    "summary": "Gets or sets the max radius requiring bending."
  },
  {
    "id": "NominalDiameter Property ",
    "name": "RebarItem.NominalDiameter Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.NominalDiameter",
    "summary": "The rebar item's nominal diameter."
  },
  {
    "id": "Size Property ",
    "name": "RebarItem.Size Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Size",
    "summary": "The rebar item's size."
  },
  {
    "id": "Usage Property ",
    "name": "RebarItem.Usage Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Usage",
    "summary": "The rebar item's usage."
  },
  {
    "id": "WeightPerLenght Property ",
    "name": "RebarItem.WeightPerLenght Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.WeightPerLenght",
    "summary": "The rebar item's weight per lenght."
  },
  {
    "id": "Delete Method ",
    "name": "RebarItem.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Delete",
    "summary": "Deletes the rebar item from the rebar database."
  },
  {
    "id": "Export Method ",
    "name": "RebarItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Export",
    "summary": "Exports the rebar item in the catlog to given file name. \r\n            If path is not given rebar is exported to model folder. \r\n            If filename is empty rebar name is used as filename."
  },
  {
    "id": "Insert Method ",
    "name": "RebarItem.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Insert",
    "summary": "Inserts the rebar item in the rebar database."
  },
  {
    "id": "Modify Method ",
    "name": "RebarItem.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Modify",
    "summary": "Modifies the rebar item in the rebar database based on the given parameters."
  },
  {
    "id": "Select Method ",
    "name": "RebarItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItem.Select",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, String)",
    "name": "RebarItem.Select Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, Double, Boolean)",
    "name": "RebarItem.Select Method (String, Double, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, String, Double)",
    "name": "RebarItem.Select Method (String, String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, String, String)",
    "name": "RebarItem.Select Method (String, String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, Double, Double, Boolean)",
    "name": "RebarItem.Select Method (String, Double, Double, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Select Method (String, Double, String, Boolean)",
    "name": "RebarItem.Select Method (String, Double, String, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the rebar item in the rebar database."
  },
  {
    "id": "Current Property ",
    "name": "RebarItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.Current",
    "summary": "Returns a rebar item instance of the current element."
  },
  {
    "id": "DeleteRebarItem Method ",
    "name": "RebarItemEnumerator.DeleteRebarItem Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.DeleteRebarItem",
    "summary": "Delete the RebarItem from the list"
  },
  {
    "id": "GetRebarHeaderItems Method ",
    "name": "RebarItemEnumerator.GetRebarHeaderItems Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.GetRebarHeaderItems",
    "summary": "Gets the header items from the rebar catalog header."
  },
  {
    "id": "GetSize Method ",
    "name": "RebarItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "InsertRebarItem Method ",
    "name": "RebarItemEnumerator.InsertRebarItem Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.InsertRebarItem",
    "summary": "Insert the RebarItem in to the list"
  },
  {
    "id": "ModifyRebarItem Method ",
    "name": "RebarItemEnumerator.ModifyRebarItem Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.ModifyRebarItem",
    "summary": "Modify the RebarItem in the list"
  },
  {
    "id": "MoveNext Method ",
    "name": "RebarItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "RebarItemExists Method ",
    "name": "RebarItemEnumerator.RebarItemExists Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.RebarItemExists",
    "summary": "Check RebarItem is available in database file"
  },
  {
    "id": "Reset Method ",
    "name": "RebarItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "SelectRebarItem Method ",
    "name": "RebarItemEnumerator.SelectRebarItem Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.RebarItemEnumerator.SelectRebarItem",
    "summary": "Selects a rebar item in the rebar database with the given grade and size."
  },
  {
    "id": "SelectRebarItem Method (String, String)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade and size."
  },
  {
    "id": "SelectRebarItem Method (String, Double, Boolean)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, Double, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade and nominal diameter."
  },
  {
    "id": "SelectRebarItem Method (String, String, Double)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade, size and bending radius."
  },
  {
    "id": "SelectRebarItem Method (String, String, String)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade, size and usage."
  },
  {
    "id": "SelectRebarItem Method (String, Double, Double, Boolean)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, Double, Double, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade, nominal diameter and bending radius."
  },
  {
    "id": "SelectRebarItem Method (String, Double, String, Boolean)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, Double, String, Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade, nominal diameter and bending radius."
  },
  {
    "id": "SelectRebarItem Method (String, String, String, String)",
    "name": "RebarItemEnumerator.SelectRebarItem Method (String, String, String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects a rebar item in the rebar database with the given grade, size, usage and code."
  },
  {
    "id": "ShapeItem Constructor ",
    "name": "ShapeItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.#ctor",
    "summary": "Creates a new shape instance."
  },
  {
    "id": "BrepType Property ",
    "name": "ShapeItem.BrepType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.BrepType",
    "summary": "Defines BrepType of shapes.\r\n            @see enum BrepType"
  },
  {
    "id": "Extrema Property ",
    "name": "ShapeItem.Extrema Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Extrema",
    "summary": "The extrema of the shape as an axis-aligned bounding box, as opposed to object-aligned"
  },
  {
    "id": "Fingerprint Property ",
    "name": "ShapeItem.Fingerprint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Fingerprint",
    "summary": "A fingerprint value calculated by Tekla Structures to provide quick comparison of geometries to avoid inserting\r\n            same shape multiple times to the catalog. More rigorous comparison is done only for geometries that result in\r\n            identical fingerprints."
  },
  {
    "id": "GeometryGuid Property ",
    "name": "ShapeItem.GeometryGuid Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.GeometryGuid",
    "summary": "A unique identifier of the shape geometry, given initially by BrepStorage. This GUID is used as the body of\r\n            the filename for the shape geometry information found in the ShapeGeometries directory"
  },
  {
    "id": "GeometryHash Property ",
    "name": "ShapeItem.GeometryHash Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.GeometryHash",
    "summary": "This obsolete property can still be used to store and externally provided unique hash value identifying\r\n            the shape. However, Tekla Structures does not use this value internally for anything. It is strongly\r\n            recommended to use the newer Fingerprint property for future implementations. That value is automatically\r\n            calculated by Tekla Structures for all inserted shapes and is used internally for shape identification."
  },
  {
    "id": "Guid Property ",
    "name": "ShapeItem.Guid Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Guid",
    "summary": "A unique identifier of the actual shape, given initially by the ShapeCatalog. This GUID is used as the body of\r\n            the filename for the shape information found in the Shape directory"
  },
  {
    "id": "HandlePoints Property ",
    "name": "ShapeItem.HandlePoints Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.HandlePoints",
    "summary": "Defines handle points of the shape."
  },
  {
    "id": "IsSolid Property ",
    "name": "ShapeItem.IsSolid Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.IsSolid",
    "summary": "Set to true if the shape is detected by TS Core to be a valid solid"
  },
  {
    "id": "Name Property ",
    "name": "ShapeItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Name",
    "summary": "The shape Name"
  },
  {
    "id": "ShapeFacetedBrep Property ",
    "name": "ShapeItem.ShapeFacetedBrep Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.ShapeFacetedBrep",
    "summary": "The data structure containing the geometric information of the shape as a FacetedBRep"
  },
  {
    "id": "UpAxis Property ",
    "name": "ShapeItem.UpAxis Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.UpAxis",
    "summary": "The direction defining what is understood as \"up\" in the shape that the API user is providing.\r\n            Typically this is the z-axis, if the data is in global coordinates, coming from a system where Z-axis\r\n            points to global up direction.\r\n            Possible values are: Undefined = 0, X_Axis = 1, Y_Axis = 2, Z_Axis = 3.\r\n            It is highly recommendable to orient shapes in the Tekla Structures native way, that is x-axis on the extrusion line\r\n            and Y-axis pointing up.\r\n            NOTE: Specifying UpAxis to be ShapeUpAxis.Undefined may throw a ‘System.ArgumentOutOfRangeException’ exception\r\n            in certain operations, because the system can not proceed without that information."
  },
  {
    "id": "CleanAndModify Method ",
    "name": "ShapeItem.CleanAndModify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.CleanAndModify",
    "summary": "Cleans and stores the brep into the shape catalog"
  },
  {
    "id": "Delete Method ",
    "name": "ShapeItem.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Delete",
    "summary": "Deletes a shape from shape catalog based on the shape name."
  },
  {
    "id": "DeleteMetadata Method ",
    "name": "ShapeItem.DeleteMetadata Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.DeleteMetadata",
    "summary": "Delete the Shape item's metadata."
  },
  {
    "id": "Export Method ",
    "name": "ShapeItem.Export Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Export",
    "summary": "Exports the shape item in *.tsc-format to the to given file name.\r\n             If path is not given shape is exported to model folder.\r\n             If filename is empty shape name is used as filename."
  },
  {
    "id": "GetAllMetadataKeys Method ",
    "name": "ShapeItem.GetAllMetadataKeys Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.GetAllMetadataKeys",
    "summary": "Get the Shape item's metadata keys."
  },
  {
    "id": "GetInstanceCount Method ",
    "name": "ShapeItem.GetInstanceCount Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.GetInstanceCount",
    "summary": "Get the number of instances used in the model of a shape"
  },
  {
    "id": "GetMetadata Method ",
    "name": "ShapeItem.GetMetadata Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.GetMetadata",
    "summary": "Get the Shape item's metadata."
  },
  {
    "id": "Insert Method ",
    "name": "ShapeItem.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Insert",
    "summary": "Inserts a shape to the shape catalog based on the shape geometry (does not allow duplicate geometry)."
  },
  {
    "id": "InsertOrGetGuidsOfShapesWithMatchingGeometry Method ",
    "name": "ShapeItem.InsertOrGetGuidsOfShapesWithMatchingGeometry Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.InsertOrGetGuidsOfShapesWithMatchingGeometry",
    "summary": "Inserts a shape to the shape catalog based on the shape geometry (does not allow duplicate geometry).\r\n             If, based on fingerprint, the geometry already exists it populates a list of Guids of shapes using that same geometry."
  },
  {
    "id": "InsertUsingNormals Method ",
    "name": "ShapeItem.InsertUsingNormals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.InsertUsingNormals",
    "summary": "Inserts a shape to the shape catalog using the shape geometry. Uses vertex normals\r\n             to determine edge visibility. If the normal vectors of the vertices belonging to one\r\n             geometrical location are close enough, the edge will be considered smooth and will be\r\n             marked as hidden."
  },
  {
    "id": "InsertUsingNormalsAllowDuplicates Method ",
    "name": "ShapeItem.InsertUsingNormalsAllowDuplicates Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.InsertUsingNormalsAllowDuplicates",
    "summary": "Inserts a shape to the shape catalog using the shape geometry allowing duplicates. Uses \r\n             vertex normals to determine edge visibility. If the normal vectors of the vertices belonging\r\n              to one geometrical location are close enough, the edge will be considered smooth and will be\r\n             marked as hidden."
  },
  {
    "id": "Modify Method ",
    "name": "ShapeItem.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Modify",
    "summary": "Modifies a shape in the shape catalog based on the shape name or if not found, based on shape guid."
  },
  {
    "id": "Rename Method ",
    "name": "ShapeItem.Rename Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Rename",
    "summary": "Renames a shape in the shape catalog with the given shape name."
  },
  {
    "id": "Select Method ",
    "name": "ShapeItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.Select",
    "summary": "Selects the shape from the database based on the name given in this instance."
  },
  {
    "id": "Select Method ",
    "name": "ShapeItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the shape from the database based on the name given in this instance."
  },
  {
    "id": "Select Method (String)",
    "name": "ShapeItem.Select Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Selects the shape based on the given name from the database."
  },
  {
    "id": "SetHandlePoints Method ",
    "name": "ShapeItem.SetHandlePoints Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.SetHandlePoints",
    "summary": "Set the Shape item's Handle Points"
  },
  {
    "id": "SetMetadata Method ",
    "name": "ShapeItem.SetMetadata Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItem.SetMetadata",
    "summary": "Set the Shape item's metadata. Inserts the metadata if key is not found, otherwise modifies existing data."
  },
  {
    "id": "Current Property ",
    "name": "ShapeItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.ShapeItemEnumerator.Current",
    "summary": "Returns a shape item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "ShapeItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItemEnumerator.GetSize",
    "summary": "Returns the total amount of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "ShapeItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "ShapeItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.ShapeItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "UserPropertyItem Constructor ",
    "name": "UserPropertyItem Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.#ctor",
    "summary": "Creates a new user property item instance."
  },
  {
    "id": "AffectsNumbering Property ",
    "name": "UserPropertyItem.AffectsNumbering Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.AffectsNumbering",
    "summary": "Indicates whether the property value affects the numbering of objects."
  },
  {
    "id": "FieldType Property ",
    "name": "UserPropertyItem.FieldType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.FieldType",
    "summary": "The field type of the user property."
  },
  {
    "id": "Level Property ",
    "name": "UserPropertyItem.Level Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Level",
    "summary": "The level at which the user property has been defined."
  },
  {
    "id": "Name Property ",
    "name": "UserPropertyItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Name",
    "summary": "The name of the user property."
  },
  {
    "id": "Type Property ",
    "name": "UserPropertyItem.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Type",
    "summary": "The type of the user property."
  },
  {
    "id": "Unique Property ",
    "name": "UserPropertyItem.Unique Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Unique",
    "summary": "Indicates whether the property value is copied when the object is copied."
  },
  {
    "id": "Visibility Property ",
    "name": "UserPropertyItem.Visibility Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Visibility",
    "summary": "Indicates whether the property value is visible/editable."
  },
  {
    "id": "AddToObjectType Method ",
    "name": "UserPropertyItem.AddToObjectType Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.AddToObjectType",
    "summary": "Adds the user property item to the given object type."
  },
  {
    "id": "Delete Method ",
    "name": "UserPropertyItem.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Delete",
    "summary": "Deletes the user property item from the database."
  },
  {
    "id": "GetDefaultValue Method ",
    "name": "UserPropertyItem.GetDefaultValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.GetDefaultValue",
    "summary": "Gets the default value of a double property."
  },
  {
    "id": "GetDefaultValue Method (Double)",
    "name": "UserPropertyItem.GetDefaultValue Method (Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the default value of a double property."
  },
  {
    "id": "GetDefaultValue Method (Int32)",
    "name": "UserPropertyItem.GetDefaultValue Method (Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the default value of an integer property."
  },
  {
    "id": "GetDefaultValue Method (String)",
    "name": "UserPropertyItem.GetDefaultValue Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the default value of a string property."
  },
  {
    "id": "GetLabel Method ",
    "name": "UserPropertyItem.GetLabel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.GetLabel",
    "summary": "Gets the label of the user property. Labels are translated when translation is available."
  },
  {
    "id": "GetLabel Method ",
    "name": "UserPropertyItem.GetLabel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the label of the user property. Labels are translated when translation is available."
  },
  {
    "id": "GetLabel Method (Boolean)",
    "name": "UserPropertyItem.GetLabel Method (Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the label of the user property."
  },
  {
    "id": "GetObjectTypes Method ",
    "name": "UserPropertyItem.GetObjectTypes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.GetObjectTypes",
    "summary": "Gets the object types which contain this user property item."
  },
  {
    "id": "GetOptions Method ",
    "name": "UserPropertyItem.GetOptions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.GetOptions",
    "summary": "Gets the value options of a double property. Option strings are translated when translation is available."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(Double, String)))",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(Double, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of a double property. Option strings are translated when translation is available."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(Int32, String)))",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(Int32, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of an integer property. Option strings are translated when translation is available."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(String, String)))",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(String, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of a string property. Option strings are translated when translation is available."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(Double, String)), Boolean)",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(Double, String)), Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of a double property."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(Int32, String)), Boolean)",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(Int32, String)), Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of an integer property."
  },
  {
    "id": "GetOptions Method (List(KeyValuePair(String, String)), Boolean)",
    "name": "UserPropertyItem.GetOptions Method (List(KeyValuePair(String, String)), Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Gets the value options of a string property."
  },
  {
    "id": "Insert Method ",
    "name": "UserPropertyItem.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Insert",
    "summary": "Inserts the user property item to the database."
  },
  {
    "id": "Modify Method ",
    "name": "UserPropertyItem.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Modify",
    "summary": "Modifies the user property item."
  },
  {
    "id": "RemoveFromObjectType Method ",
    "name": "UserPropertyItem.RemoveFromObjectType Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.RemoveFromObjectType",
    "summary": "Removes the user property item from the given object type."
  },
  {
    "id": "Select Method ",
    "name": "UserPropertyItem.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.Select",
    "summary": "Selects by name the user property item from the database."
  },
  {
    "id": "SetDefaultValue Method ",
    "name": "UserPropertyItem.SetDefaultValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.SetDefaultValue",
    "summary": "Sets the default value of a double property."
  },
  {
    "id": "SetDefaultValue Method (Double)",
    "name": "UserPropertyItem.SetDefaultValue Method (Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the default value of a double property."
  },
  {
    "id": "SetDefaultValue Method (Int32)",
    "name": "UserPropertyItem.SetDefaultValue Method (Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the default value of an integer property."
  },
  {
    "id": "SetDefaultValue Method (String)",
    "name": "UserPropertyItem.SetDefaultValue Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the default value of a string property."
  },
  {
    "id": "SetLabel Method ",
    "name": "UserPropertyItem.SetLabel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.SetLabel",
    "summary": "Sets the label of the user property."
  },
  {
    "id": "SetOptions Method ",
    "name": "UserPropertyItem.SetOptions Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItem.SetOptions",
    "summary": "Sets the value options of a double property.\r\n            The maximum count of options is 400."
  },
  {
    "id": "SetOptions Method (List(KeyValuePair(Double, String)))",
    "name": "UserPropertyItem.SetOptions Method (List(KeyValuePair(Double, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the value options of a double property.\r\n            The maximum count of options is 400."
  },
  {
    "id": "SetOptions Method (List(KeyValuePair(Int32, String)))",
    "name": "UserPropertyItem.SetOptions Method (List(KeyValuePair(Int32, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the value options of an integer property.\r\n            The maximum count of options is 400."
  },
  {
    "id": "SetOptions Method (List(KeyValuePair(String, String)))",
    "name": "UserPropertyItem.SetOptions Method (List(KeyValuePair(String, String)))",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs",
    "summary": "Sets the value options of a string property.\r\n            The maximum count of options is 400."
  },
  {
    "id": "Current Property ",
    "name": "UserPropertyItemEnumerator.Current Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItemEnumerator.Current",
    "summary": "Returns a user property item instance of the current element."
  },
  {
    "id": "GetSize Method ",
    "name": "UserPropertyItemEnumerator.GetSize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItemEnumerator.GetSize",
    "summary": "Returns the total amout of items."
  },
  {
    "id": "MoveNext Method ",
    "name": "UserPropertyItemEnumerator.MoveNext Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItemEnumerator.MoveNext",
    "summary": "Moves to the next item in the enumerator."
  },
  {
    "id": "Reset Method ",
    "name": "UserPropertyItemEnumerator.Reset Method",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyItemEnumerator.Reset",
    "summary": "Resets the enumerator to the beginning."
  },
  {
    "id": "UserPropertyName Constructor ",
    "name": "UserPropertyName Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyName.#ctor",
    "summary": "Initializes a new instance of the UserPropertyName class"
  },
  {
    "id": "Name Property ",
    "name": "UserPropertyName.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyName.Name",
    "summary": "The user property item name."
  },
  {
    "id": "UserPropertyOption Constructor ",
    "name": "UserPropertyOption Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.#ctor",
    "summary": "Initializes a new instance of the UserPropertyOption class"
  },
  {
    "id": "DoubleValue Property ",
    "name": "UserPropertyOption.DoubleValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.DoubleValue",
    "summary": "The double value."
  },
  {
    "id": "IntValue Property ",
    "name": "UserPropertyOption.IntValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.IntValue",
    "summary": "The integer value."
  },
  {
    "id": "OptionLabel Property ",
    "name": "UserPropertyOption.OptionLabel Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.OptionLabel",
    "summary": "The option name."
  },
  {
    "id": "OptionLabelTranslated Property ",
    "name": "UserPropertyOption.OptionLabelTranslated Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.OptionLabelTranslated",
    "summary": "The translated option name."
  },
  {
    "id": "StringValue Property ",
    "name": "UserPropertyOption.StringValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Catalogs.UserPropertyOption.StringValue",
    "summary": "The string value."
  },
  {
    "id": "CurrentUnitType Property ",
    "name": "Angle.CurrentUnitType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Angle.CurrentUnitType",
    "summary": "Gets or sets the Tekla Structures current angle type"
  },
  {
    "id": "CurrentUnitValue Property ",
    "name": "Angle.CurrentUnitValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Angle.CurrentUnitValue",
    "summary": "Gets the value of the angle in the current unit"
  },
  {
    "id": "DecimalPlaces Property ",
    "name": "Angle.DecimalPlaces Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Angle.DecimalPlaces",
    "summary": "Gets the number of decimal places used for angles."
  },
  {
    "id": "Degrees Property ",
    "name": "Angle.Degrees Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Angle.Degrees",
    "summary": "Gets the angle value in degrees"
  },
  {
    "id": "Radians Property ",
    "name": "Angle.Radians Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Angle.Radians",
    "summary": "Gets the angle value in radians"
  },
  {
    "id": "CompareTo Method ",
    "name": "Angle.CompareTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.CompareTo",
    "summary": "Compares this angle with another angle"
  },
  {
    "id": "Equals Method ",
    "name": "Angle.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.Equals",
    "summary": "Checks for approximate angle equality"
  },
  {
    "id": "FromCurrentUnit Method ",
    "name": "Angle.FromCurrentUnit Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.FromCurrentUnit",
    "summary": "Creates an angle given in the current unit type"
  },
  {
    "id": "FromDegrees Method ",
    "name": "Angle.FromDegrees Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.FromDegrees",
    "summary": "Creates an angle from a value in degrees"
  },
  {
    "id": "FromRadians Method ",
    "name": "Angle.FromRadians Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.FromRadians",
    "summary": "Creates an angle from a value in radians"
  },
  {
    "id": "Parse Method ",
    "name": "Angle.Parse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.Parse",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "Parse Method (String)",
    "name": "Angle.Parse Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "Parse Method (String, IFormatProvider)",
    "name": "Angle.Parse Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "Parse Method (String, IFormatProvider, Angle.UnitType)",
    "name": "Angle.Parse Method (String, IFormatProvider, Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "ToString Method ",
    "name": "Angle.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.ToString",
    "summary": "Converts the represented angle to a string in the current units"
  },
  {
    "id": "ToString Method ",
    "name": "Angle.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the represented angle to a string in the current units"
  },
  {
    "id": "ToString Method (Angle.UnitType)",
    "name": "Angle.ToString Method (Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the represented angle to a string in the given units"
  },
  {
    "id": "ToString Method (String, IFormatProvider)",
    "name": "Angle.ToString Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the represented angle to a string with the given parameters"
  },
  {
    "id": "ToString Method (String, IFormatProvider, Angle.UnitType)",
    "name": "Angle.ToString Method (String, IFormatProvider, Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the represented angle to a string with the given parameters"
  },
  {
    "id": "TryParse Method ",
    "name": "Angle.TryParse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Angle.TryParse",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "TryParse Method (String, Angle)",
    "name": "Angle.TryParse Method (String, Angle)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "TryParse Method (String, IFormatProvider, Angle)",
    "name": "Angle.TryParse Method (String, IFormatProvider, Angle)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "TryParse Method (String, IFormatProvider, Angle.UnitType, Angle)",
    "name": "Angle.TryParse Method (String, IFormatProvider, Angle.UnitType, Angle)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle in the current unit type"
  },
  {
    "id": "Parse Method ",
    "name": "AngleList.Parse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.AngleList.Parse",
    "summary": "Parses the given text as an angle list in the current unit type"
  },
  {
    "id": "Parse Method (String)",
    "name": "AngleList.Parse Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle list in the current unit type"
  },
  {
    "id": "Parse Method (String, IFormatProvider)",
    "name": "AngleList.Parse Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle list in the current unit type"
  },
  {
    "id": "Parse Method (String, IFormatProvider, Angle.UnitType)",
    "name": "AngleList.Parse Method (String, IFormatProvider, Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses the given text as an angle list in the current unit type"
  },
  {
    "id": "ToString Method ",
    "name": "AngleList.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.AngleList.ToString",
    "summary": "Converts the given angles to a string in the current units"
  },
  {
    "id": "ToString Method (IEnumerable(Angle))",
    "name": "AngleList.ToString Method (IEnumerable(Angle))",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the given angles to a string in the current units"
  },
  {
    "id": "ToString Method (IEnumerable(Angle), Angle.UnitType)",
    "name": "AngleList.ToString Method (IEnumerable(Angle), Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the given angles to a string in the given units"
  },
  {
    "id": "ToString Method (IEnumerable(Angle), String, IFormatProvider)",
    "name": "AngleList.ToString Method (IEnumerable(Angle), String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the given angles to a string with the given parameters in the current unit"
  },
  {
    "id": "ToString Method (IEnumerable(Angle), String, IFormatProvider, Angle.UnitType)",
    "name": "AngleList.ToString Method (IEnumerable(Angle), String, IFormatProvider, Angle.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the given angles to a string with the given parameters in the current unit"
  },
  {
    "id": "Boolean Constructor ",
    "name": "Boolean Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Boolean.#ctor",
    "summary": "Initializes a new instance of the structure."
  },
  {
    "id": "Value Property ",
    "name": "Boolean.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Boolean.Value",
    "summary": "Gets or sets the boolean value."
  },
  {
    "id": "BooleanConverter Constructor ",
    "name": "BooleanConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter.#ctor",
    "summary": "Initializes a new instance of the BooleanConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "BooleanConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the boolean type."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "BooleanConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the boolean type to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "BooleanConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the boolean type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "BooleanConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.BooleanConverter.ConvertTo",
    "summary": "Converts an object from the boolean type to the given destination type."
  },
  {
    "id": "Distance Constructor ",
    "name": "Distance Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.#ctor",
    "summary": "Initializes a new instance of the structure."
  },
  {
    "id": "Distance Constructor (Double)",
    "name": "Distance Constructor (Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Initializes a new instance of the structure."
  },
  {
    "id": "Distance Constructor (Double, Distance.UnitType)",
    "name": "Distance Constructor (Double, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Initializes a new instance of the structure."
  },
  {
    "id": "CurrentUnitType Property ",
    "name": "Distance.CurrentUnitType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Distance.CurrentUnitType",
    "summary": "Gets or sets the current unit type."
  },
  {
    "id": "Millimeters Property ",
    "name": "Distance.Millimeters Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Distance.Millimeters",
    "summary": "Gets or sets the distance in millimeters."
  },
  {
    "id": "UseFractionalFormat Property ",
    "name": "Distance.UseFractionalFormat Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Distance.UseFractionalFormat",
    "summary": "Gets or sets a boolean value indicating whether to use the fractional format for US imperial units."
  },
  {
    "id": "UseUnitsInDecimalString Property ",
    "name": "Distance.UseUnitsInDecimalString Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Distance.UseUnitsInDecimalString",
    "summary": "Gets or sets a boolean value indicating whether to use units in the decimal string representation."
  },
  {
    "id": "Value Property ",
    "name": "Distance.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Distance.Value",
    "summary": "Gets or sets the distance value in current units."
  },
  {
    "id": "CompareTo Method ",
    "name": "Distance.CompareTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.CompareTo",
    "summary": "Compares the current object with another object of the same type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "Distance.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.ConvertTo",
    "summary": "Converts the distance to the specified units."
  },
  {
    "id": "Equals Method ",
    "name": "Distance.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.Equals",
    "summary": "Indicates whether the current instance and the specified object are equal."
  },
  {
    "id": "Equals Method (Object)",
    "name": "Distance.Equals Method (Object)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Indicates whether the current instance and the specified object are equal."
  },
  {
    "id": "Equals Method (Distance)",
    "name": "Distance.Equals Method (Distance)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Indicates whether the current object is equal to another object of the same type."
  },
  {
    "id": "FromDecimalString Method ",
    "name": "Distance.FromDecimalString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.FromDecimalString",
    "summary": "Creates a distance from a decimal string representation."
  },
  {
    "id": "FromDecimalString Method (String)",
    "name": "Distance.FromDecimalString Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a distance from a decimal string representation."
  },
  {
    "id": "FromDecimalString Method (String, IFormatProvider)",
    "name": "Distance.FromDecimalString Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a distance from a decimal string representation."
  },
  {
    "id": "FromDecimalString Method (String, IFormatProvider, Distance.UnitType)",
    "name": "Distance.FromDecimalString Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a distance from a decimal string representation."
  },
  {
    "id": "FromFractionalFeetAndInchesString Method ",
    "name": "Distance.FromFractionalFeetAndInchesString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.FromFractionalFeetAndInchesString",
    "summary": "Creates a distance from a string representation of fractional feet and inches."
  },
  {
    "id": "FromFractionalFeetAndInchesString Method (String)",
    "name": "Distance.FromFractionalFeetAndInchesString Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a distance from a string representation of fractional feet and inches."
  },
  {
    "id": "FromFractionalFeetAndInchesString Method (String, IFormatProvider, Distance.UnitType)",
    "name": "Distance.FromFractionalFeetAndInchesString Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a distance from a string representation of fractional feet and inches."
  },
  {
    "id": "GetHashCode Method ",
    "name": "Distance.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.GetHashCode",
    "summary": "Returns the hash code for the current instance."
  },
  {
    "id": "Parse Method ",
    "name": "Distance.Parse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.Parse",
    "summary": "Parses a distance from a string representation using the current unit type and culture."
  },
  {
    "id": "Parse Method (String)",
    "name": "Distance.Parse Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance from a string representation using the current unit type and culture."
  },
  {
    "id": "Parse Method (String, IFormatProvider)",
    "name": "Distance.Parse Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance from a string representation using the current unit type and the given culture."
  },
  {
    "id": "Parse Method (String, IFormatProvider, Distance.UnitType)",
    "name": "Distance.Parse Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance from a string representation using the given unit type and culture."
  },
  {
    "id": "ToDecimalString Method ",
    "name": "Distance.ToDecimalString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.ToDecimalString",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToDecimalString Method ",
    "name": "Distance.ToDecimalString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToDecimalString Method (IFormatProvider)",
    "name": "Distance.ToDecimalString Method (IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToDecimalString Method (String)",
    "name": "Distance.ToDecimalString Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToDecimalString Method (String, IFormatProvider)",
    "name": "Distance.ToDecimalString Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToDecimalString Method (String, IFormatProvider, Distance.UnitType)",
    "name": "Distance.ToDecimalString Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Converts the distance to a decimal string representation."
  },
  {
    "id": "ToFractionalFeetAndInchesString Method ",
    "name": "Distance.ToFractionalFeetAndInchesString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.ToFractionalFeetAndInchesString",
    "summary": "Creates a string representation of the distance in feet and inches."
  },
  {
    "id": "ToFractionalFeetAndInchesString Method ",
    "name": "Distance.ToFractionalFeetAndInchesString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance in feet and inches."
  },
  {
    "id": "ToFractionalFeetAndInchesString Method (IFormatProvider)",
    "name": "Distance.ToFractionalFeetAndInchesString Method (IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance in feet and inches."
  },
  {
    "id": "ToFractionalInchesString Method ",
    "name": "Distance.ToFractionalInchesString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.ToFractionalInchesString",
    "summary": "Creates a string representation of the distance in inches."
  },
  {
    "id": "ToFractionalInchesString Method ",
    "name": "Distance.ToFractionalInchesString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance in inches."
  },
  {
    "id": "ToFractionalInchesString Method (IFormatProvider)",
    "name": "Distance.ToFractionalInchesString Method (IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance in inches."
  },
  {
    "id": "ToString Method ",
    "name": "Distance.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.ToString",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "ToString Method ",
    "name": "Distance.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "ToString Method (IFormatProvider)",
    "name": "Distance.ToString Method (IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "ToString Method (String)",
    "name": "Distance.ToString Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "ToString Method (String, IFormatProvider)",
    "name": "Distance.ToString Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "ToString Method (String, IFormatProvider, Distance.UnitType)",
    "name": "Distance.ToString Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Creates a string representation of the distance."
  },
  {
    "id": "TryParse Method ",
    "name": "Distance.TryParse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Distance.TryParse",
    "summary": "Attempts to parse a distance from a string representation using the current units."
  },
  {
    "id": "TryParse Method (String, Distance)",
    "name": "Distance.TryParse Method (String, Distance)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Attempts to parse a distance from a string representation using the current units."
  },
  {
    "id": "TryParse Method (String, IFormatProvider, Distance)",
    "name": "Distance.TryParse Method (String, IFormatProvider, Distance)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Attempts to parse a distance from a string representation using the current units."
  },
  {
    "id": "TryParse Method (String, IFormatProvider, Distance.UnitType, Distance)",
    "name": "Distance.TryParse Method (String, IFormatProvider, Distance.UnitType, Distance)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Attempts to parse a distance from a string representation using the current units."
  },
  {
    "id": "DistanceConverter Constructor ",
    "name": "DistanceConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter.#ctor",
    "summary": "Initializes a new instance of the DistanceConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "DistanceConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the distance type."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "DistanceConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the distance type to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "DistanceConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the distance type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "DistanceConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceConverter.ConvertTo",
    "summary": "Converts an object from the distance type to the given destination type."
  },
  {
    "id": "DistanceList Constructor ",
    "name": "DistanceList Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.#ctor",
    "summary": "Initializes a new instance of the structure."
  },
  {
    "id": "Count Property ",
    "name": "DistanceList.Count Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Count",
    "summary": "Gets the number of items in the list."
  },
  {
    "id": "IsReadOnly Property ",
    "name": "DistanceList.IsReadOnly Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.DistanceList.IsReadOnly",
    "summary": "Gets a boolean value indicating whether the collection is read-only."
  },
  {
    "id": "Item Property ",
    "name": "DistanceList.Item Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Item",
    "summary": "Gets or sets the item at the specified index."
  },
  {
    "id": "Add Method ",
    "name": "DistanceList.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Add",
    "summary": "Adds the specified item at the end of the list."
  },
  {
    "id": "Clear Method ",
    "name": "DistanceList.Clear Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Clear",
    "summary": "Clears the list."
  },
  {
    "id": "Contains Method ",
    "name": "DistanceList.Contains Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Contains",
    "summary": "Determines whether the specified item is in the list."
  },
  {
    "id": "CopyTo Method ",
    "name": "DistanceList.CopyTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.CopyTo",
    "summary": "Copies the contents of the list to an array."
  },
  {
    "id": "GetEnumerator Method ",
    "name": "DistanceList.GetEnumerator Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.GetEnumerator",
    "summary": "Gets an enumerator for enumeraring through the list."
  },
  {
    "id": "IndexOf Method ",
    "name": "DistanceList.IndexOf Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.IndexOf",
    "summary": "Returns the index of the first matching item in the list."
  },
  {
    "id": "Insert Method ",
    "name": "DistanceList.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Insert",
    "summary": "Inserts an item at the specified position."
  },
  {
    "id": "Parse Method ",
    "name": "DistanceList.Parse Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Parse",
    "summary": "Parses a distance list from a string representation."
  },
  {
    "id": "Parse Method (String)",
    "name": "DistanceList.Parse Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance list from a string representation."
  },
  {
    "id": "Parse Method (String, IFormatProvider)",
    "name": "DistanceList.Parse Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance list from a string representation."
  },
  {
    "id": "Parse Method (String, IFormatProvider, Distance.UnitType)",
    "name": "DistanceList.Parse Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Parses a distance list from a string representation."
  },
  {
    "id": "Remove Method ",
    "name": "DistanceList.Remove Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.Remove",
    "summary": "Removes the specified item."
  },
  {
    "id": "RemoveAt Method ",
    "name": "DistanceList.RemoveAt Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.RemoveAt",
    "summary": "Removes an item at the specified position."
  },
  {
    "id": "ToArray Method ",
    "name": "DistanceList.ToArray Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.ToArray",
    "summary": "Copies the contents of the list into a new array."
  },
  {
    "id": "ToString Method ",
    "name": "DistanceList.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceList.ToString",
    "summary": "Returns the string representation of the distance list."
  },
  {
    "id": "ToString Method ",
    "name": "DistanceList.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Returns the string representation of the distance list."
  },
  {
    "id": "ToString Method (IFormatProvider)",
    "name": "DistanceList.ToString Method (IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Returns the string representation of the distance list."
  },
  {
    "id": "ToString Method (String, IFormatProvider)",
    "name": "DistanceList.ToString Method (String, IFormatProvider)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Returns the string representation of the distance list."
  },
  {
    "id": "ToString Method (String, IFormatProvider, Distance.UnitType)",
    "name": "DistanceList.ToString Method (String, IFormatProvider, Distance.UnitType)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Returns the string representation of the distance list."
  },
  {
    "id": "DistanceListConverter Constructor ",
    "name": "DistanceListConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter.#ctor",
    "summary": "Initializes a new instance of the DistanceListConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "DistanceListConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the distance list type."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "DistanceListConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the distance list type to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "DistanceListConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the distance list type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "DistanceListConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DistanceListConverter.ConvertTo",
    "summary": "Converts an object from the distance list type to the given destination type."
  },
  {
    "id": "Double Constructor ",
    "name": "Double Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.#ctor",
    "summary": "Creates a new double datatype instance."
  },
  {
    "id": "Value Property ",
    "name": "Double.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Double.Value",
    "summary": "The value of the double datatype."
  },
  {
    "id": "CompareTo Method ",
    "name": "Double.CompareTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.CompareTo",
    "summary": "Compares the current object with another object of the same type."
  },
  {
    "id": "Equals Method ",
    "name": "Double.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.Equals",
    "summary": "Returns a value that indicates whether the current instance is equal to the given object."
  },
  {
    "id": "Equals Method (Object)",
    "name": "Double.Equals Method (Object)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Returns a value that indicates whether the current instance is equal to the given object."
  },
  {
    "id": "Equals Method (Double)",
    "name": "Double.Equals Method (Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Indicates whether the current object is equal to another object of the same type."
  },
  {
    "id": "GetHashCode Method ",
    "name": "Double.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.GetHashCode",
    "summary": "Returns the hash code for the current instance."
  },
  {
    "id": "GetSchema Method ",
    "name": "Double.GetSchema Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.GetSchema",
    "summary": "Gets the XML Schema for the datatype."
  },
  {
    "id": "ReadXml Method ",
    "name": "Double.ReadXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.ReadXml",
    "summary": "Parses a new value from the given reader."
  },
  {
    "id": "ToString Method ",
    "name": "Double.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.ToString",
    "summary": "Returns the string representation of the object."
  },
  {
    "id": "WriteXml Method ",
    "name": "Double.WriteXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Double.WriteXml",
    "summary": "Writes the value as XML to the given writer."
  },
  {
    "id": "DoubleConverter Constructor ",
    "name": "DoubleConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter.#ctor",
    "summary": "Initializes a new instance of the DoubleConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "DoubleConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the double datatype."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "DoubleConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the double datatype to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "DoubleConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the Tekla.Structures.Datatype.Double type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "DoubleConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.DoubleConverter.ConvertTo",
    "summary": "Converts an object from the double datatype to the given destination type."
  },
  {
    "id": "Value Property ",
    "name": "Enum(E).Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Enum`1.Value",
    "summary": "Gets or sets the value."
  },
  {
    "id": "GetSchema Method ",
    "name": "Enum(E).GetSchema Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Enum`1.GetSchema",
    "summary": "summaryM:Tekla.Structures.Datatype.Enum`1.GetSchema"
  },
  {
    "id": "ReadXml Method ",
    "name": "Enum(E).ReadXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Enum`1.ReadXml",
    "summary": "summaryM:Tekla.Structures.Datatype.Enum`1.ReadXml(System.Xml.XmlReader)"
  },
  {
    "id": "WriteXml Method ",
    "name": "Enum(E).WriteXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Enum`1.WriteXml",
    "summary": "summaryM:Tekla.Structures.Datatype.Enum`1.WriteXml(System.Xml.XmlWriter)"
  },
  {
    "id": "EnumConverter Constructor ",
    "name": "EnumConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.EnumConverter.#ctor",
    "summary": "Initializes a new instance of the EnumConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "EnumConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.EnumConverter.CanConvertFrom",
    "summary": "summaryM:Tekla.Structures.Datatype.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"
  },
  {
    "id": "CanConvertTo Method ",
    "name": "EnumConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.EnumConverter.CanConvertTo",
    "summary": "summaryM:Tekla.Structures.Datatype.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"
  },
  {
    "id": "ConvertFrom Method ",
    "name": "EnumConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.EnumConverter.ConvertFrom",
    "summary": "summaryM:Tekla.Structures.Datatype.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"
  },
  {
    "id": "ConvertTo Method ",
    "name": "EnumConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.EnumConverter.ConvertTo",
    "summary": "summaryM:Tekla.Structures.Datatype.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"
  },
  {
    "id": "Value Property ",
    "name": "IDoubleDataType.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.IDoubleDataType.Value",
    "summary": "The double value of the field."
  },
  {
    "id": "Value Property ",
    "name": "IIntDataType.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.IIntDataType.Value",
    "summary": "The integer value of the field."
  },
  {
    "id": "Integer Constructor ",
    "name": "Integer Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.#ctor",
    "summary": "Creates a new integer datatype instance."
  },
  {
    "id": "Value Property ",
    "name": "Integer.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.Integer.Value",
    "summary": "The value of the integer datatype."
  },
  {
    "id": "Equals Method ",
    "name": "Integer.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.Equals",
    "summary": "Returns a value that indicates whether the current instance is equal to the given object."
  },
  {
    "id": "GetHashCode Method ",
    "name": "Integer.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.GetHashCode",
    "summary": "Returns the hash code for the current instance."
  },
  {
    "id": "GetSchema Method ",
    "name": "Integer.GetSchema Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.GetSchema",
    "summary": "Gets the XML Schema for the datatype."
  },
  {
    "id": "ReadXml Method ",
    "name": "Integer.ReadXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.ReadXml",
    "summary": "Parses a new value from the given reader."
  },
  {
    "id": "ToString Method ",
    "name": "Integer.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.ToString",
    "summary": "Returns the string representation of the object."
  },
  {
    "id": "WriteXml Method ",
    "name": "Integer.WriteXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Integer.WriteXml",
    "summary": "Writes the value as XML to the given writer."
  },
  {
    "id": "IntegerConverter Constructor ",
    "name": "IntegerConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter.#ctor",
    "summary": "Initializes a new instance of the IntegerConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "IntegerConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the integer datatype."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "IntegerConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the integer datatype to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "IntegerConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the Tekla.Structures.Datatype.Integer type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "IntegerConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.IntegerConverter.ConvertTo",
    "summary": "Converts an object from the the integer datatype to the given destination type."
  },
  {
    "id": "Value Property ",
    "name": "IStringDataType.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.IStringDataType.Value",
    "summary": "The string value of the field."
  },
  {
    "id": "Settings Constructor ",
    "name": "Settings Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Settings.#ctor",
    "summary": "Initializes a new instance of the Settings class"
  },
  {
    "id": "GetValue Method ",
    "name": "Settings.GetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Settings.GetValue",
    "summary": "Gets the value of the setting with the given name."
  },
  {
    "id": "SetValue Method ",
    "name": "Settings.SetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Settings.SetValue",
    "summary": "Sets a setting to a value."
  },
  {
    "id": "TryGetValue Method ",
    "name": "Settings.TryGetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.Settings.TryGetValue",
    "summary": "Tries to get the value of the setting with the given name."
  },
  {
    "id": "TryGetValue Method (String, Object)",
    "name": "Settings.TryGetValue Method (String, Object)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Tries to get the value of the setting with the given name."
  },
  {
    "id": "TryGetValue(T) Method (String, T)",
    "name": "Settings.TryGetValue(T) Method (String, T)",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype",
    "summary": "Tries to get the value of the setting with the given name and given object type."
  },
  {
    "id": "SettingsProxy Constructor ",
    "name": "SettingsProxy Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.SettingsProxy.#ctor",
    "summary": "Creates a new settings proxy instance."
  },
  {
    "id": "GetValue Method ",
    "name": "SettingsProxy.GetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.SettingsProxy.GetValue",
    "summary": "Gets the value of the setting with the given name."
  },
  {
    "id": "SetValue Method ",
    "name": "SettingsProxy.SetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.SettingsProxy.SetValue",
    "summary": "Sets a setting to a value."
  },
  {
    "id": "TryGetValue Method ",
    "name": "SettingsProxy.TryGetValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.SettingsProxy.TryGetValue",
    "summary": "Tries to get the value of the setting with the given name."
  },
  {
    "id": "String Constructor ",
    "name": "String Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.#ctor",
    "summary": "Creates a new string datatype instance."
  },
  {
    "id": "Value Property ",
    "name": "String.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Datatype.String.Value",
    "summary": "The value of the string datatype."
  },
  {
    "id": "Equals Method ",
    "name": "String.Equals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.Equals",
    "summary": "Returns a value that indicates whether the current instance is equal to the given object."
  },
  {
    "id": "GetHashCode Method ",
    "name": "String.GetHashCode Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.GetHashCode",
    "summary": "Returns the hash code for the current instance."
  },
  {
    "id": "GetSchema Method ",
    "name": "String.GetSchema Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.GetSchema",
    "summary": "Gets the XML Schema for the datatype."
  },
  {
    "id": "ReadXml Method ",
    "name": "String.ReadXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.ReadXml",
    "summary": "Parses a new value from the given reader."
  },
  {
    "id": "ToString Method ",
    "name": "String.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.ToString",
    "summary": "Returns the string representation of the object."
  },
  {
    "id": "WriteXml Method ",
    "name": "String.WriteXml Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.String.WriteXml",
    "summary": "Writes the value as XML to the given writer."
  },
  {
    "id": "StringConverter Constructor ",
    "name": "StringConverter Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.StringConverter.#ctor",
    "summary": "Initializes a new instance of the StringConverter class"
  },
  {
    "id": "CanConvertFrom Method ",
    "name": "StringConverter.CanConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.StringConverter.CanConvertFrom",
    "summary": "Checks whether the conversion can be made from the source type to the string datatype."
  },
  {
    "id": "CanConvertTo Method ",
    "name": "StringConverter.CanConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.StringConverter.CanConvertTo",
    "summary": "Checks whether the conversion can be made from the string datatype to the destination type."
  },
  {
    "id": "ConvertFrom Method ",
    "name": "StringConverter.ConvertFrom Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.StringConverter.ConvertFrom",
    "summary": "Converts an object from the given culture to the Tekla.Structures.Datatype.String type."
  },
  {
    "id": "ConvertTo Method ",
    "name": "StringConverter.ConvertTo Method",
    "type": "method",
    "namespace": "Tekla.Structures.Datatype.StringConverter.ConvertTo",
    "summary": "Converts an object from the string datatype to the given destination type."
  },
  {
    "id": "ApplicationFormBase Constructor ",
    "name": "ApplicationFormBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ApplicationFormBase.#ctor",
    "summary": "The default constructor that does not need parameters.\r\n            Initializes the form and registers property bindings."
  },
  {
    "id": "ApplicationWindowBase Constructor ",
    "name": "ApplicationWindowBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ApplicationWindowBase.#ctor",
    "summary": "The default constructor that does not need parameters.\r\n            Initializes the window, property binding can be initialized with InitializeDataStorage()-method."
  },
  {
    "id": "InitializeDataStorage Method ",
    "name": "ApplicationWindowBase.InitializeDataStorage Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ApplicationWindowBase.InitializeDataStorage",
    "summary": "Initializes the datastorage and registers property bindings for defined viewmodel."
  },
  {
    "id": "AttributeTypeNameEditor Constructor ",
    "name": "AttributeTypeNameEditor Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.AttributeTypeNameEditor.#ctor",
    "summary": "Initializes a new instance of the AttributeTypeNameEditor class"
  },
  {
    "id": "EditValue Method ",
    "name": "AttributeTypeNameEditor.EditValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.AttributeTypeNameEditor.EditValue",
    "summary": "Edits the specified object's value using the editor style indicated by the GetEditStyle method."
  },
  {
    "id": "GetEditStyle Method ",
    "name": "AttributeTypeNameEditor.GetEditStyle Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.AttributeTypeNameEditor.GetEditStyle",
    "summary": "Gets the editor style used by the EditValue method."
  },
  {
    "id": "BindPropertyNameEditor Constructor ",
    "name": "BindPropertyNameEditor Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.BindPropertyNameEditor.#ctor",
    "summary": "Initializes a new instance of the BindPropertyNameEditor class"
  },
  {
    "id": "EditValue Method ",
    "name": "BindPropertyNameEditor.EditValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.BindPropertyNameEditor.EditValue",
    "summary": "Edits the specified object's value using the editor style indicated by the GetEditStyle method."
  },
  {
    "id": "GetEditStyle Method ",
    "name": "BindPropertyNameEditor.GetEditStyle Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.BindPropertyNameEditor.GetEditStyle",
    "summary": "Gets the editor style used by the EditValue method."
  },
  {
    "id": "Dialogs Constructor ",
    "name": "Dialogs Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.#ctor",
    "summary": "Initializes a new instance of the Dialogs class"
  },
  {
    "id": "ClosePluginDialogs Method ",
    "name": "Dialogs.ClosePluginDialogs Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.ClosePluginDialogs",
    "summary": "Close all dialogs to end the threads running the corresponding message loops."
  },
  {
    "id": "GetPluginFormBaseByPluginFormName Method ",
    "name": "Dialogs.GetPluginFormBaseByPluginFormName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.GetPluginFormBaseByPluginFormName",
    "summary": "Retrieves an instance of the form."
  },
  {
    "id": "GetPluginWindowBaseByPluginFormName Method ",
    "name": "Dialogs.GetPluginWindowBaseByPluginFormName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.GetPluginWindowBaseByPluginFormName",
    "summary": "Retrieves an instance of the form."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndApply Method ",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndApply Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.LoadAttributeFileNameToDialogAndApply",
    "summary": "Uses the attributes found from the attribute file as the applied values for the specified dialog."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndApply Method (String)",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndApply Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Uses the attributes found from the attribute file as the applied values for the specified dialog."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndApply Method (String, String)",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndApply Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Loads the specified dialog's applied values from the attribute file."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndModify Method ",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndModify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.LoadAttributeFileNameToDialogAndModify",
    "summary": "Uses the attributes found from the attribute file as the current values for the specified dialog.\r\n            Modifies the current selected instance. Applied values for this dialog are not changed."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndModify Method (String)",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndModify Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Uses the attributes found from the attribute file as the current values for the specified dialog.\r\n            Modifies the current selected instance. Applied values for this dialog are not changed."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndModify Method (String, String)",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndModify Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Loads the specified dialog's current values from the attribute file and modifies the current selected instance."
  },
  {
    "id": "LoadAttributeFileNameToDialogAndSave Method ",
    "name": "Dialogs.LoadAttributeFileNameToDialogAndSave Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.LoadAttributeFileNameToDialogAndSave",
    "summary": "Uses the attributes found from the attribute file for the specified dialog and saves to file."
  },
  {
    "id": "LoadAttributeFileToStack Method ",
    "name": "Dialogs.LoadAttributeFileToStack Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.LoadAttributeFileToStack",
    "summary": "Opens a dialog and forces it to get the values from the currently selected part."
  },
  {
    "id": "LoadDialogs Method ",
    "name": "Dialogs.LoadDialogs Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.LoadDialogs",
    "summary": "Reads the PluginFormBase and PluginWindowBase dialogs from all found dll files in bin\\dialogs and bin\\plugins."
  },
  {
    "id": "OpenDialog Method ",
    "name": "Dialogs.OpenDialog Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.OpenDialog",
    "summary": "Opens a dialog. The name of the dialog is asked from the Tekla Structures core."
  },
  {
    "id": "OpenDialogAndGet Method ",
    "name": "Dialogs.OpenDialogAndGet Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.OpenDialogAndGet",
    "summary": "Opens a dialog and forces it to get the values from the currently selected part."
  },
  {
    "id": "ReloadDialogs Method ",
    "name": "Dialogs.ReloadDialogs Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.ReloadDialogs",
    "summary": "Reloads all PluginFormBase dialogs with default/standard values."
  },
  {
    "id": "SetSettings Method ",
    "name": "Dialogs.SetSettings Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Dialogs.SetSettings",
    "summary": "Forces the dialog system to get the language and localization settings from Tekla Structures."
  },
  {
    "id": "Show Method ",
    "name": "ErrorDialog.Show Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ErrorDialog.Show",
    "summary": "Shows a new error dialog."
  },
  {
    "id": "Show Method (Exception, ErrorDialog.Severity)",
    "name": "ErrorDialog.Show Method (Exception, ErrorDialog.Severity)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Shows a new error dialog."
  },
  {
    "id": "Show Method (String, List(String), ErrorDialog.Severity)",
    "name": "ErrorDialog.Show Method (String, List(String), ErrorDialog.Severity)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Shows a new error dialog."
  },
  {
    "id": "Show Method (String, String, ErrorDialog.Severity)",
    "name": "ErrorDialog.Show Method (String, String, ErrorDialog.Severity)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Shows a new error dialog."
  },
  {
    "id": "FormBase Constructor ",
    "name": "FormBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.#ctor",
    "summary": "The default constructor that does not need parameters.\r\n            Initializes the form and registers property bindings."
  },
  {
    "id": "Localization Property ",
    "name": "FormBase.Localization Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.FormBase.Localization",
    "summary": "The localization instance for the dialog. Each dialog has its own localization instance\r\n            that has read the localization files needed for that dialog."
  },
  {
    "id": "ApplyValues Method ",
    "name": "FormBase.ApplyValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.ApplyValues",
    "summary": "Loads the dialog values from a file and performs on the loaded values. To match the files to a certain dialog, the file suffix is set as the dialog type"
  },
  {
    "id": "GetConnectionStatus Method ",
    "name": "FormBase.GetConnectionStatus Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.GetConnectionStatus",
    "summary": "Returns true if a proper connection to the Tekla Structures process has been established.\r\n            Currently, there's no way to re-establish the connection."
  },
  {
    "id": "GetUnitDecimals Method ",
    "name": "FormBase.GetUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.GetUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses with the specified unit type."
  },
  {
    "id": "InitializeAngleUnitDecimals Method ",
    "name": "FormBase.InitializeAngleUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.InitializeAngleUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying the angle unit and\r\n            initializes Angle class to use that."
  },
  {
    "id": "InitializeDistanceUnitDecimals Method ",
    "name": "FormBase.InitializeDistanceUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.InitializeDistanceUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying the \"length\" unit and\r\n            initializes the distance datatype to use that."
  },
  {
    "id": "InitializeForm Method ",
    "name": "FormBase.InitializeForm Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.InitializeForm",
    "summary": "Prepares the data storage for the dialog and scans through the fields."
  },
  {
    "id": "InitializeUnitDecimals Method ",
    "name": "FormBase.InitializeUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.InitializeUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying its units and\r\n            initializes the Tekla.Structures.Datatype classes to use them."
  },
  {
    "id": "LoadValues Method ",
    "name": "FormBase.LoadValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.LoadValues",
    "summary": "Loads the dialog values from a file. To match the files to a certain dialog,\r\n            the file suffix is set as the dialog type's name."
  },
  {
    "id": "ModifyValues Method ",
    "name": "FormBase.ModifyValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.ModifyValues",
    "summary": "Loads the dialog values from a file and performs on the loaded values. To match the files to a certain dialog, the file suffix is set as the dialog type"
  },
  {
    "id": "SaveValues Method ",
    "name": "FormBase.SaveValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.SaveValues",
    "summary": "Serializes the dialog values to an xml file."
  },
  {
    "id": "SetAttributeValue Method ",
    "name": "FormBase.SetAttributeValue Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.SetAttributeValue",
    "summary": "Sets a value for the given control. When the dialog is not shown, setting a property\r\n             directly for a control (such as textBox1.Text = \"text\") will not work for controls that\r\n             have a Tekla Structures AttributeTypeName set. This method is going to have to be used\r\n             to set the value."
  },
  {
    "id": "ShowForm Method ",
    "name": "FormBase.ShowForm Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.ShowForm",
    "summary": "Displays the form."
  },
  {
    "id": "UpdateValues Method ",
    "name": "FormBase.UpdateValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBase.UpdateValues",
    "summary": "Rereads and updates all the field values on the form."
  },
  {
    "id": "CheckScreenPosition Method ",
    "name": "FormBorders.CheckScreenPosition Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBorders.CheckScreenPosition",
    "summary": "Moves form to primary screen."
  },
  {
    "id": "CheckScreenPosition Method (Form)",
    "name": "FormBorders.CheckScreenPosition Method (Form)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Moves form to primary screen."
  },
  {
    "id": "CheckScreenPosition Method (Window)",
    "name": "FormBorders.CheckScreenPosition Method (Window)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Moves window to primary screen."
  },
  {
    "id": "IsOnActiveDisplays Method ",
    "name": "FormBorders.IsOnActiveDisplays Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBorders.IsOnActiveDisplays",
    "summary": "Checks form quadrants to be sure full extents is on a single screen"
  },
  {
    "id": "RestoreFormSizeAndLocation Method ",
    "name": "FormBorders.RestoreFormSizeAndLocation Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBorders.RestoreFormSizeAndLocation",
    "summary": "Restores the form size and location from the registry."
  },
  {
    "id": "RestoreFormSizeAndLocation Method (Form)",
    "name": "FormBorders.RestoreFormSizeAndLocation Method (Form)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Restores the form size and location from the registry."
  },
  {
    "id": "RestoreFormSizeAndLocation Method (Window)",
    "name": "FormBorders.RestoreFormSizeAndLocation Method (Window)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Restores the WPF window size and location from the registry."
  },
  {
    "id": "StoreFormSizeAndLocation Method ",
    "name": "FormBorders.StoreFormSizeAndLocation Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.FormBorders.StoreFormSizeAndLocation",
    "summary": "Stores the form size and location into the registry."
  },
  {
    "id": "StoreFormSizeAndLocation Method (Form)",
    "name": "FormBorders.StoreFormSizeAndLocation Method (Form)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Stores the form size and location into the registry."
  },
  {
    "id": "StoreFormSizeAndLocation Method (Window)",
    "name": "FormBorders.StoreFormSizeAndLocation Method (Window)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Stores the window size and location into the registry."
  },
  {
    "id": "DisplayHelpTopic Method ",
    "name": "HelpViewer.DisplayHelpTopic Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.HelpViewer.DisplayHelpTopic",
    "summary": "Method for opening Tekla Structures help viewer with given help topic.\r\n            Method requires Tekla Structures to be running."
  },
  {
    "id": "DisplayHelpTopicIndependent Method ",
    "name": "HelpViewer.DisplayHelpTopicIndependent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.HelpViewer.DisplayHelpTopicIndependent",
    "summary": "Method for opening Tekla Structures help viewer independently from given file path with given help topic and language."
  },
  {
    "id": "Localization Constructor ",
    "name": "Localization Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.#ctor",
    "summary": "Creates a new localization instance."
  },
  {
    "id": "Localization Constructor ",
    "name": "Localization Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Creates a new localization instance."
  },
  {
    "id": "Localization Constructor (String, String)",
    "name": "Localization Constructor (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Creates a new localization instance."
  },
  {
    "id": "DefaultLocalizationFile Property ",
    "name": "Localization.DefaultLocalizationFile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.Localization.DefaultLocalizationFile",
    "summary": "The path and name of the default localization file."
  },
  {
    "id": "DefaultLocalizationPath Property ",
    "name": "Localization.DefaultLocalizationPath Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.Localization.DefaultLocalizationPath",
    "summary": "The path and directory name where to find localization files."
  },
  {
    "id": "Language Property ",
    "name": "Localization.Language Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.Localization.Language",
    "summary": "Gets or sets the language that is currently used in Tekla Structures."
  },
  {
    "id": "GetLocalizationFileFullPath Method ",
    "name": "Localization.GetLocalizationFileFullPath Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.GetLocalizationFileFullPath",
    "summary": "Returns localization file if found from environment"
  },
  {
    "id": "GetText Method ",
    "name": "Localization.GetText Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.GetText",
    "summary": "Gets the translation for the current language. \r\n            The translations are searched with the given identifier string."
  },
  {
    "id": "LoadAidFile Method ",
    "name": "Localization.LoadAidFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.LoadAidFile",
    "summary": "Loads the localization strings from an aid file. Several files may be used concurrently,\r\n            just call LoadAidFile for each file. The translations are searched in the loading order and the first match is returned."
  },
  {
    "id": "LoadAilFile Method ",
    "name": "Localization.LoadAilFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.LoadAilFile",
    "summary": "Loads the localization strings from an ail file. Several files may be used concurrently,\r\n            just call LoadAilFile for each file. The translations are searched in the loading order and the first match is returned."
  },
  {
    "id": "LoadFile Method ",
    "name": "Localization.LoadFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.LoadFile",
    "summary": "Loads the localization strings from a file. Several files may be used concurrently, \r\n            just call LoadFile for each file. The translations are searched in the loading order and the first match is returned.\r\n            The method uses the extension of the filename to identify the file type \r\n            (\".xml\", \".aid\" or \".ail\")."
  },
  {
    "id": "LoadXMLFile Method ",
    "name": "Localization.LoadXMLFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.LoadXMLFile",
    "summary": "Loads the localization strings from an xml file. Several files may be used concurrently,\r\n            just call LoadXMLFile for each file. The translations are searched in the loading order and the first match is returned."
  },
  {
    "id": "Localize Method ",
    "name": "Localization.Localize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Localize",
    "summary": "Localizes application settings."
  },
  {
    "id": "Localize Method (ApplicationSettingsBase)",
    "name": "Localization.Localize Method (ApplicationSettingsBase)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Localizes application settings."
  },
  {
    "id": "Localize Method (Control)",
    "name": "Localization.Localize Method (Control)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Localizes a control recursively."
  },
  {
    "id": "Localize Method (MenuItem)",
    "name": "Localization.Localize Method (MenuItem)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Localizes a MenuItem control recursively."
  },
  {
    "id": "LocalizeToolTip Method ",
    "name": "Localization.LocalizeToolTip Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.LocalizeToolTip",
    "summary": "Localizes a ToolTip control."
  },
  {
    "id": "RegisterLocalizationCallback Method ",
    "name": "Localization.RegisterLocalizationCallback Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.RegisterLocalizationCallback",
    "summary": "Registers a localization callback which is used to translate the registered control types."
  },
  {
    "id": "Localization.Util Constructor ",
    "name": "Localization.Util Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.#ctor",
    "summary": "Tekla.Structures.Dialog.Localization.Util"
  },
  {
    "id": "LocalizeDataGridView Method ",
    "name": "Localization.Util.LocalizeDataGridView Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.LocalizeDataGridView",
    "summary": "Localizes a DataGridView."
  },
  {
    "id": "LocalizeImageListComboBox Method ",
    "name": "Localization.Util.LocalizeImageListComboBox Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.LocalizeImageListComboBox",
    "summary": "Localizes an ImageListComboBox."
  },
  {
    "id": "LocalizeListControl Method ",
    "name": "Localization.Util.LocalizeListControl Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.LocalizeListControl",
    "summary": "Localizes a List control."
  },
  {
    "id": "LocalizeToolStrip Method ",
    "name": "Localization.Util.LocalizeToolStrip Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.LocalizeToolStrip",
    "summary": "Localizes a ToolStrip."
  },
  {
    "id": "Localization.Util.PropertyLocalizer Constructor ",
    "name": "Localization.Util.PropertyLocalizer Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.PropertyLocalizer.#ctor",
    "summary": "Creates a new instance of the localizer."
  },
  {
    "id": "Localize Method ",
    "name": "Localization.Util.PropertyLocalizer.Localize Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.Localization.Util.PropertyLocalizer.Localize",
    "summary": "Localizes the object with the given localization instance."
  },
  {
    "id": "LocExtension Constructor ",
    "name": "LocExtension Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.LocExtension.#ctor",
    "summary": "Localization extension for strings referred in xaml"
  },
  {
    "id": "Handle Property ",
    "name": "MainWindow.Handle Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.MainWindow.Handle",
    "summary": "Gets the handle."
  },
  {
    "id": "AddExternalWindow Method ",
    "name": "MainWindow.AddExternalWindow Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.MainWindow.AddExternalWindow",
    "summary": "Registers the entire dialog to be insensitive at certain\r\n            points, for example while modal Tekla Structures system dialog boxes\r\n            are open. When insensitive, the dialog does not respond to any input.\r\n            \r\n            You can remove the registration of the dialog with RemoveExternalWindow(String, IntPtr)."
  },
  {
    "id": "RemoveExternalWindow Method ",
    "name": "MainWindow.RemoveExternalWindow Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.MainWindow.RemoveExternalWindow",
    "summary": "Removes a registration done with AddExternalWindow(String, IntPtr)."
  },
  {
    "id": "PluginFormBase Constructor ",
    "name": "PluginFormBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginFormBase.#ctor",
    "summary": "Runs the FormBase constructor and loads the default .NET localization file (DotNetDialogStrings.ail)."
  },
  {
    "id": "ShowInTaskbar Property ",
    "name": "PluginFormBase.ShowInTaskbar Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.PluginFormBase.ShowInTaskbar",
    "summary": "Hides (shadows) the ShowInTaskbar property by setting the property to false."
  },
  {
    "id": "Get Method ",
    "name": "PluginFormBase.Get Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginFormBase.Get",
    "summary": "Gets the dialog values from the part that is currently selected in Tekla Structures."
  },
  {
    "id": "ReloadForm Method ",
    "name": "PluginFormBase.ReloadForm Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginFormBase.ReloadForm",
    "summary": "Reloads the dialog values."
  },
  {
    "id": "PluginWindowBase Constructor ",
    "name": "PluginWindowBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase.#ctor",
    "summary": "Runs the WindowBase constructor and loads the default .NET localization file (DotNetDialogStrings.ail).\r\n            Datastorage is built based on given viewmodel object"
  },
  {
    "id": "ShowInTaskbar Property ",
    "name": "PluginWindowBase.ShowInTaskbar Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase.ShowInTaskbar",
    "summary": "Hides (shadows) the ShowInTaskbar property by setting the property to false."
  },
  {
    "id": "Dispose Method ",
    "name": "PluginWindowBase.Dispose Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase.Dispose",
    "summary": "Cleans up any resources being used."
  },
  {
    "id": "Get Method ",
    "name": "PluginWindowBase.Get Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase.Get",
    "summary": "Gets the dialog values from the part that is currently selected in Tekla Structures."
  },
  {
    "id": "ReloadWindow Method ",
    "name": "PluginWindowBase.ReloadWindow Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.PluginWindowBase.ReloadWindow",
    "summary": "Reloads the dialog values."
  },
  {
    "id": "ProfileConversion Constructor ",
    "name": "ProfileConversion Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ProfileConversion.#ctor",
    "summary": "Initializes a new instance of the ProfileConversion class"
  },
  {
    "id": "ConvertFromCurrentUnits Method ",
    "name": "ProfileConversion.ConvertFromCurrentUnits Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ProfileConversion.ConvertFromCurrentUnits",
    "summary": "Converts a profile string from current units to internal units (set in\r\n            Units and decimals options)."
  },
  {
    "id": "ConvertToCurrentUnits Method ",
    "name": "ProfileConversion.ConvertToCurrentUnits Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.ProfileConversion.ConvertToCurrentUnits",
    "summary": "Converts a profile string from internal units to current units (set in\r\n            Units and decimals options)."
  },
  {
    "id": "StructuresDialogArrayAttribute Constructor ",
    "name": "StructuresDialogArrayAttribute Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogArrayAttribute.#ctor",
    "summary": "Initializes a new StructuresDialogArrayAttribute instance."
  },
  {
    "id": "AttributeName Property ",
    "name": "StructuresDialogArrayAttribute.AttributeName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogArrayAttribute.AttributeName",
    "summary": "Gets the attribute name of the interface."
  },
  {
    "id": "ToString Method ",
    "name": "StructuresDialogArrayAttribute.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogArrayAttribute.ToString",
    "summary": "Returns a string that represents the current StructuresDialogArrayAttribute object."
  },
  {
    "id": "StructuresDialogAttribute Constructor ",
    "name": "StructuresDialogAttribute Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute.#ctor",
    "summary": "Initializes a new StructuresDialogAttribute instance."
  },
  {
    "id": "StructuresDialogAttribute Constructor (String)",
    "name": "StructuresDialogAttribute Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Initializes a new StructuresDialogAttribute instance."
  },
  {
    "id": "StructuresDialogAttribute Constructor (String, String)",
    "name": "StructuresDialogAttribute Constructor (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Initializes a new StructuresDialogAttribute instance."
  },
  {
    "id": "StructuresDialogAttribute Constructor (String, Type)",
    "name": "StructuresDialogAttribute Constructor (String, Type)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Initializes a new StructuresDialogAttribute instance."
  },
  {
    "id": "AttributeName Property ",
    "name": "StructuresDialogAttribute.AttributeName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute.AttributeName",
    "summary": "Gets the attribute name of the property."
  },
  {
    "id": "AttributeType Property ",
    "name": "StructuresDialogAttribute.AttributeType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute.AttributeType",
    "summary": "Gets the attribute type of the property."
  },
  {
    "id": "GetCorrectDialogAttributeType Method ",
    "name": "StructuresDialogAttribute.GetCorrectDialogAttributeType Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute.GetCorrectDialogAttributeType",
    "summary": "Initializes a new StructuresDialogAttribute instance."
  },
  {
    "id": "ToString Method ",
    "name": "StructuresDialogAttribute.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogAttribute.ToString",
    "summary": "Returns a string that represents the current StructuresDialogAttribute object."
  },
  {
    "id": "StructuresDialogFilterAttribute Constructor ",
    "name": "StructuresDialogFilterAttribute Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogFilterAttribute.#ctor",
    "summary": "Initializes a new StructuresDialogFilterAttribute instance."
  },
  {
    "id": "AttributeName Property ",
    "name": "StructuresDialogFilterAttribute.AttributeName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogFilterAttribute.AttributeName",
    "summary": "Gets the attribute name of the property."
  },
  {
    "id": "ToString Method ",
    "name": "StructuresDialogFilterAttribute.ToString Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresDialogFilterAttribute.ToString",
    "summary": "Returns a string that represents the current StructuresDialogFilterAttribute object."
  },
  {
    "id": "StructuresExtender Constructor ",
    "name": "StructuresExtender Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.#ctor",
    "summary": "Initializes a new instance of the StructuresExtender class"
  },
  {
    "id": "CanExtend Method ",
    "name": "StructuresExtender.CanExtend Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.CanExtend",
    "summary": "Specifies whether the current object can provide its extender properties to the specified object."
  },
  {
    "id": "GetAttributeName Method ",
    "name": "StructuresExtender.GetAttributeName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.GetAttributeName",
    "summary": "Retrieves the AttributeName text associated with the specified control."
  },
  {
    "id": "GetAttributeTypeName Method ",
    "name": "StructuresExtender.GetAttributeTypeName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.GetAttributeTypeName",
    "summary": "Retrieves the AttributeTypeName text associated with the specified control."
  },
  {
    "id": "GetBindPropertyName Method ",
    "name": "StructuresExtender.GetBindPropertyName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.GetBindPropertyName",
    "summary": "Retrieves the BindPropertyName text associated with the specified control."
  },
  {
    "id": "GetIsFilter Method ",
    "name": "StructuresExtender.GetIsFilter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.GetIsFilter",
    "summary": "Retrieves the IsFilter boolean value associated with the specified control."
  },
  {
    "id": "SetAttributeName Method ",
    "name": "StructuresExtender.SetAttributeName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.SetAttributeName",
    "summary": "Associates AttributeName text with the specified control."
  },
  {
    "id": "SetAttributeTypeName Method ",
    "name": "StructuresExtender.SetAttributeTypeName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.SetAttributeTypeName",
    "summary": "Associates the AttributeTypeName text with the specified control."
  },
  {
    "id": "SetBindPropertyName Method ",
    "name": "StructuresExtender.SetBindPropertyName Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.SetBindPropertyName",
    "summary": "Associates the BindPropertyName text with the specified control."
  },
  {
    "id": "SetIsFilter Method ",
    "name": "StructuresExtender.SetIsFilter Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresExtender.SetIsFilter",
    "summary": "Associates the IsFilter boolean value with the specified control."
  },
  {
    "id": "BinFolder Property ",
    "name": "StructuresInstallation.BinFolder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.BinFolder",
    "summary": "Gets Path to Tekla Structures binary (bin) directory."
  },
  {
    "id": "EnvBaseFolder Property ",
    "name": "StructuresInstallation.EnvBaseFolder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.EnvBaseFolder",
    "summary": "Gets Path to Tekla Structures XSDATADIR directory. XSDATADIR is defined in the teklastructures.ini file. \r\n            It points to a location, where the installation installs the environment files and folders. Example: C:\\ProgramData\\Trimble\\Tekla Structures\\Version"
  },
  {
    "id": "InstallFolder Property ",
    "name": "StructuresInstallation.InstallFolder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.InstallFolder",
    "summary": "Gets path to Tekla Structures installation directory."
  },
  {
    "id": "MessageFolder Property ",
    "name": "StructuresInstallation.MessageFolder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.MessageFolder",
    "summary": "Gets path to Tekla Structures messages directory."
  },
  {
    "id": "MessagesFolder Property ",
    "name": "StructuresInstallation.MessagesFolder Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.MessagesFolder",
    "summary": "Gets a list Paths to Tekla Structures messages directories."
  },
  {
    "id": "GetLocalizationFile Method ",
    "name": "StructuresInstallation.GetLocalizationFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.StructuresInstallation.GetLocalizationFile",
    "summary": "Retrieves localization file from configured environment"
  },
  {
    "id": "GetLocalizationFile Method (String)",
    "name": "StructuresInstallation.GetLocalizationFile Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Retrieves localization file from configured environment"
  },
  {
    "id": "GetLocalizationFile Method (String, String)",
    "name": "StructuresInstallation.GetLocalizationFile Method (String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog",
    "summary": "Retrieves localization file from configured environment"
  },
  {
    "id": "TeklaProgressBar Constructor ",
    "name": "TeklaProgressBar Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.TeklaProgressBar.#ctor",
    "summary": "Initializes the common progress bar control."
  },
  {
    "id": "Text Property ",
    "name": "TeklaProgressBar.Text Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.TeklaProgressBar.Text",
    "summary": "Gets or sets the current message text of the progress bar."
  },
  {
    "id": "Value Property ",
    "name": "TeklaProgressBar.Value Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.TeklaProgressBar.Value",
    "summary": "Gets or sets the current position of the progress bar."
  },
  {
    "id": "WindowBase Constructor ",
    "name": "WindowBase Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.#ctor",
    "summary": "The default constructor that does not need parameters.\r\n            Initializes the window and registers property bindings."
  },
  {
    "id": "Localization Property ",
    "name": "WindowBase.Localization Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.WindowBase.Localization",
    "summary": "The localization instance for the dialog. Each dialog has its own localization instance\r\n            that has read the localization files needed for that dialog."
  },
  {
    "id": "LocExtension Property ",
    "name": "WindowBase.LocExtension Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.WindowBase.LocExtension",
    "summary": "The localization instance for the dialog. Each dialog has its own localization instance\r\n            that has read the localization files needed for that dialog."
  },
  {
    "id": "UseDefaultStyle Property ",
    "name": "WindowBase.UseDefaultStyle Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.WindowBase.UseDefaultStyle",
    "summary": "Use default style in all the window controls or not. \r\n            If the property is not set in the window constructor the default value (true) is used."
  },
  {
    "id": "ApplyValues Method ",
    "name": "WindowBase.ApplyValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.ApplyValues",
    "summary": "Loads the dialog values from a file and performs on the loaded values. To match the files to a certain dialog, the file suffix is set as the dialog type"
  },
  {
    "id": "GetConnectionStatus Method ",
    "name": "WindowBase.GetConnectionStatus Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.GetConnectionStatus",
    "summary": "Returns true if a proper connection to the Tekla Structures process has been established.\r\n            Currently, there's no way to re-establish the connection."
  },
  {
    "id": "GetUnitDecimals Method ",
    "name": "WindowBase.GetUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.GetUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses with the specified unit type."
  },
  {
    "id": "InitializeAngleUnitDecimals Method ",
    "name": "WindowBase.InitializeAngleUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.InitializeAngleUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying the angle unit and\r\n            initializes Angle class to use that."
  },
  {
    "id": "InitializeDistanceUnitDecimals Method ",
    "name": "WindowBase.InitializeDistanceUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.InitializeDistanceUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying the \"length\" unit and\r\n            initializes the distance datatype to use that."
  },
  {
    "id": "InitializeUnitDecimals Method ",
    "name": "WindowBase.InitializeUnitDecimals Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.InitializeUnitDecimals",
    "summary": "Gets the number of decimals Tekla Structures uses for displaying its units and\r\n            initializes the Tekla.Structures.Datatype classes to use them."
  },
  {
    "id": "InitializeWindow Method ",
    "name": "WindowBase.InitializeWindow Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.InitializeWindow",
    "summary": "Prepares the data storage for the dialog and scans through the fields."
  },
  {
    "id": "LoadValues Method ",
    "name": "WindowBase.LoadValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.LoadValues",
    "summary": "Loads the dialog values from a file. To match the files to a certain dialog, \r\n            the file suffix is set as the dialog type's name."
  },
  {
    "id": "ModifyValues Method ",
    "name": "WindowBase.ModifyValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.ModifyValues",
    "summary": "Loads the dialog values from a file and performs on the loaded values. To match the files to a certain dialog, the file suffix is set as the dialog type"
  },
  {
    "id": "SaveValues Method ",
    "name": "WindowBase.SaveValues Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.SaveValues",
    "summary": "Serializes the dialog values to an xml file."
  },
  {
    "id": "ShowWindow Method ",
    "name": "WindowBase.ShowWindow Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.ShowWindow",
    "summary": "Displays the window."
  },
  {
    "id": "UpdateDataStorageFromViewModel Method ",
    "name": "WindowBase.UpdateDataStorageFromViewModel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.WindowBase.UpdateDataStorageFromViewModel",
    "summary": "DO NOT USE! For internal usage only!"
  },
  {
    "id": "BindableRadioButton Constructor ",
    "name": "BindableRadioButton Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.BindableRadioButton.#ctor",
    "summary": "Initializes a new instance of the BindableRadioButton class"
  },
  {
    "id": "Checked Property ",
    "name": "BindableRadioButton.Checked Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.BindableRadioButton.Checked",
    "summary": "Gets or sets a value indicating whether the control is checked."
  },
  {
    "id": "BoltCatalogSize Constructor ",
    "name": "BoltCatalogSize Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.BoltCatalogSize.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "BoltCatalogStandard Constructor ",
    "name": "BoltCatalogStandard Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.BoltCatalogStandard.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "LinkedBoltCatalogSize Property ",
    "name": "BoltCatalogStandard.LinkedBoltCatalogSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.BoltCatalogStandard.LinkedBoltCatalogSize",
    "summary": "The BoltCatalogSize control linked to the BoltCatalogStandard control.\r\n            Bolt catalog controls always need to be in pairs, meaning in every dialog\r\n            there has to be a BoltCatalogStandard and a BoltCatalogSize control."
  },
  {
    "id": "CommitAction Constructor ",
    "name": "CommitAction Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.CommitAction.#ctor",
    "summary": "Initializes a new instance of the CommitAction class."
  },
  {
    "id": "ComponentCatalog Constructor ",
    "name": "ComponentCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ComponentCatalog.#ctor",
    "summary": "Initializes a new instance of the ComponentCatalog class."
  },
  {
    "id": "SelectedComponentType Property ",
    "name": "ComponentCatalog.SelectedComponentType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ComponentCatalog.SelectedComponentType",
    "summary": "Gets or sets the selected component type in the control."
  },
  {
    "id": "SelectedName Property ",
    "name": "ComponentCatalog.SelectedName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ComponentCatalog.SelectedName",
    "summary": "Gets or sets the selected component name in the control."
  },
  {
    "id": "SelectedNumber Property ",
    "name": "ComponentCatalog.SelectedNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ComponentCatalog.SelectedNumber",
    "summary": "Gets or sets the selected component number in the control."
  },
  {
    "id": "CreateApplyCancel Constructor ",
    "name": "CreateApplyCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.CreateApplyCancel.#ctor",
    "summary": "Initializes CreateApplyCancel user control."
  },
  {
    "id": "CreateDialog Constructor ",
    "name": "CreateDialog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.CreateDialog.#ctor",
    "summary": "Initializes a new instance of the CreateDialog class."
  },
  {
    "id": "CustomObservableCollection(T) Constructor ",
    "name": "CustomObservableCollection(T) Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.CustomObservableCollection`1.#ctor",
    "summary": "CustomObservableCollection constructor."
  },
  {
    "id": "CustomObservableCollection(T) Constructor ",
    "name": "CustomObservableCollection(T) Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "CustomObservableCollection constructor."
  },
  {
    "id": "CustomObservableCollection(T) Constructor (IEnumerable(T))",
    "name": "CustomObservableCollection(T) Constructor (IEnumerable(T))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "CustomObservableCollection constructor."
  },
  {
    "id": "CustomObservableCollection(T) Constructor (List(T))",
    "name": "CustomObservableCollection(T) Constructor (List(T))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "CustomObservableCollection constructor."
  },
  {
    "id": "Repopulate Method ",
    "name": "CustomObservableCollection(T).Repopulate Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.CustomObservableCollection`1.Repopulate",
    "summary": "CustomObservableCollection repopulator, sends notification about property and collection change."
  },
  {
    "id": "DataGrid Constructor ",
    "name": "DataGrid Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.DataGrid.#ctor",
    "summary": "Initializes a new instance of the DataGrid class."
  },
  {
    "id": "EnvironmentFiles Constructor ",
    "name": "EnvironmentFiles Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.#ctor",
    "summary": "Initializes a new instance of the EnvironmentFiles class"
  },
  {
    "id": "PropertyFileDirectories Property ",
    "name": "EnvironmentFiles.PropertyFileDirectories Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.PropertyFileDirectories",
    "summary": "The directories where to look for property files."
  },
  {
    "id": "GetAttributeFile Method ",
    "name": "EnvironmentFiles.GetAttributeFile Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.GetAttributeFile",
    "summary": "Gets a file info representing the first match in the standard property file directories."
  },
  {
    "id": "GetAttributeFile Method (String)",
    "name": "EnvironmentFiles.GetAttributeFile Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a file info representing the first match in the standard property file directories."
  },
  {
    "id": "GetAttributeFile Method (List(String), String)",
    "name": "EnvironmentFiles.GetAttributeFile Method (List(String), String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a file info representing the first match in the search directories."
  },
  {
    "id": "GetAttributeFiles Method ",
    "name": "EnvironmentFiles.GetAttributeFiles Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.GetAttributeFiles",
    "summary": "Gets attribute files with specified suffix from model, XS_FIRM and XS_PROJECT directories and subdirectories."
  },
  {
    "id": "GetMultiDirectoryFileList Method ",
    "name": "EnvironmentFiles.GetMultiDirectoryFileList Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.GetMultiDirectoryFileList",
    "summary": "Gets a list of files with the given extension from the default search directories."
  },
  {
    "id": "GetMultiDirectoryFileList Method (String)",
    "name": "EnvironmentFiles.GetMultiDirectoryFileList Method (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a list of files with the given extension from the default search directories."
  },
  {
    "id": "GetMultiDirectoryFileList Method (List(String), String)",
    "name": "EnvironmentFiles.GetMultiDirectoryFileList Method (List(String), String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a list of files with the given extension from the given search directories and from XS_FIRM, XS_PROJECT subdirectories."
  },
  {
    "id": "GetStandardPropertyFileDirectories Method ",
    "name": "EnvironmentFiles.GetStandardPropertyFileDirectories Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.GetStandardPropertyFileDirectories",
    "summary": "Gets the paths where to look for the property files."
  },
  {
    "id": "IsValidDirectory Method ",
    "name": "EnvironmentFiles.IsValidDirectory Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentFiles.IsValidDirectory",
    "summary": "Checks if a directory is valid."
  },
  {
    "id": "Add Method ",
    "name": "EnvironmentVariables.Add Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentVariables.Add",
    "summary": "Adds a variable to the list."
  },
  {
    "id": "Get Method ",
    "name": "EnvironmentVariables.Get Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentVariables.Get",
    "summary": "Gets a key."
  },
  {
    "id": "GetEnvironmentVariable Method ",
    "name": "EnvironmentVariables.GetEnvironmentVariable Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.EnvironmentVariables.GetEnvironmentVariable",
    "summary": "Gets an environment variable."
  },
  {
    "id": "ImageComboBox Constructor ",
    "name": "ImageComboBox Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox.#ctor",
    "summary": "Initializes a new instance of the ImageComboBox class."
  },
  {
    "id": "DefaultValue Property ",
    "name": "ImageComboBox.DefaultValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox.DefaultValue",
    "summary": "Gets or sets the default value in the image combo box."
  },
  {
    "id": "OptionList Property ",
    "name": "ImageComboBox.OptionList Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox.OptionList",
    "summary": "Gets or sets the elements of the option list, the images that are in the image combo box."
  },
  {
    "id": "SelectedIndex Property ",
    "name": "ImageComboBox.SelectedIndex Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox.SelectedIndex",
    "summary": "Gets or sets the selected index of the image in the image combo box."
  },
  {
    "id": "SelectedItem Property ",
    "name": "ImageComboBox.SelectedItem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageComboBox.SelectedItem",
    "summary": "Gets or sets the selected image in the image combo box."
  },
  {
    "id": "Name Property ",
    "name": "ImageItem.Name Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageItem.Name",
    "summary": "Gets or sets the image name."
  },
  {
    "id": "Picture Property ",
    "name": "ImageItem.Picture Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageItem.Picture",
    "summary": "Gets or sets the image."
  },
  {
    "id": "ImageList Constructor ",
    "name": "ImageList Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageList.#ctor",
    "summary": "Initializes a new instance of the ImageList class"
  },
  {
    "id": "ImageListComboBox Constructor ",
    "name": "ImageListComboBox Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.#ctor",
    "summary": "Initializes a new instance of the ImageListComboBox class."
  },
  {
    "id": "DefaultValue Property ",
    "name": "ImageListComboBox.DefaultValue Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.DefaultValue",
    "summary": "Gets or sets the default value in the image combo box. If the value is not found,\r\n            SelectedItem is used instead."
  },
  {
    "id": "HoverColor Property ",
    "name": "ImageListComboBox.HoverColor Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.HoverColor",
    "summary": "Gets or sets the hover color of the combo box."
  },
  {
    "id": "ImageList Property ",
    "name": "ImageListComboBox.ImageList Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.ImageList",
    "summary": "Gets or sets the ImageList that contains the images to be displayed in the combo box.\r\n            Recommended image file formats are JPG and BMP."
  },
  {
    "id": "SelectedIndex Property ",
    "name": "ImageListComboBox.SelectedIndex Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.SelectedIndex",
    "summary": "Gets or sets the selected index of the image in the image combo box."
  },
  {
    "id": "SelectedItem Property ",
    "name": "ImageListComboBox.SelectedItem Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.SelectedItem",
    "summary": "Gets or sets the selected image in the image combo box. If the image is not found,\r\n            SelectedIndex is used instead."
  },
  {
    "id": "ToolTipText Property ",
    "name": "ImageListComboBox.ToolTipText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.ToolTipText",
    "summary": "Gets or sets the tool tip text."
  },
  {
    "id": "RefreshOptionList Method ",
    "name": "ImageListComboBox.RefreshOptionList Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ImageListComboBox.RefreshOptionList",
    "summary": "Refreshes the option list content."
  },
  {
    "id": "LoadingForm Constructor ",
    "name": "LoadingForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.LoadingForm.#ctor",
    "summary": "Creates a new instance of the form."
  },
  {
    "id": "AllowClosing Property ",
    "name": "LoadingForm.AllowClosing Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.LoadingForm.AllowClosing",
    "summary": "Allows the closing of the dialog. By default disabled."
  },
  {
    "id": "Localization Property ",
    "name": "LocalizeForm.Localization Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.LocalizeForm.Localization",
    "summary": "Gets the localization for the dialog."
  },
  {
    "id": "MaterialCatalog Constructor ",
    "name": "MaterialCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "MaterialCatalog Constructor ",
    "name": "MaterialCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "MaterialCatalog Constructor (String)",
    "name": "MaterialCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MaterialCatalog and will select\r\n            the material (if available) in the tree."
  },
  {
    "id": "ButtonText Property ",
    "name": "MaterialCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "SelectedMaterial Property ",
    "name": "MaterialCatalog.SelectedMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialCatalog.SelectedMaterial",
    "summary": "Gets the selected material in the control."
  },
  {
    "id": "MaterialSelectionForm Constructor ",
    "name": "MaterialSelectionForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialSelectionForm.#ctor",
    "summary": "Creates a new instance of the MaterialSelectionForm."
  },
  {
    "id": "MaterialSelectionForm Constructor (List(MaterialItem))",
    "name": "MaterialSelectionForm Constructor (List(MaterialItem))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MaterialSelectionForm."
  },
  {
    "id": "MaterialSelectionForm Constructor (List(MaterialItem), String)",
    "name": "MaterialSelectionForm Constructor (List(MaterialItem), String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MaterialSelectionForm, selecting the given material in the tree control."
  },
  {
    "id": "SelectedMaterial Property ",
    "name": "MaterialSelectionForm.SelectedMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MaterialSelectionForm.SelectedMaterial",
    "summary": "The selected material in the control."
  },
  {
    "id": "MeshCatalog Constructor ",
    "name": "MeshCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ButtonText Property ",
    "name": "MeshCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "SelectedMeshGrade Property ",
    "name": "MeshCatalog.SelectedMeshGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshCatalog.SelectedMeshGrade",
    "summary": "The mesh grade in the control."
  },
  {
    "id": "SelectedMeshName Property ",
    "name": "MeshCatalog.SelectedMeshName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshCatalog.SelectedMeshName",
    "summary": "The mesh name in the control."
  },
  {
    "id": "MeshSelectionForm Constructor ",
    "name": "MeshSelectionForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshSelectionForm.#ctor",
    "summary": "Creates a new instance of the MeshSelectionForm."
  },
  {
    "id": "MeshSelectionForm Constructor (List(MeshItem))",
    "name": "MeshSelectionForm Constructor (List(MeshItem))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MeshSelectionForm."
  },
  {
    "id": "MeshSelectionForm Constructor (List(MeshItem), String, String)",
    "name": "MeshSelectionForm Constructor (List(MeshItem), String, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MeshSelectionForm and will select in the tree \r\n            the mesh that contains the given parameters (if possible)."
  },
  {
    "id": "SelectedMeshGrade Property ",
    "name": "MeshSelectionForm.SelectedMeshGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshSelectionForm.SelectedMeshGrade",
    "summary": "The selected mesh grade."
  },
  {
    "id": "SelectedMeshName Property ",
    "name": "MeshSelectionForm.SelectedMeshName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.MeshSelectionForm.SelectedMeshName",
    "summary": "The selected mesh name."
  },
  {
    "id": "ModelAccess Constructor ",
    "name": "ModelAccess Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ModelAccess.#ctor",
    "summary": "Initializes a new instance of the ModelAccess class"
  },
  {
    "id": "ConnectToModel Method ",
    "name": "ModelAccess.ConnectToModel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ModelAccess.ConnectToModel",
    "summary": "Gets a model connnection."
  },
  {
    "id": "ConnectToModel Method ",
    "name": "ModelAccess.ConnectToModel Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a model connnection."
  },
  {
    "id": "ConnectToModel Method (Boolean)",
    "name": "ModelAccess.ConnectToModel Method (Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a model connection."
  },
  {
    "id": "ConnectToModel Method (Model)",
    "name": "ModelAccess.ConnectToModel Method (Model)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Gets a model connection."
  },
  {
    "id": "OkApplyCancel Constructor ",
    "name": "OkApplyCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkApplyCancel.#ctor",
    "summary": "Initializes a new instance of the OkApplyCancel class."
  },
  {
    "id": "OkApplyModifyGetOnOffCancel Constructor ",
    "name": "OkApplyModifyGetOnOffCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel.#ctor",
    "summary": "Initializes a new instance of the OkApplyModifyGetOnOffCancel class."
  },
  {
    "id": "OkCancel Constructor ",
    "name": "OkCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.OkCancel.#ctor",
    "summary": "Initializes a new instance of the OkCancel class."
  },
  {
    "id": "OrganizerDialog Constructor ",
    "name": "OrganizerDialog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.OrganizerDialog.#ctor",
    "summary": "Initializes a new instance of the OrganizerDialog class."
  },
  {
    "id": "ProfileCatalog Constructor ",
    "name": "ProfileCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ProfileCatalog Constructor ",
    "name": "ProfileCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ProfileCatalog Constructor (String)",
    "name": "ProfileCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control selecting the given profile."
  },
  {
    "id": "ButtonText Property ",
    "name": "ProfileCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "SelectedProfile Property ",
    "name": "ProfileCatalog.SelectedProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileCatalog.SelectedProfile",
    "summary": "The selected profile in the control."
  },
  {
    "id": "OnValueChanged Method ",
    "name": "ProfileCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "ProfileSelectionForm Constructor ",
    "name": "ProfileSelectionForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileSelectionForm.#ctor",
    "summary": "Creates a new instance of the ProfileSelectionForm."
  },
  {
    "id": "ProfileSelectionForm Constructor (List(LibraryProfileItem), List(ParametricProfileItem))",
    "name": "ProfileSelectionForm Constructor (List(LibraryProfileItem), List(ParametricProfileItem))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ProfileSelectionForm."
  },
  {
    "id": "ProfileSelectionForm Constructor (List(LibraryProfileItem), List(ParametricProfileItem), String)",
    "name": "ProfileSelectionForm Constructor (List(LibraryProfileItem), List(ParametricProfileItem), String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ProfileSelectionForm selecting the given profile in the tree control."
  },
  {
    "id": "SelectedProfile Property ",
    "name": "ProfileSelectionForm.SelectedProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ProfileSelectionForm.SelectedProfile",
    "summary": "The selected profile."
  },
  {
    "id": "PropertiesDialog Constructor ",
    "name": "PropertiesDialog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.PropertiesDialog.#ctor",
    "summary": "Initializes a new instance of the PropertiesDialog class."
  },
  {
    "id": "ReinforcementCatalog Constructor ",
    "name": "ReinforcementCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ReinforcementCatalog Constructor ",
    "name": "ReinforcementCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ReinforcementCatalog Constructor (String, String, Double)",
    "name": "ReinforcementCatalog Constructor (String, String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ReinforcementCatalog and will select in the tree \r\n            the rebar that contains the given parameters (if possible)."
  },
  {
    "id": "ButtonText Property ",
    "name": "ReinforcementCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "SelectedRebarBendingRadius Property ",
    "name": "ReinforcementCatalog.SelectedRebarBendingRadius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.SelectedRebarBendingRadius",
    "summary": "Gets the selected rebar bending radius in the control."
  },
  {
    "id": "SelectedRebarGrade Property ",
    "name": "ReinforcementCatalog.SelectedRebarGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.SelectedRebarGrade",
    "summary": "Gets the selected rebar grade in the control."
  },
  {
    "id": "SelectedRebarSize Property ",
    "name": "ReinforcementCatalog.SelectedRebarSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.SelectedRebarSize",
    "summary": "Gets the selected rebar size in the control."
  },
  {
    "id": "OnValueChanged Method ",
    "name": "ReinforcementCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "ReinforcementSelectionForm Constructor ",
    "name": "ReinforcementSelectionForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.#ctor",
    "summary": "Creates a new instance of the ReinforcementSelectionForm."
  },
  {
    "id": "ReinforcementSelectionForm Constructor (List(RebarItem))",
    "name": "ReinforcementSelectionForm Constructor (List(RebarItem))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ReinforcementSelectionForm."
  },
  {
    "id": "ReinforcementSelectionForm Constructor (List(RebarItem), String, String, Double)",
    "name": "ReinforcementSelectionForm Constructor (List(RebarItem), String, String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ReinforcementSelectionForm and will select in the tree \r\n            the rebar that contains the given parameters (if possible)."
  },
  {
    "id": "ReinforcementSelectionForm Constructor (List(RebarItem), String, String, Double, String)",
    "name": "ReinforcementSelectionForm Constructor (List(RebarItem), String, String, Double, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ReinforcementSelectionForm and will select in the tree \r\n            the rebar that contains the given parameters (if possible)."
  },
  {
    "id": "Culture Property ",
    "name": "ReinforcementSelectionForm.Culture Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.Culture",
    "summary": "Gets the culture."
  },
  {
    "id": "SelectedBendingRadius Property ",
    "name": "ReinforcementSelectionForm.SelectedBendingRadius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.SelectedBendingRadius",
    "summary": "Gets the selected rebar bending radius."
  },
  {
    "id": "SelectedGrade Property ",
    "name": "ReinforcementSelectionForm.SelectedGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.SelectedGrade",
    "summary": "Gets the selected rebar grade."
  },
  {
    "id": "SelectedSize Property ",
    "name": "ReinforcementSelectionForm.SelectedSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.SelectedSize",
    "summary": "Gets the selected rebar size."
  },
  {
    "id": "SelectedUsage Property ",
    "name": "ReinforcementSelectionForm.SelectedUsage Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ReinforcementSelectionForm.SelectedUsage",
    "summary": "Gets the selected usage."
  },
  {
    "id": "SaveLoad Constructor ",
    "name": "SaveLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.#ctor",
    "summary": "Initializes a new instance of the SaveLoad class with the default language and file extensions."
  },
  {
    "id": "HelpFileType Property ",
    "name": "SaveLoad.HelpFileType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.HelpFileType",
    "summary": "Gets or sets the help file type."
  },
  {
    "id": "HelpKeyword Property ",
    "name": "SaveLoad.HelpKeyword Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.HelpKeyword",
    "summary": "Gets or sets the HelpKeyword that the help file should be opened for.\r\n            If you do not provide a HelpKeyword and HelpUrl is not set, the default \r\n            start page for Tekla Structures Help viewer is displayed."
  },
  {
    "id": "HelpUrl Property ",
    "name": "SaveLoad.HelpUrl Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.HelpUrl",
    "summary": "Gets or sets the HelpUrl where the help file is located.\r\n            If you do not provide a HelpUrl, the Tekla Structures help viewer will be displayed with given HelpKeyword."
  },
  {
    "id": "SaveAsText Property ",
    "name": "SaveLoad.SaveAsText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.SaveAsText",
    "summary": "Gets or sets the text in the SaveAs text box."
  },
  {
    "id": "SaveLoadText Property ",
    "name": "SaveLoad.SaveLoadText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.SaveLoadText",
    "summary": "Gets the currently selected file name in the Save/Load combo box."
  },
  {
    "id": "UserDefinedHelpFilePath Property ",
    "name": "SaveLoad.UserDefinedHelpFilePath Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.SaveLoad.UserDefinedHelpFilePath",
    "summary": "Gets or sets the file path where the UserDefined help file is located.\r\n            If you do not provide a UserDefinedHelpFilePath, the general Help file, help.chm, will be displayed."
  },
  {
    "id": "ShapeCatalog Constructor ",
    "name": "ShapeCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeCatalog.#ctor",
    "summary": "Initializes a new instance of the ShapeCatalog class."
  },
  {
    "id": "ShapeCatalog Constructor ",
    "name": "ShapeCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeCatalog class."
  },
  {
    "id": "ShapeCatalog Constructor (String)",
    "name": "ShapeCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeCatalog class and will select\r\n            the Shape (if available) in the tree."
  },
  {
    "id": "ButtonText Property ",
    "name": "ShapeCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "SelectedShape Property ",
    "name": "ShapeCatalog.SelectedShape Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeCatalog.SelectedShape",
    "summary": "Gets or sets the selected Shape in the control."
  },
  {
    "id": "OnValueChanged Method ",
    "name": "ShapeCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "ShapeSelectionForm Constructor ",
    "name": "ShapeSelectionForm Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeSelectionForm.#ctor",
    "summary": "Initializes a new instance of the ShapeSelectionForm class."
  },
  {
    "id": "ShapeSelectionForm Constructor (List(ShapeItem))",
    "name": "ShapeSelectionForm Constructor (List(ShapeItem))",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeSelectionForm class."
  },
  {
    "id": "ShapeSelectionForm Constructor (List(ShapeItem), String)",
    "name": "ShapeSelectionForm Constructor (List(ShapeItem), String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeSelectionForm class, selecting the given Shape in the tree control."
  },
  {
    "id": "SelectedShape Property ",
    "name": "ShapeSelectionForm.SelectedShape Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.ShapeSelectionForm.SelectedShape",
    "summary": "Gets or sets the selected Shape in the control."
  },
  {
    "id": "Tree Constructor ",
    "name": "Tree Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.Tree.#ctor",
    "summary": "Initializes a new instance of the Tree class."
  },
  {
    "id": "TreeViewDialog Constructor ",
    "name": "TreeViewDialog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.TreeViewDialog.#ctor",
    "summary": "Initializes a new instance of the TreeViewDialog class."
  },
  {
    "id": "WpfBoltCatalogSize Constructor ",
    "name": "WpfBoltCatalogSize Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfBoltCatalogSize.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfBoltCatalogStandard Constructor ",
    "name": "WpfBoltCatalogStandard Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfBoltCatalogStandard.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "BoltSizes Property ",
    "name": "WpfBoltCatalogStandard.BoltSizes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfBoltCatalogStandard.BoltSizes",
    "summary": "Returns bolt sizes in catalog based on selected grade"
  },
  {
    "id": "WpfComponentCatalog Constructor ",
    "name": "WpfComponentCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.#ctor",
    "summary": "Initializes a new instance of the WpfComponentCatalog class."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfComponentCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfComponentCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfComponentCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedName Property ",
    "name": "WpfComponentCatalog.SelectedName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.SelectedName",
    "summary": "Gets or sets the selected component name in the control."
  },
  {
    "id": "SelectedNumber Property ",
    "name": "WpfComponentCatalog.SelectedNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.SelectedNumber",
    "summary": "Gets or sets the selected component number in the control."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfComponentCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfComponentCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfCreateApplyCancel Constructor ",
    "name": "WpfCreateApplyCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfCreateApplyCancel.#ctor",
    "summary": "Constructor"
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfCreateApplyCancel.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfCreateApplyCancel.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfFilterCheckBox Constructor ",
    "name": "WpfFilterCheckBox Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfFilterCheckBox.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "AttributeName Property ",
    "name": "WpfFilterCheckBox.AttributeName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfFilterCheckBox.AttributeName",
    "summary": "Dialog attribute name defined with StructuresFieldAttribute"
  },
  {
    "id": "WpfMaterialCatalog Constructor ",
    "name": "WpfMaterialCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfMaterialCatalog Constructor ",
    "name": "WpfMaterialCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfMaterialCatalog Constructor (String)",
    "name": "WpfMaterialCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the MaterialCatalog and will select\r\n            the material (if available) in the tree."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfMaterialCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfMaterialCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfMaterialCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedMaterial Property ",
    "name": "WpfMaterialCatalog.SelectedMaterial Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.SelectedMaterial",
    "summary": "Gets the selected material in the control."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfMaterialCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMaterialCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfMeshCatalog Constructor ",
    "name": "WpfMeshCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfMeshCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfMeshCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfMeshCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedMeshGrade Property ",
    "name": "WpfMeshCatalog.SelectedMeshGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.SelectedMeshGrade",
    "summary": "The mesh grade in the control."
  },
  {
    "id": "SelectedMeshName Property ",
    "name": "WpfMeshCatalog.SelectedMeshName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.SelectedMeshName",
    "summary": "The mesh name in the control."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfMeshCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfMeshCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfOkApplyModifyGetOnOffCancel Constructor ",
    "name": "WpfOkApplyModifyGetOnOffCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkApplyModifyGetOnOffCancel.#ctor",
    "summary": "Constructor"
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfOkApplyModifyGetOnOffCancel.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkApplyModifyGetOnOffCancel.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfOkCreateCancel Constructor ",
    "name": "WpfOkCreateCancel Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkCreateCancel.#ctor",
    "summary": "Constructor"
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfOkCreateCancel.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfOkCreateCancel.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfProfileCatalog Constructor ",
    "name": "WpfProfileCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfProfileCatalog Constructor ",
    "name": "WpfProfileCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfProfileCatalog Constructor (String)",
    "name": "WpfProfileCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control selecting the given profile."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfProfileCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfProfileCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfProfileCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedProfile Property ",
    "name": "WpfProfileCatalog.SelectedProfile Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.SelectedProfile",
    "summary": "The selected profile in the control."
  },
  {
    "id": "Dispose Method ",
    "name": "WpfProfileCatalog.Dispose Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.Dispose",
    "summary": "Cleans up any resources being used."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfProfileCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "OnValueChanged Method ",
    "name": "WpfProfileCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfProfileCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "WpfReinforcementCatalog Constructor ",
    "name": "WpfReinforcementCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfReinforcementCatalog Constructor ",
    "name": "WpfReinforcementCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "WpfReinforcementCatalog Constructor (String, String, Double)",
    "name": "WpfReinforcementCatalog Constructor (String, String, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Creates a new instance of the ReinforcementCatalog and will select in the tree \r\n            the rebar that contains the given parameters (if possible)."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfReinforcementCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfReinforcementCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfReinforcementCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedRebarBendingRadius Property ",
    "name": "WpfReinforcementCatalog.SelectedRebarBendingRadius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.SelectedRebarBendingRadius",
    "summary": "Gets the selected rebar bending radius in the control."
  },
  {
    "id": "SelectedRebarGrade Property ",
    "name": "WpfReinforcementCatalog.SelectedRebarGrade Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.SelectedRebarGrade",
    "summary": "Gets the selected rebar grade in the control."
  },
  {
    "id": "SelectedRebarSize Property ",
    "name": "WpfReinforcementCatalog.SelectedRebarSize Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.SelectedRebarSize",
    "summary": "Gets the selected rebar size in the control."
  },
  {
    "id": "SelectedUsage Property ",
    "name": "WpfReinforcementCatalog.SelectedUsage Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.SelectedUsage",
    "summary": "Gets the selected rebar usage in the control."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfReinforcementCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "OnValueChanged Method ",
    "name": "WpfReinforcementCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfReinforcementCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "WpfSaveLoad Constructor ",
    "name": "WpfSaveLoad Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.#ctor",
    "summary": "Initializes a new instance of the WpfSaveLoad class with the default language and file extensions."
  },
  {
    "id": "HelpFileType Property ",
    "name": "WpfSaveLoad.HelpFileType Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.HelpFileType",
    "summary": "Gets or sets the help file type."
  },
  {
    "id": "HelpKeyword Property ",
    "name": "WpfSaveLoad.HelpKeyword Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.HelpKeyword",
    "summary": "Gets or sets the HelpKeyword that the help file should be opened for.\r\n            If you do not provide a HelpKeyword and HelpUrl is not set, the default \r\n            start page for Tekla Structures Help viewer is displayed."
  },
  {
    "id": "HelpUrl Property ",
    "name": "WpfSaveLoad.HelpUrl Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.HelpUrl",
    "summary": "Gets or sets the HelpUrl where the help file is located.\r\n            If you do not provide a HelpUrl, the Tekla Structures help viewer will be displayed with given HelpKeyword."
  },
  {
    "id": "SaveAsText Property ",
    "name": "WpfSaveLoad.SaveAsText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.SaveAsText",
    "summary": "Gets or sets the text in the SaveAs text box."
  },
  {
    "id": "SaveLoadText Property ",
    "name": "WpfSaveLoad.SaveLoadText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.SaveLoadText",
    "summary": "Gets the currently selected file name in the Save/Load combo box."
  },
  {
    "id": "SelectedFileName Property ",
    "name": "WpfSaveLoad.SelectedFileName Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.SelectedFileName",
    "summary": "Gets or sets the text in the SaveAs text box."
  },
  {
    "id": "UserDefinedHelpFilePath Property ",
    "name": "WpfSaveLoad.UserDefinedHelpFilePath Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.UserDefinedHelpFilePath",
    "summary": "Gets or sets the file path where the UserDefined help file is located.\r\n            If you do not provide a UserDefinedHelpFilePath, the general Help file, help.chm, will be displayed."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfSaveLoad.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSaveLoad.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "WpfShapeCatalog Constructor ",
    "name": "WpfShapeCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.#ctor",
    "summary": "Initializes a new instance of the ShapeCatalog class."
  },
  {
    "id": "WpfShapeCatalog Constructor ",
    "name": "WpfShapeCatalog Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeCatalog class."
  },
  {
    "id": "WpfShapeCatalog Constructor (String)",
    "name": "WpfShapeCatalog Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls",
    "summary": "Initializes a new instance of the ShapeCatalog class and will select\r\n            the Shape (if available) in the tree."
  },
  {
    "id": "ButtonHeight Property ",
    "name": "WpfShapeCatalog.ButtonHeight Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.ButtonHeight",
    "summary": "Gets and sets the height of the button control."
  },
  {
    "id": "ButtonText Property ",
    "name": "WpfShapeCatalog.ButtonText Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.ButtonText",
    "summary": "Gets and sets the text of the button control."
  },
  {
    "id": "ButtonWidth Property ",
    "name": "WpfShapeCatalog.ButtonWidth Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.ButtonWidth",
    "summary": "Gets and sets the width of the button control."
  },
  {
    "id": "SelectedShape Property ",
    "name": "WpfShapeCatalog.SelectedShape Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.SelectedShape",
    "summary": "Gets or sets the selected Shape in the control."
  },
  {
    "id": "InitializeComponent Method ",
    "name": "WpfShapeCatalog.InitializeComponent Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.InitializeComponent",
    "summary": "InitializeComponent"
  },
  {
    "id": "OnValueChanged Method ",
    "name": "WpfShapeCatalog.OnValueChanged Method",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfShapeCatalog.OnValueChanged",
    "summary": "Event handler for passing generic catalog data back to dialog"
  },
  {
    "id": "WpfSteelFinishComboBox Constructor ",
    "name": "WpfSteelFinishComboBox Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSteelFinishComboBox.#ctor",
    "summary": "Initiates a new instance of the control."
  },
  {
    "id": "Finish Property ",
    "name": "WpfSteelFinishComboBox.Finish Property",
    "type": "property",
    "namespace": "Tekla.Structures.Dialog.UIControls.WpfSteelFinishComboBox.Finish",
    "summary": "Gets or sets the finish value"
  },
  {
    "id": "AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType Constructor ",
    "name": "AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongLineOrWithLeaderLineAndParentObjectAlongPartPlacingType.#ctor",
    "summary": "Creates a new along line or with leader line and parent object along part placing type instance."
  },
  {
    "id": "AlongLineOrWithLeaderLinePlacingType Constructor ",
    "name": "AlongLineOrWithLeaderLinePlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongLineOrWithLeaderLinePlacingType.#ctor",
    "summary": "Creates a new along line or with leader line placing type instance."
  },
  {
    "id": "AlongLinePlacing Constructor ",
    "name": "AlongLinePlacing Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacing.#ctor",
    "summary": "Creates a new along line placing instance.\r\n            The given two points define the line to be used for the placing."
  },
  {
    "id": "EndPoint Property ",
    "name": "AlongLinePlacing.EndPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacing.EndPoint",
    "summary": "The end point of the line that the object is placed on."
  },
  {
    "id": "StartPoint Property ",
    "name": "AlongLinePlacing.StartPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacing.StartPoint",
    "summary": "The start point of the line that the object is placed on."
  },
  {
    "id": "IsEqual Method ",
    "name": "AlongLinePlacing.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacing.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "AlongLinePlacingType Constructor ",
    "name": "AlongLinePlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongLinePlacingType.#ctor",
    "summary": "Creates a new along line placing type instance."
  },
  {
    "id": "AlongPartCenteredPlacingType Constructor ",
    "name": "AlongPartCenteredPlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AlongPartCenteredPlacingType.#ctor",
    "summary": "Creates a new along part centered placing type instance."
  },
  {
    "id": "AngleDimension Constructor ",
    "name": "AngleDimension Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.#ctor",
    "summary": "Creates a new angle dimension instance using three points."
  },
  {
    "id": "AngleDimension Constructor (ViewBase, Point, Point, Point, Double)",
    "name": "AngleDimension Constructor (ViewBase, Point, Point, Point, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension instance using three points."
  },
  {
    "id": "AngleDimension Constructor (ViewBase, Point, Vector, Vector, Double)",
    "name": "AngleDimension Constructor (ViewBase, Point, Vector, Vector, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension instance using the origin and two vectors relative to the origin."
  },
  {
    "id": "AngleDimension Constructor (ViewBase, Point, Point, Point, Double, AngleDimensionAttributes)",
    "name": "AngleDimension Constructor (ViewBase, Point, Point, Point, Double, AngleDimensionAttributes)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension instance using three points."
  },
  {
    "id": "AngleDimension Constructor (ViewBase, Point, Vector, Vector, Double, AngleDimensionAttributes)",
    "name": "AngleDimension Constructor (ViewBase, Point, Vector, Vector, Double, AngleDimensionAttributes)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension instance using the origin and two vectors relative to the origin."
  },
  {
    "id": "Attributes Property ",
    "name": "AngleDimension.Attributes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Attributes",
    "summary": "Gets or sets the angle dimension attributes."
  },
  {
    "id": "Distance Property ",
    "name": "AngleDimension.Distance Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Distance",
    "summary": "Gets or sets the distance (from the origin to the second point's direction).\r\n            The distance is measured in paper millimeters."
  },
  {
    "id": "Origin Property ",
    "name": "AngleDimension.Origin Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Origin",
    "summary": "Gets or sets the origin of the dimension."
  },
  {
    "id": "Point1 Property ",
    "name": "AngleDimension.Point1 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Point1",
    "summary": "Gets or sets the first point."
  },
  {
    "id": "Point2 Property ",
    "name": "AngleDimension.Point2 Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Point2",
    "summary": "Gets or sets the second point."
  },
  {
    "id": "Delete Method ",
    "name": "AngleDimension.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Delete",
    "summary": "Deletes the dimension from the database."
  },
  {
    "id": "GetAngle Method ",
    "name": "AngleDimension.GetAngle Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.GetAngle",
    "summary": "Gets the angle value (in degrees)."
  },
  {
    "id": "GetDimensionSet Method ",
    "name": "AngleDimension.GetDimensionSet Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.GetDimensionSet",
    "summary": "The angle dimension doesn't have a dimension set."
  },
  {
    "id": "GetDimensionSet Method ",
    "name": "AngleDimension.GetDimensionSet Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "The angle dimension doesn't have a dimension set."
  },
  {
    "id": "GetDimensionSet Method (Boolean)",
    "name": "AngleDimension.GetDimensionSet Method (Boolean)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "The angle dimension doesn't have a dimension set."
  },
  {
    "id": "Insert Method ",
    "name": "AngleDimension.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Insert",
    "summary": "Inserts the dimension into the database."
  },
  {
    "id": "IsEqual Method ",
    "name": "AngleDimension.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "Modify Method ",
    "name": "AngleDimension.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Modify",
    "summary": "Modifies the existing dimension in the database."
  },
  {
    "id": "Select Method ",
    "name": "AngleDimension.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimension.Select",
    "summary": "Selects the angle dimension from the database."
  },
  {
    "id": "AngleDimensionAttributes Constructor ",
    "name": "AngleDimensionAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes.#ctor",
    "summary": "Creates a new angle dimension attributes instance which loads standard attributes."
  },
  {
    "id": "AngleDimensionAttributes Constructor ",
    "name": "AngleDimensionAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension attributes instance which loads standard attributes."
  },
  {
    "id": "AngleDimensionAttributes Constructor (String)",
    "name": "AngleDimensionAttributes Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new angle dimension attributes instance that loads the specified attributes."
  },
  {
    "id": "TriangleBase Property ",
    "name": "AngleDimensionAttributes.TriangleBase Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes.TriangleBase",
    "summary": "Gets or sets the triangle base length which controls the base dimension\r\n            shown for bevel dimensions (only if Type is AngleTypes.Triangle)."
  },
  {
    "id": "Type Property ",
    "name": "AngleDimensionAttributes.Type Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes.Type",
    "summary": "The type of the angle."
  },
  {
    "id": "IsEqual Method ",
    "name": "AngleDimensionAttributes.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "LoadAttributes Method ",
    "name": "AngleDimensionAttributes.LoadAttributes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AngleDimensionAttributes.LoadAttributes",
    "summary": "Loads attributes from the attribute file."
  },
  {
    "id": "Arc Constructor ",
    "name": "Arc Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.#ctor",
    "summary": "Creates a new arc instance with standard attributes and the given two points and radius."
  },
  {
    "id": "Arc Constructor (ViewBase, Point, Point, Double)",
    "name": "Arc Constructor (ViewBase, Point, Point, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arc instance with standard attributes and the given two points and radius."
  },
  {
    "id": "Arc Constructor (ViewBase, Point, Point, Point)",
    "name": "Arc Constructor (ViewBase, Point, Point, Point)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arc instance with standard attributes and the given three points."
  },
  {
    "id": "Arc Constructor (ViewBase, Point, Point, Double, Arc.ArcAttributes)",
    "name": "Arc Constructor (ViewBase, Point, Point, Double, Arc.ArcAttributes)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arc instance with the given two points, radius and specified attributes."
  },
  {
    "id": "Arc Constructor (ViewBase, Point, Point, Point, Arc.ArcAttributes)",
    "name": "Arc Constructor (ViewBase, Point, Point, Point, Arc.ArcAttributes)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arc instance with the given three points and specified attributes."
  },
  {
    "id": "Attributes Property ",
    "name": "Arc.Attributes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Arc.Attributes",
    "summary": "The attributes of the arc."
  },
  {
    "id": "EndPoint Property ",
    "name": "Arc.EndPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Arc.EndPoint",
    "summary": "The end point of the arc."
  },
  {
    "id": "Radius Property ",
    "name": "Arc.Radius Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Arc.Radius",
    "summary": "The radius of the arc."
  },
  {
    "id": "StartPoint Property ",
    "name": "Arc.StartPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Arc.StartPoint",
    "summary": "The start point of the arc."
  },
  {
    "id": "Delete Method ",
    "name": "Arc.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.Delete",
    "summary": "Calls the system to delete the object."
  },
  {
    "id": "Insert Method ",
    "name": "Arc.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.Insert",
    "summary": "Calls the system to insert the new object."
  },
  {
    "id": "IsEqual Method ",
    "name": "Arc.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "Modify Method ",
    "name": "Arc.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.Modify",
    "summary": "Calls the system to update/modify the object."
  },
  {
    "id": "Select Method ",
    "name": "Arc.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.Select",
    "summary": "Calls the system to select and retrieve the object."
  },
  {
    "id": "ArcAttributes Constructor ",
    "name": "ArcAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.ArcAttributes.#ctor",
    "summary": "Creates a new default arc attributes instance that loads standard attributes."
  },
  {
    "id": "Arc.ArcAttributes Constructor ",
    "name": "Arc.ArcAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new default arc attributes instance that loads standard attributes."
  },
  {
    "id": "Arc.ArcAttributes Constructor (String)",
    "name": "Arc.ArcAttributes Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arc attributes instance that loads the specified attributes."
  },
  {
    "id": "IsEqual Method ",
    "name": "Arc.ArcAttributes.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.ArcAttributes.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "LoadAttributes Method ",
    "name": "Arc.ArcAttributes.LoadAttributes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Arc.ArcAttributes.LoadAttributes",
    "summary": "Loads the attributes from the attribute file."
  },
  {
    "id": "ArrowheadAttributes Constructor ",
    "name": "ArrowheadAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.#ctor",
    "summary": "Creates a new default arrowhead attributes instance. The default values are ArrowheadPositions.None, ArrowheadTypes.FilledArrow, height 2.0 and width 1.0."
  },
  {
    "id": "ArrowheadAttributes Constructor ",
    "name": "ArrowheadAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new default arrowhead attributes instance. The default values are ArrowheadPositions.None, ArrowheadTypes.FilledArrow, height 2.0 and width 1.0."
  },
  {
    "id": "ArrowheadAttributes Constructor (ArrowheadPositions, ArrowheadTypes, Double, Double)",
    "name": "ArrowheadAttributes Constructor (ArrowheadPositions, ArrowheadTypes, Double, Double)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new arrowhead attributes instance with the given parameters."
  },
  {
    "id": "ArrowPosition Property ",
    "name": "ArrowheadAttributes.ArrowPosition Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.ArrowPosition",
    "summary": "The position of the arrowhead. The position is always ArrowheadPositions.Both for dimensions."
  },
  {
    "id": "Head Property ",
    "name": "ArrowheadAttributes.Head Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.Head",
    "summary": "The type of the arrowhead."
  },
  {
    "id": "Height Property ",
    "name": "ArrowheadAttributes.Height Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.Height",
    "summary": "The height of the arrowhead."
  },
  {
    "id": "Width Property ",
    "name": "ArrowheadAttributes.Width Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.Width",
    "summary": "The width of the arrowhead."
  },
  {
    "id": "IsEqual Method ",
    "name": "ArrowheadAttributes.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.ArrowheadAttributes.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "AssemblyDrawing Constructor ",
    "name": "AssemblyDrawing Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.#ctor",
    "summary": "Instantiates a new assembly drawing with standard attributes."
  },
  {
    "id": "AssemblyDrawing Constructor (Identifier)",
    "name": "AssemblyDrawing Constructor (Identifier)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new assembly drawing with standard attributes."
  },
  {
    "id": "AssemblyDrawing Constructor (Identifier, Int32)",
    "name": "AssemblyDrawing Constructor (Identifier, Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new assembly drawing with standard attributes and with a specified sheet number."
  },
  {
    "id": "AssemblyDrawing Constructor (Identifier, String)",
    "name": "AssemblyDrawing Constructor (Identifier, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new assembly drawing with given attributes."
  },
  {
    "id": "AssemblyDrawing Constructor (Identifier, Int32, String)",
    "name": "AssemblyDrawing Constructor (Identifier, Int32, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new assembly drawing with given attributes and with a specified sheet number."
  },
  {
    "id": "AssemblyIdentifier Property ",
    "name": "AssemblyDrawing.AssemblyIdentifier Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.AssemblyIdentifier",
    "summary": "The identifier of the model object assembly."
  },
  {
    "id": "SheetNumber Property ",
    "name": "AssemblyDrawing.SheetNumber Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.SheetNumber",
    "summary": "The sheet number of the drawing."
  },
  {
    "id": "Insert Method ",
    "name": "AssemblyDrawing.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.Insert",
    "summary": "Inserts a new assembly drawing. Views are added according to the View Creation rules of the standard file.\r\n            A drawing can be inserted only when there is no active drawing."
  },
  {
    "id": "Modify Method ",
    "name": "AssemblyDrawing.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.Modify",
    "summary": "Updates the drawing object in the database."
  },
  {
    "id": "Select Method ",
    "name": "AssemblyDrawing.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AssemblyDrawing.Select",
    "summary": "Selects the drawing."
  },
  {
    "id": "IsEqual Method ",
    "name": "AttributesBase.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AttributesBase.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "LoadAttributes Method ",
    "name": "AttributesBase.LoadAttributes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.AttributesBase.LoadAttributes",
    "summary": "Loads the attributes from the specified file."
  },
  {
    "id": "BaseLinePlacing Constructor ",
    "name": "BaseLinePlacing Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacing.#ctor",
    "summary": "Creates a new base line placing instance.\r\n            The given two points define the line to be used for the placing."
  },
  {
    "id": "EndPoint Property ",
    "name": "BaseLinePlacing.EndPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacing.EndPoint",
    "summary": "Sets the end point of the line that the object is using for the placement."
  },
  {
    "id": "StartPoint Property ",
    "name": "BaseLinePlacing.StartPoint Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacing.StartPoint",
    "summary": "Sets the start point of the line that the object is using for the placement."
  },
  {
    "id": "IsEqual Method ",
    "name": "BaseLinePlacing.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacing.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "BaseLinePlacingType Constructor ",
    "name": "BaseLinePlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.BaseLinePlacingType.#ctor",
    "summary": "Creates a new base line placing type instance."
  },
  {
    "id": "BaseLineWithArrowAtEndPointPlacingType Constructor ",
    "name": "BaseLineWithArrowAtEndPointPlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.BaseLineWithArrowAtEndPointPlacingType.#ctor",
    "summary": "Creates a new base line with arrow at end point placing type instance."
  },
  {
    "id": "BaseLineWithArrowAtStartPointPlacingType Constructor ",
    "name": "BaseLineWithArrowAtStartPointPlacingType Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.BaseLineWithArrowAtStartPointPlacingType.#ctor",
    "summary": "Creates a new base line with arrow at start point placing type instance."
  },
  {
    "id": "Attributes Property ",
    "name": "Bolt.Attributes Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.Attributes",
    "summary": "The attributes of the bolt. For more information see ."
  },
  {
    "id": "Delete Method ",
    "name": "Bolt.Delete Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.Delete",
    "summary": "Calls the system to delete the object."
  },
  {
    "id": "Insert Method ",
    "name": "Bolt.Insert Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.Insert",
    "summary": "NOT IMPLEMENTED."
  },
  {
    "id": "IsEqual Method ",
    "name": "Bolt.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "Modify Method ",
    "name": "Bolt.Modify Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.Modify",
    "summary": "Calls the system to update/modify the object."
  },
  {
    "id": "Select Method ",
    "name": "Bolt.Select Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.Select",
    "summary": "Calls the system to select and retrieve the object."
  },
  {
    "id": "BoltAttributes Constructor ",
    "name": "BoltAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.#ctor",
    "summary": "Creates a new default bolt attributes instance that loads standard attributes."
  },
  {
    "id": "Bolt.BoltAttributes Constructor ",
    "name": "Bolt.BoltAttributes Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new default bolt attributes instance that loads standard attributes."
  },
  {
    "id": "Bolt.BoltAttributes Constructor (String)",
    "name": "Bolt.BoltAttributes Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new bolt attributes instance that loads the specified attributes."
  },
  {
    "id": "Color Property ",
    "name": "Bolt.BoltAttributes.Color Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.Color",
    "summary": "The color of the bolt."
  },
  {
    "id": "CustomPresentation Property ",
    "name": "Bolt.BoltAttributes.CustomPresentation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.CustomPresentation",
    "summary": "Custom presentation GUID to be applied to the bolt"
  },
  {
    "id": "Representation Property ",
    "name": "Bolt.BoltAttributes.Representation Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.Representation",
    "summary": "The representation type of the bolt."
  },
  {
    "id": "SymbolContainsAxis Property ",
    "name": "Bolt.BoltAttributes.SymbolContainsAxis Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.SymbolContainsAxis",
    "summary": "True if the bolt symbol contains an axis."
  },
  {
    "id": "SymbolContainsHole Property ",
    "name": "Bolt.BoltAttributes.SymbolContainsHole Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.SymbolContainsHole",
    "summary": "True if the bolt symbol contains a hole."
  },
  {
    "id": "TrueColor Property ",
    "name": "Bolt.BoltAttributes.TrueColor Property",
    "type": "property",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.TrueColor",
    "summary": "The true color (RGB enabled) of the bolt."
  },
  {
    "id": "IsEqual Method ",
    "name": "Bolt.BoltAttributes.IsEqual Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.IsEqual",
    "summary": "Compares the current object with an object of the same type."
  },
  {
    "id": "LoadAttributes Method ",
    "name": "Bolt.BoltAttributes.LoadAttributes Method",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.Bolt.BoltAttributes.LoadAttributes",
    "summary": "Loads the attributes from the attribute file."
  },
  {
    "id": "CannotCreateSectionViewFrom3dView Constructor ",
    "name": "CannotCreateSectionViewFrom3dView Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotCreateSectionViewFrom3dView.#ctor",
    "summary": "Creates a new cannot create section view from 3d view exception instance."
  },
  {
    "id": "CannotDeleteActiveDrawingException Constructor ",
    "name": "CannotDeleteActiveDrawingException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotDeleteActiveDrawingException.#ctor",
    "summary": "Creates a new cannot delete active drawing exception instance."
  },
  {
    "id": "CannotGetAttributeForPluginDueToIncorrectTypeException Constructor ",
    "name": "CannotGetAttributeForPluginDueToIncorrectTypeException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginDueToIncorrectTypeException.#ctor",
    "summary": "Creates a new CannotGetAttributeForPluginDueToIncorrectTypeException instance."
  },
  {
    "id": "CannotGetAttributeForPluginDueToInexistantFieldException Constructor ",
    "name": "CannotGetAttributeForPluginDueToInexistantFieldException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginDueToInexistantFieldException.#ctor",
    "summary": "Creates a new CannotGetAttributeForPluginDueToInexistantFieldException instance."
  },
  {
    "id": "CannotGetAttributeForPluginException Constructor ",
    "name": "CannotGetAttributeForPluginException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotGetAttributeForPluginException.#ctor",
    "summary": "Creates a new CannotGetAttributeForPluginException instance."
  },
  {
    "id": "CannotGetAttributeForPluginException Constructor ",
    "name": "CannotGetAttributeForPluginException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new CannotGetAttributeForPluginException instance."
  },
  {
    "id": "CannotGetAttributeForPluginException Constructor (String)",
    "name": "CannotGetAttributeForPluginException Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new CannotGetAttributeForPluginException instance."
  },
  {
    "id": "CannotInsertDrawingException Constructor ",
    "name": "CannotInsertDrawingException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotInsertDrawingException.#ctor",
    "summary": "Creates a new cannot insert drawing exception instance."
  },
  {
    "id": "CannotLoadAttributesException Constructor ",
    "name": "CannotLoadAttributesException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotLoadAttributesException.#ctor",
    "summary": "Creates a new cannot load attributes exception instance."
  },
  {
    "id": "CannotModifyNonActiveDrawingException Constructor ",
    "name": "CannotModifyNonActiveDrawingException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotModifyNonActiveDrawingException.#ctor",
    "summary": "Creates a new cannot modify non-active drawing exception instance."
  },
  {
    "id": "CannotPerformOperationDrawingEditorMustBeClosedException Constructor ",
    "name": "CannotPerformOperationDrawingEditorMustBeClosedException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingEditorMustBeClosedException.#ctor",
    "summary": "Creates a new cannot perform operation drawing editor must be closed exception instance."
  },
  {
    "id": "CannotPerformOperationDrawingIsActiveException Constructor ",
    "name": "CannotPerformOperationDrawingIsActiveException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingIsActiveException.#ctor",
    "summary": "Creates a new cannot perform operation drawing is active exception instance."
  },
  {
    "id": "CannotPerformOperationDrawingMustBeActiveException Constructor ",
    "name": "CannotPerformOperationDrawingMustBeActiveException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingMustBeActiveException.#ctor",
    "summary": "Creates a new cannot perform operation drawing must be active exception instance."
  },
  {
    "id": "CannotPerformOperationDrawingNotUpToDateException Constructor ",
    "name": "CannotPerformOperationDrawingNotUpToDateException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationDrawingNotUpToDateException.#ctor",
    "summary": "Creates a new cannot perform operation drawing not up to date exception instance."
  },
  {
    "id": "CannotPerformOperationNumberingNotUpToDate Constructor ",
    "name": "CannotPerformOperationNumberingNotUpToDate Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotPerformOperationNumberingNotUpToDate.#ctor",
    "summary": "Creates a new cannot perform operation numbering not up to date exception instance."
  },
  {
    "id": "CannotSetAttributeForPluginDueToIncorrectTypeException Constructor ",
    "name": "CannotSetAttributeForPluginDueToIncorrectTypeException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginDueToIncorrectTypeException.#ctor",
    "summary": "Creates a new CannotSetAttributeForPluginDueToIncorrectTypeException instance."
  },
  {
    "id": "CannotSetAttributeForPluginDueToInexistantFieldException Constructor ",
    "name": "CannotSetAttributeForPluginDueToInexistantFieldException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginDueToInexistantFieldException.#ctor",
    "summary": "Creates a new CannotSetAttributeForPluginDueToInexistantFieldException instance."
  },
  {
    "id": "CannotSetAttributeForPluginException Constructor ",
    "name": "CannotSetAttributeForPluginException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CannotSetAttributeForPluginException.#ctor",
    "summary": "Creates a new CannotSetAttributeForPluginException instance."
  },
  {
    "id": "CannotSetAttributeForPluginException Constructor ",
    "name": "CannotSetAttributeForPluginException Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new CannotSetAttributeForPluginException instance."
  },
  {
    "id": "CannotSetAttributeForPluginException Constructor (String)",
    "name": "CannotSetAttributeForPluginException Constructor (String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Creates a new CannotSetAttributeForPluginException instance."
  },
  {
    "id": "CastUnitDrawing Constructor ",
    "name": "CastUnitDrawing Constructor",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing.CastUnitDrawing.#ctor",
    "summary": "Instantiates a new cast unit drawing with standard attributes for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier)",
    "name": "CastUnitDrawing Constructor (Identifier)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing with standard attributes for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier, Int32)",
    "name": "CastUnitDrawing Constructor (Identifier, Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing with standard attributes and with a specified sheet number for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier, String)",
    "name": "CastUnitDrawing Constructor (Identifier, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing with given attributes for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier, CastUnitDrawing.CastUnitDrawingCreationType)",
    "name": "CastUnitDrawing Constructor (Identifier, CastUnitDrawing.CastUnitDrawingCreationType)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing with standard attributes for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier, Int32, String)",
    "name": "CastUnitDrawing Constructor (Identifier, Int32, String)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing with given attributes and with a specified sheet number for a given cast unit."
  },
  {
    "id": "CastUnitDrawing Constructor (Identifier, CastUnitDrawing.CastUnitDrawingCreationType, Int32)",
    "name": "CastUnitDrawing Constructor (Identifier, CastUnitDrawing.CastUnitDrawingCreationType, Int32)",
    "type": "method",
    "namespace": "Tekla.Structures.Drawing",
    "summary": "Instantiates a new cast unit drawing by id with standard attributes and with a specified sheet number for a given cast unit."
  }
]